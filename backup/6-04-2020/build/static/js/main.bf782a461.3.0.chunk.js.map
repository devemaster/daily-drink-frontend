{"version":3,"sources":["assets/images/loader-example.gif","assets/images/icon-left.svg","assets/images/novusone-logo.png","utils/localStore.js","action/actionTypes.js","constants.js","api/loginApi.js","action/loginActions.js","container/login/Form/form.js","container/login/login.js","container/forgetpassword/forgetpasswordForm/forgetPasswordForm.js","api/forgotPasswordApi.js","action/forgotPasswordActions.js","container/forgetpassword/forgetPassword.js","api/userApi.js","helper/helper.js","action/userActions.js","component/LayoutWrapper/index.js","api/userApprovedApi.js","action/approvedUserActions.js","api/deleteUserApi.js","action/deleteUserActions.js","api/applicationApi.js","action/applicationActions.js","api/userApproveAppApi.js","action/approveUserAppActions.js","api/checkUserApi.js","action/checkUserActions.js","container/users/users.js","api/deleteApplicationApi.js","action/deleteApplicationActions.js","container/applications/applications.js","api/createUserApi.js","action/createUserActions.js","container/createUser/formValidation.js","container/createUser/createUser.js","api/editUserApi.js","action/editUserActions.js","container/editUser/formValidation.js","container/editUser/editUser.js","api/createApplicationApi.js","action/createApplicationActions.js","api/uploadAppIconApi.js","action/uploadAppIconActions.js","container/createApplication/formValidation.js","container/createApplication/createApplication.js","api/updateApplicationApi.js","action/updateApplicationActions.js","container/updateApplication/formValidation.js","container/updateApplication/updateApplication.js","api/userSearchApi.js","action/userSearchActions.js","api/createNotificationApi.js","action/createNotificationActions.js","container/createNotification/formValidation.js","container/createNotification/createNotification.js","api/resetPasswordApi.js","action/resetPasswordActions.js","container/passwordreset/resetpasswordForm/resetpasswordForm.js","container/passwordreset/reset-password.js","api/adminDetailsApi.js","action/adminDetailsActions.js","api/deleteAdminApi.js","action/deleteAdminActions.js","container/adminDetails/adminDetails.js","api/createAdminApi.js","action/createAdminActions.js","container/createAdmin/formValidation.js","container/createAdmin/createAdmin.js","api/novusBiApi.js","action/novusBiActions.js","container/novusBi/novusBi.js","container/novusBiCreate/formValidation.js","container/novusBiCreate/novusBiCreate.js","api/novusBiArticleApi.js","action/novusBiArticleActions.js","container/novusBiArticle/formValidation.js","container/novusBiArticle/novusBiArticle.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/index.js","reducers/userReducer.js","reducers/userListReducer.js","reducers/createUserReducer.js","reducers/deleteUserReducer.js","reducers/editUserReducer.js","reducers/userApprovedReducer.js","reducers/countryListReducer.js","reducers/stateListReducer.js","reducers/cityListReducer.js","reducers/applicationListReducer.js","reducers/createApplicationReducer.js","reducers/updateApplicationReducer.js","reducers/deleteApplicationReducer.js","reducers/uploadAppIconReducer.js","reducers/createNotificationReducer.js","reducers/userSearchReducer.js","reducers/userApproveAppReducer.js","reducers/createAdminReducer.js","reducers/adminDetailsReducer.js","reducers/deleteAdminReducer.js","reducers/checkUserReducer.js","reducers/novusBiReducer.js","reducers/novusBiCreateReducer.js","reducers/novusBiArticleReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","setItem","key","value","localStorage","err","getItem","serializedItem","undefined","DO_LOGIN_RES","DO_FORGOTPASSWORD_RES","DO_ALL_USERS_RES","DO_CREATE_USER_RES","DO_DELETE_USER_RES","DO_UPDATE_USER_RES","DO_USER_APPROVED_RES","FETCH_All_COUNTRY_RES","FETCH_All_STATE_RES","FETCH_All_CITY_RES","FETCH_All_APPLICATION_RES","CREATE_APPLICATION_RES","UPDATE_APPLICATION_RES","DELETE_APPLICATION_RES","UPLOAD_APPLICATION_ICON_RES","CREATE_NOTIFICATION_RES","DO_ALL_SEARCH_USERS_RES","DO_USER_APPROVE_APP_RES","DO_RESETPASSWORD_RES","DO_CREATE_ADMIN_RES","DO_APP_ADMIN_RES","DELETE_ADMIN_RES","DO_CHECK_USER_RES","FETCH_NOVUSBI_RES","DO_NOVUSBI_ARTICLE_RES","BASE_URL","loginApi","data","sendBody","email","password","encrypted_password","body","method","headers","Headers","Content-Type","Accept","JSON","stringify","fetch","then","response","json","catch","error","doLoginRes","user","type","types","lower","toLowerCase","renderField","_ref","input","label","_ref$meta","meta","touched","react_default","a","createElement","Object","assign","className","placeholder","LoginForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","props","reset","_this$props","handleSubmit","handleFormSubmit","pristine","submitting","onSubmit","Field","name","component","autoComplete","normalize","react_router_dom","to","disabled","React","PureComponent","mapStateToProps","createStructuredSelector","ReduxLoginForm","reduxForm","form","fields","validate","values","errors","destroyOnUnmount","enableReinitialize","keepDirtyOnReinitialize","touchOnBlur","connect","dispatch","ownProps","LoginComponent","isLoader","client_ip","remainingDay","nextProps","loginRes","success","window","location","href","setTimeout","setState","sendRequest","_this2","spinner","src","loaderImg","alt","react_loader_advanced_default","show","message","logoImg","Form_form","withConnect","doLogin","token","fullname","role_id","application_data","app_id","app_name","Swal","fire","title","confirmButtonText","allowOutsideClick","timer","console","log","submit_login","compose","ForgotpasswordForm","forgotPasswordApi","ok","doForgotpasswordRes","ForgetPasswordComponent","style","textAlign","fontSize","color","forgetPasswordForm","forgotpasswordRes","doForgotpassword","submitForgotpassword","usersApi","TOKEN","ajaxRequestHeaders","Authorization","status","clear","logout","doUserAllRes","getAllUsers","UsersApi","doUserAll","page","LayoutWrapper","toggleLeftSidebar","leftSidebar","goCustomer","fullName","appName","pathname","split","adminApp","geturl","url","open","width","height","Helmet_default","onClick","data-attr","id","data-parent","aria-hidden","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","children","userApprovedApi","doUserApprovedRes","deleteUserApi","doDeleteUserRes","ApplicationApi","getAllApplicationRes","fetchAllApplication","getAllApplication","userApproveAppApi","doUserApproveAppRes","checkUserApi","doCheckUserRes","checkUserName","doCheckUser","isApprove","isDelete","userRole","isUserAvailable","UsersComponent","approvedUser","isSubmited","keys","length","selectedUsr","selectedUserList","i","application_name","payReq","create_user","user_id","selectedUserId","approveAppUser","deleteUser","payLoad","userId","deleteUserRecord","isdisabled","updateUser","history","push","userData","actionUpdateTemplate","rowData","openDeleteModal","actionAddressTemplate","address1","address2","statusTemplate","openDeleteUserModal","cancelDeleteUser","openApproved","appUserName","app_user","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","applicationList","Symbol","iterator","next","done","item","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","app","application_id","return","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","applicationName","openApprovedModal","closeApproved","applicationId","userName","closeErrorModal","openErrorModal","addApproved","isSubmitedUser","validateUser","requestData","UserName","removeApproved","uiRender","index","indexOf","removeData","slice","concat","actionApproveTemplate","globalFilter","usersList","actionTemplate","bind","assertThisInitialized","approveDisapprove","createApproved","getUsers","allApplicationRes","allUsersRes","allUser","userApproveAppRes","userApproveApp","checkUserRes","checkUser","localArray","isTrue","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","user_name","localArr","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","Number","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","payloadReq","updateUserStatus","e","defineProperty","target","column","_this3","_this4","_this$state","errorsUser","Header","tableHeader","margin","onInput","size","component_LayoutWrapper","header","createUser","paddingLeft","paddingRight","paddingTop","paddingBottom","DataTable","paginator","rows","responsive","scrollable","emptyMessage","Column","field","sortable","index_es","onClose","center","marginTop","onChange","map","opp","j","readOnly","date","doUserApproved","deleteUserDetails","doUserApproveApp","DeleteApplicationApi","doDeleteAppRes","deleteApplicationRecord","doDeleteApp","ApplicationsComponent","goUpdateApplication","appData","deleteApp","isDisabled","payload","appId","openDeleteApp","openDeleteAppModal","cancelDeleteApp","actionIconTemplate","icon","adminActionTemplate","goToAdmin","applicationData","renderUI","parse","app_icon","itemArr","deleteApplication","createApp","createUserApi","countryid","stateId","doCreateUserRes","doAllCountryRes","getAllCountry","fetchAllCountry","doAllStateRes","getAllState","fetchAllState","doAllCityRes","getAllCity","fetchAllCity","company","country","city","zipcode","CreateUserComponent","handleBack","handleChange","countryChange","selectedCountry","original","stateChange","selectedState","state_id","cityChange","selectedCity","filteredItems","showHidePass","showPasshword","countryList","stateList","cityList","countriesList","citylist","createUserRes","countryListOptions","country_name","stateListOptions","state_name","cityListOptions","city_name","city_id","BackIcon","react_select_browser_esm","options","doCreateUser","submitCreateUser","editUserApi","doEditUserRes","isCountry","isState","isCity","isApplication","EditUserComponent","goBack","userDetails","appUser","items","selectedCountryObject","selectedStateObject","selectedCityObject","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","doEditUser","submitUpdateUser","CreateApplicationApi","doCreateApplicationRes","submitCreateApplication","doCreateApplication","UploadAppIconApi","file","FormData","append","mimeType","doUploadAppIconRes","uploadAppIcon","doUploadAppIcon","CreateApplicationComponent","_isMounted","selectedCon","selectedCountries","join","selectedUser","handleFileChange","files","uploadImage","userChange","imageurl","createAppRes","createApplication","userListOptions","accept","isMulti","UpdateApplicationApi","doUpdateAppRes","UpdateApplicationComponent","selectedCou","countries","appDetails","selected_countries","selectedcn","countryD","updateAppRes","uploadApplication","doUpdateApp","submitUpdateApplication","usersSearchApi","doUserAllSearchRes","CreateNotificationApi","doCreateNotificationRes","groupValue","isSend","CreateNotificationComponent","selected_user","type_message","handleInputChange","isSearchLoading","getAllSearchUsers","changeGroup","showUserList","userSearch","createNotificationRes","createNotification","op","onInputChange","doCreateNotification","submitCreateNotification","doUserSearchAll","resetPasswordApi","reset_password_token","doResetpasswordRes","ResetPasswordForm","changePasswordButton","changeTextPass","ReduxResetPasswordForm","submitSucceeded","marginBottom","ResetPasswordComponent","resetpasswordtoken","pathArray","resetpasswordForm","resetpasswordRes","doResetpassword","reset_password","AdminApi","doAppAdminRes","DeleteAdminApi","doDeleteAdminRes","AdminDetailsComponent","admin_id","adminId","deleteAdmin","adminList","selectAdminData","getAppAdminList","appAdminRes","adminDetails","payLoadData","createAdmin","doAppAdmin","get_app_admin","doDeleteAdmin","delete_admin","createAdminApi","doCreateAdminRes","CreateAdminComponent","createAdminRes","access_application_id","doCreateAdmin","create_admin","NovusBiApi","getnovusBiRes","NovusBiComponent","onSelectionChange","wmsList","actionStatusTemplate","_React$createElement","_React$createElement2","opened","toggleBox","primereact_button","iconPos","toggleBtn1","toggleBtn2","toggleBtn3","novusBiList","fetchnovusBi","novusBiRes","novusBi","sortMode","editable","selection","selectionMode","novusBiApi","getnovusBi","NovusBiCreateComponent","aria-label","renderHeader","novusBiArticleApi","donovusBiArticleRes","NovusBiArticleComponent","uploader","Videouploader","editor","uploader1","Videouploader1","editor1","uploader2","Videouploader2","editor2","editorBtn","uploaderBtn","VideouploaderBtn","uploaderBtn2","VideouploaderBtn2","editorBtn2","uploaderBtn1","VideouploaderBtn1","editorBtn1","ArticleAppRes","ArticleApplication","primereact_editor","text1","onTextChange","htmlValue","lib_default","optimisticPreviews","multiple","onLoadEnd","donovusBiArticle","submitnovusBiArticle","App","Fragment","react_router","exact","path","render","Boolean","hostname","match","initialState","combineReducers","formReducer","arguments","action","novusBiCreate","novusBiArticle","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iJCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oYCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uLCA3BC,EAAU,SAACC,EAAKC,GACzB,IAEI,OADAC,aAAaH,QAAQC,EAAKC,IACnB,EACV,MAAME,GACH,OAAO,IAIFC,EAAU,SAACJ,GACpB,IACI,IAAIK,EAAiBH,aAAaE,QAAQJ,GAC1C,YAAsBM,IAAnBD,GAAmD,OAAnBA,IACxBA,EAId,MAAMF,GACH,OAAO,qDCjBFI,EAAe,eAGfC,EAAwB,wBAGxBC,EAAmB,mBAGnBC,EAAqB,qBAGrBC,EAAqB,qBAGrBC,EAAqB,qBAGrBC,EAAuB,uBAGvBC,EAAwB,wBAGxBC,EAAsB,sBAGtBC,EAAqB,qBAGrBC,EAA4B,4BAG5BC,EAAyB,yBAGzBC,EAAyB,yBAGzBC,EAAyB,yBAGzBC,EAA8B,8BAG9BC,EAA0B,0BAG1BC,EAA0B,0BAG1BC,EAA0B,0BAG1BC,EAAuB,uBAGvBC,EAAsB,sBAGtBC,EAAmB,mBAGnBC,EAAmB,mBAGnBC,EAAoB,oBAGpBC,EAAoB,oBAMpBC,EAAyB,yBC3EzBC,EAAW,gCC+BTC,uGA3BIC,GACX,IAAIC,EAAS,CACTC,MAAMF,EAAKE,MACXC,SAASH,EAAKI,oBAGlB,IACI,IAIIC,EAAO,CACPC,OAAQ,OACRC,QANuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,qBAKRL,KAAMM,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAW,cAAeO,GAAMS,KAAK,SAAAC,GAC9C,OAAOA,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,8BCZR,SAASkD,EAAWC,GACzB,MAAO,CACLC,KAAMC,EACNF,QCTJ,IACMG,EAAQ,SAAAxD,GAAK,OAAIA,GAASA,EAAMyD,eAEhCC,EAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,MAAOP,EAAjBK,EAAiBL,KAAjBQ,EAAAH,EAAuBI,KAAQC,EAA/BF,EAA+BE,QAASb,EAAxCW,EAAwCX,MAAxC,OAChBc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAAC,OAAAC,OAAA,CAAOC,UAAU,gBAAmBV,EAApC,CAA2CW,YAAaV,EAAOP,KAAMA,KACpEU,GAAWb,GAASc,EAAAC,EAAAC,cAAA,YAAOhB,MAiBlCqB,cAEF,SAAAA,IAAc,IAAAC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAH,IACVC,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAI,GAAAM,KAAAH,QACKI,MAAQ,GAFHN,sFAOVE,KAAKK,MAAMC,yCAYN,IAAAC,EAC4DP,KAAKK,MAA9DG,EADHD,EACGC,aAAcC,EADjBF,EACiBE,iBAAkBC,EADnCH,EACmCG,SAAUC,EAD7CJ,EAC6CI,WAClD,OACIrB,EAAAC,EAAAC,cAAA,QAAMoB,SAAUJ,EAAaC,IACzBnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yEACXL,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIC,KAAK,QACLC,UAAWhC,EACXG,MAAM,cACN8B,aAAa,MACbrC,KAAK,QACLsC,UAAWpC,KAGnBS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4EACXL,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIC,KAAK,qBACLC,UAAWhC,EACXG,MAAM,iBACN8B,aAAa,MACbrC,KAAK,cAGbW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACXL,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,GAAG,mBACL7B,EAAAC,EAAAC,cAAA,kCAGRF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQb,KAAK,SAASgB,UAAU,+BAA+ByB,SAAUV,GAAYC,GAArF,mBAlDIU,IAAMC,eA+DxBC,GAAkBC,YAAyB,CAC7C/C,WAAYA,IAQhB,IAAMgD,GAAiBC,YAAU,CAC7BC,KAAM,iBACNC,OAlGW,CAAC,QAAS,sBAmGrBC,SAvFa,SAAAC,GACb,IAAMC,EAAS,GAOf,OANKD,EAAOtE,QACRuE,EAAOvE,MAAQ,YAEdsE,EAAOpE,qBACRqE,EAAOrE,mBAAqB,YAEzBqE,GAgFPC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,aAAa,GAPMT,CAQpB7B,GAEYuC,eAAQb,GAfvB,SAA4Bc,EAASC,GACjC,MAAO,IAcIF,CAA6CX,gECrGtDc,eAEF,SAAAA,IAAc,IAAAzC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAuC,IACVzC,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA8C,GAAApC,KAAAH,QACKI,MAAQ,CACToC,UAAU,EACVC,UAAW,KACXC,aAAc,IALR5C,yFASY6C,GAClBA,EAAUC,SAASlE,KAAKA,OACpBiE,EAAUC,SAASlE,KAAKA,MAAQiE,EAAUC,SAASlE,KAAKA,KAAKpB,MAChB,IAAzCqF,EAAUC,SAASlE,KAAKA,KAAKmE,UAC7BC,OAAOC,SAASC,KAAK,UAGzBC,WAAWjD,KAAKkD,SAAS,CACrBV,UAAU,IACV,2CAKHlF,GACT,IAAI6F,EAAc7F,EAClB0C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMI,iBAAiB0C,oCAGvB,IAAAC,EAAApD,KACLqD,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzC,OACIlE,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAK8D,IAAKM,KAASJ,IAAI,OAG/BlE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kCAEXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAf,eAGAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAACqE,GAAD,CAAWpD,iBAAkB,SAACnD,GAAW8F,EAAK5C,aAAalD,mBAnDlE+D,IAAMC,eAmE7BC,GAAkBC,YAAyB,CAC7CoB,SAAUnE,IASd,IAAMqF,GAAc1B,YAAQb,GAN5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EFjE7B,SAAsB/E,GAC3B,OAAO,SAAS+E,GACdhF,EAAS0G,QAAQzG,GAAMc,KAAK,SAAAM,GAC1B,IAAqB,IAAjBA,EAAKmE,QAAkB,CACzB,IAAImB,EAAQ,UAAUtF,EAAKsF,MAC3B7I,EAAQ,aAAc6I,GACtB7I,EAAQ,WAAYuD,EAAKpB,KAAK2G,UAC9B9I,EAAQ,aAAcuD,EAAKpB,KAAK4G,SAC5BxF,EAAKpB,KAAK6G,mBACZhJ,EAAQ,eAAgB8C,KAAKC,UAAUQ,EAAKpB,KAAK6G,mBACjDhJ,EAAQ,aAAcuD,EAAKpB,KAAK6G,iBAAiBC,QACjDjJ,EAAQ,eAAgBuD,EAAKpB,KAAK6G,iBAAiBE,WAErDhC,EAAS5D,EAAWC,IACpB2D,EAAS5D,EAAW,YAEpB6F,IAAKC,KAAK,CACRC,MAAO9F,EAAKiF,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAIRjG,EAAKF,OACN8F,IAAKC,KAAK,CACRC,MAAO9F,EAAKiF,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GAEP,OADAoG,QAAQC,IAAIrG,GACLA,KE6BgCsG,CAAaxH,QAM3CyH,eAAQjB,GAARiB,CAAqBxC,ICvF9B1D,WAAQ,SAAAxD,GAAK,OAAIA,GAASA,EAAMyD,gBAEhCC,GAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,MAAOP,EAAjBK,EAAiBL,KAAjBQ,EAAAH,EAAuBI,KAAQC,EAA/BF,EAA+BE,QAASb,EAAxCW,EAAwCX,MAAxC,OAChBc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAAC,OAAAC,OAAA,CAAOC,UAAU,gBAAmBV,EAApC,CAA2CW,YAAaV,EAAOP,KAAMA,KACpEU,GAAWb,GAASc,EAAAC,EAAAC,cAAA,YAAOhB,UAalCwG,eAEF,SAAAA,IAAc,IAAAlF,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAgF,IACVlF,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAuF,GAAA7E,KAAAH,QACKI,MAAQ,GAFHN,sFAOVE,KAAKK,MAAMC,yCAGN,IAAAC,EAC4DP,KAAKK,MAA9DG,EADHD,EACGC,aAAcC,EADjBF,EACiBE,iBAAkBC,EADnCH,EACmCG,SAAUC,EAD7CJ,EAC6CI,WAClD,OACIrB,EAAAC,EAAAC,cAAA,QAAMoB,SAAUJ,EAAaC,IACzBnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yEACXL,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIC,KAAK,QACLC,UAAWhC,GACXG,MAAM,cACN8B,aAAa,MACbrC,KAAK,QACLsC,UAAWpC,MAGnBS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQb,KAAK,SAASgB,UAAU,+BAA+ByB,SAAUV,GAAYC,GAArF,mBA3BaU,IAAMC,eAyCxBI,eAAU,CACrBC,KAAM,0BACNC,OA/DW,CAAC,SAgEZC,SApDJ,SAAkBC,GACd,IAAMC,EAAS,GAIf,OAHKD,EAAOtE,QACRuE,EAAOvE,MAAQ,YAEZuE,GAgDPC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,aAAa,GAPFT,CAQZsD,ICtCYC,iHA/Ba3H,GAEpB,IAAIC,EAAS,CACTC,MAAMF,EAAKE,OAGf,IACI,IAIIG,EAAO,CACPC,OAAQ,OACRC,QANuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,qBAKRL,KAAMM,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAW,yBAA0BO,GAAMS,KAAK,SAAAC,GAIzD,OAHmB,IAAhBA,EAAS6G,KACRpC,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCjBR,SAAS4J,GAAoBzG,GAClC,MAAO,CACLC,KAAMC,EACNF,YCDE0G,eAEF,SAAAA,IAAc,IAAAtF,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAoF,IACVtF,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA2F,GAAAjF,KAAAH,QACKI,MAAQ,GAFHN,4EAODxC,GACT,IAAI6F,EAAc,CACd3F,MAAUF,EAAKE,OAEnBwC,KAAKK,MAAMI,iBAAiB0C,oCAGvB,IAAAC,EAAApD,KACL,OACIV,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAK8D,IAAKM,KAASJ,IAAI,OAG/BlE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kCAEXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wCAAf,mBAGAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACXL,EAAAC,EAAAC,cAAA,KAAG6F,MAAO,CAAEC,UAAW,SAAUC,SAAU,OAAQC,MAAO,SAA1D,4DACAlG,EAAAC,EAAAC,cAACiG,GAAD,CAAoBhF,iBAAkB,SAACnD,GAAW8F,EAAK5C,aAAalD,OAExEgC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACXL,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,GAAI,IAAKxB,UAAU,wBACrBL,EAAAC,EAAAC,cAAA,oCAtCF6B,IAAMC,eAyDtCC,GAAkBC,YAAyB,CAC7CkE,kBAAmBP,KASvB,IAAMrB,GAAc1B,YAAQb,GAN5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,ED1D7B,SAA8B/E,GACnC,OAAO,SAAS+E,GACd4C,GAAkBU,iBAAiBrI,GAAMc,KAAK,SAAAM,GAC5C2D,EAAS8C,GAAoBzG,IAC1BA,EAAKF,OACN8F,IAAKC,KAAK,CACRC,MAAO9F,EAAKiF,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KC4CgCoH,CAAqBtI,QAMnDyH,eAAQjB,GAARiB,CAAqBK,+ECpDrBS,oHAzBP,IAAMC,EAAQtK,EAAQ,cACtB,IACI,IAAMuK,EAAqB,IAAIjI,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAMrB,OAAO3H,MAAMf,EAAW,aAJb,CACPQ,OAAQ,MACRC,QAASkI,IAE+B3H,KAAK,SAAAC,GAK7C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCtBF4K,GAAO,WAChB7K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KCQpB,SAASoD,GAAa9I,GAC3B,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAAS+I,KAEd,GADc7K,EAAQ,cAEpB,OAAO,SAAS6G,GACdiE,GAASC,YAAYnI,KAAK,SAAAd,GACxB+E,EAAS+D,GAAa9I,IACnBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KC3BG,SAASA,KACZ7K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,IAG3B,IAAIwD,GAAK,GAEHC,eAEF,SAAAA,IAAc,IAAA3G,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAyG,IACV3G,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAgH,GAAAtG,KAAAH,QAgCJ0G,kBAAoB,WAChB5G,EAAKoD,SAAS,CACVyD,aAAc7G,EAAKM,MAAMuG,eAnCnB7G,EAuCd8G,WAAa,WAIT9G,EAAKO,MAAM+F,aAHA,CACP9I,KAAM,MAvCVwC,EAAKM,MAAQ,CACToC,UAAU,EACVmE,aAAa,EACbE,SAAU,GACVC,QAAS,IANHhH,mFAYV0G,IADAA,GAAM1D,OAAOC,SAASgE,UACXC,MAAM,KACjB,IAAM/C,EAAWzI,EAAQ,YACnByL,EAAWzL,EAAQ,gBACzBwE,KAAKkD,SAAS,CACV2D,SAAU5C,EACV6C,QAASG,EACTzE,UAAU,sDAIQG,GACtB3C,KAAKkD,SAAS,CACVV,UAAU,oCAIV0E,GACJ,IAAMC,EAAMD,EACZpE,OAAOsE,KAAKD,EAAK,2CAiBjB,OACI7H,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAAEgC,MAAO,OAAQC,OAAQ,SAAW3H,UAAYK,KAAKI,MAAMoC,SAAW,iBAAmB,IAE7FlD,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CAAQiF,MAAOxE,KAAKK,MAAMmE,QAC1BlF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6CACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAK8D,IAAKM,KAASJ,IAAI,SAKvClE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8CACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6CAA6C6H,QAASxH,KAAK0G,mBACzEpH,EAAAC,EAAAC,cAAA,KAAGG,UAAU,0BAGrBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAK8D,IAAKM,KAASJ,IAAI,SAKvClE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sDACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAqB8H,YAAWzH,KAAKI,MAAMuG,YAAc,SAAW,GAAIe,GAAG,gBACtFpI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAmBK,KAAKI,MAAMyG,UAEzC7G,KAAKI,MAAM0G,SACXxH,EAAAC,EAAAC,cAAA,WAAMQ,KAAKI,MAAM0G,QAAjB,iBAGRxH,EAAAC,EAAAC,cAAA,OAAKG,UAAqB,UAAV6G,GAAK,GAAe,SAAW,WAAYgB,QAASxH,KAAK4G,YACrEtH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,SAAUwG,cAAY,YACnCrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAc0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SAC/DtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,WAGRL,EAAAC,EAAAC,cAAA,OAAKG,UAAqB,iBAAV6G,GAAK,GAAsB,SAAW,WAAYgB,QAASxH,KAAK4G,YAC5EtH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,gBAAiBwG,cAAY,YAC1CrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAe0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SAChEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,kBAGRL,EAAAC,EAAAC,cAAA,OAAKG,UAAqB,iBAAV6G,GAAK,GAAsB,SAAW,YAClDlH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,gBAAiBwG,cAAY,YAC1CrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SAC9DtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,kBAGRL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qDACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,oCAAoCqD,KAAK,IAAI0E,GAAG,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SACtJ1I,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAkB0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACvEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,aAEAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAA6BsI,kBAAgB,kBACxD3I,EAAAC,EAAAC,cAAA,OAAKG,UAAqB,aAAV6G,GAAK,GAAkB,SAAW,YAC9ClH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,YAAawG,cAAY,YACtCrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAkB0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACvEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,UAIJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,YAAawG,cAAY,YACtCrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAkB0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACvEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,kBAIJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,YAAawG,cAAY,YACtCrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAkB0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACvEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,mBAIJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,YAAawG,cAAY,YACtCrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAe0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACpEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,iBAIJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,YAAawG,cAAY,YACtCrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAkB0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACvEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,cAIJL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAqB,qBAAV6G,GAAK,GAA0B,SAAW,YACtDlH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,oBAAqBwG,cAAY,YAC9CrI,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAkB0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACvEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,yBAMZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACXL,EAAAC,EAAAC,cAAA,OAAKgI,QAASrB,GAAQwB,cAAY,WAAWhI,UAAU,eACnDL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iBAAiB0F,MAAO,CAACE,SAAU,QAAUqC,cAAY,SACtEtI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAhB,iBAWpBL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kCACVK,KAAKK,MAAM6H,qBA7KpB7G,IAAMC,eA4L5BC,GAAkBC,YAAyB,IAUjD,IAAMsC,GAAc1B,YAAQb,GAN5B,SAA4Bc,GACxB,MAAO,CACH+D,aAAc,SAAC9I,GAAD,OAAU+E,EAAS+D,GAAa9I,QAMvCyH,eAAQjB,GAARiB,CAAqB0B,IC7LrB0B,+GA3BW7K,GAClB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,gBAAiBO,GAAMS,KAAK,SAAAC,GAKhD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCZR,SAAS6M,GAAkB9K,GAChC,MAAO,CACLqB,KAAMC,EACNtB,YCeW+K,2GA5BO/K,GACdsH,QAAQC,IAAIvH,GACZ,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,SACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAKM,KAAKC,UAAUZ,IAExB,OAAOa,MAAMf,EAAW,qBAAsBO,GAAMS,KAAK,SAAAC,GAKrD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCdR,SAAS+M,GAAgBhL,GAC9B,MAAO,CACLqB,KAAMC,EACNtB,YCcWiL,oHAzBP,IAAMzC,EAAQtK,EAAQ,cACtB,IACI,IAAMuK,EAAqB,IAAIjI,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAMrB,OAAO3H,MAAMf,EAAW,oBAJb,CACPQ,OAAQ,MACRC,QAASkI,IAEsC3H,KAAK,SAAAC,GAKpD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCZR,SAASiN,GAAqBlL,GACnC,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAASmL,KAEd,GADcjN,EAAQ,cAEpB,OAAO,SAAS6G,GACdkG,GAAeG,oBAAoBtK,KAAK,SAAAd,GACtC+E,EAASmG,GAAqBlL,IAC3BA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,SCTWwC,iHA3BarL,GACpB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,kBAAmBO,GAAMS,KAAK,SAAAC,GAKlD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCZR,SAASqN,GAAoBtL,GAClC,MAAO,CACLqB,KAAMC,EACNtB,YCiBWuL,4GA9BQvL,GAIf,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAKM,KAAKC,UAAUZ,IAExB,OAAOa,MAAMf,EAAW,gBAAiBO,GAAMS,KAAK,SAAAC,GAKhD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCfR,SAASuN,GAAexL,GAC7B,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAASyL,GAAczL,GAE5B,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACdwG,GAAaG,YAAY1L,GAAMc,KAAK,SAAAd,GAClC+E,EAASyG,GAAexL,IACrBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KCpBJ,IAAI8C,IAAY,EACZC,IAAW,EAEXC,GAAW3N,EAAQ,cACnB4N,IAAkB,EAEhBC,eACJ,SAAAA,IAAc,IAAAvJ,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAqJ,IACZvJ,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA4J,GAAAlJ,KAAAH,QA4NFsJ,aAAe,WACbxJ,EAAKoD,SAAS,CACZqG,YAAY,GACX,cACHzJ,EAAK+B,SAAS/B,EAAKM,OACnB,IAAM2B,EAASjC,EAAK+B,SAAS/B,EAAKM,OAClC,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAGpC,IAFA,IAAIC,EAAc5J,EAAKM,MAAMuJ,iBAEpBC,EAAI,EAAGA,EAAIF,EAAYD,OAAQG,IAAK,QACnCF,EAAYE,GACXC,iBAKX,IAAIC,EAAS,CACXC,YAAaL,EACbM,QAASlK,EAAKM,MAAM6J,gBAEtBnK,EAAKO,MAAM6J,eAAeJ,KAjPhBhK,EA8PdqK,WAAa,WACX,IAAIC,EAAU,CACZJ,QAASlK,EAAKM,MAAMiK,QAEtBvK,EAAKO,MAAMiK,iBAAiBF,GAC5BlB,IAAW,EACXpJ,EAAKoD,SAAS,CACZqH,YAAY,KArQFzK,EAyQd0K,WAAa,SAAClN,GACZwC,EAAKO,MAAMoK,QAAQC,KAAK,CACtB3D,SAAU,aACV3G,MAAO,CAACuK,SAAUrN,MA5QRwC,EAqTd8K,qBAAuB,SAACC,GACtB,OACEvL,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACtBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB6H,QAAS,WAAQ1H,EAAK0K,WAAWK,KAAYvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeiI,cAAY,UAC/HtI,EAAAC,EAAAC,cAAA,UAAQG,UAAU,0BAA0B6H,QAAS,WAAQ1H,EAAKgL,gBAAgBD,KAAYvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAciI,cAAY,YAzT7H9H,EA8TdiL,sBAAwB,SAACF,GACvB,OACEvL,EAAAC,EAAAC,cAAA,WACGqL,EAAQG,SADX,IACsBH,EAAQI,WAjUpBnL,EAsUdoL,eAAiB,SAACL,GAChB,OAAQvL,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WAET,IAAnBuF,EAAQ5E,QACR3G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAf,WAGmB,IAAnBkL,EAAQ5E,QACR3G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAf,WAGmB,IAAnBkL,EAAQ5E,QACR3G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAf,gBAlVQG,EA2VdgL,gBAAkB,SAACxN,GACjBwC,EAAKoD,SAAS,CACZmH,OAAQ/M,EAAK0M,QACbmB,qBAAqB,KA9VXrL,EAkWdsL,iBAAmB,WACjBtL,EAAKoD,SAAS,CACZiI,qBAAqB,KApWXrL,EAwWduL,aAAe,SAAC/N,GACd,IAAIgO,EAAchO,EAAKiO,SACvB,GAAID,EAAY7B,OAAS,EAAG,CAC1B,GAAgB,KAAZN,GAAiB,KAAAqC,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IACnB,QAAAiQ,EAAAC,EAAiB9L,EAAKM,MAAMyL,gBAA5BC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA6C,KAApCU,EAAoCP,EAAAtQ,MAAA8Q,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAC3C,QAAA4Q,EAAAC,EAAejB,EAAfQ,OAAAC,cAAAI,GAAAG,EAAAC,EAAAP,QAAAC,MAAAE,GAAA,EAA4B,KAApBK,EAAoBF,EAAAjR,MACtBmR,EAAIC,gBAAkBP,EAAKO,iBAC7BD,EAAI3C,iBAAmBqC,EAAKrC,mBAHW,MAAAtO,GAAA6Q,GAAA,EAAAC,EAAA9Q,EAAA,YAAA4Q,GAAA,MAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,KAD1B,MAAA9Q,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,QAQd,KAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAAnR,EAAA,IACL,QAAAoR,EAAAC,EAAezB,EAAfQ,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAA4B,CAAAG,EAAAzR,MACtBwO,iBAAmB/J,EAAKM,MAAM4M,iBAF/B,MAAAzR,GAAAqR,GAAA,EAAAC,EAAAtR,EAAA,YAAAoR,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,IAMP/M,EAAKoD,SAAS,CACZ+J,mBAAmB,EACnBtD,iBAAkB2B,EAClBrB,eAAgB3M,EAAK0M,eAGvBlK,EAAKoD,SAAS,CACZ+J,mBAAmB,EACnBtD,iBAAkB2B,EAClBrB,eAAgB3M,EAAK0M,WAlYblK,EAuYdoN,cAAgB,WACE,KAAZ/D,GACFrJ,EAAKoD,SAAS,CACZ+J,mBAAmB,EACnBE,cAAe,GACfH,gBAAiB,GACjBI,SAAU,GACVzD,iBAAkB,KAGpB7J,EAAKoD,SAAS,CACZ+J,mBAAmB,EACnBG,SAAU,GACVzD,iBAAkB,MApZV7J,EA0ZduN,gBAAkB,WAChBvN,EAAKoD,SAAS,CACVoK,gBAAgB,KA5ZRxN,EAmbdyN,YAAc,WACZzN,EAAKoD,SAAS,CACZsK,gBAAgB,GACf,cACH1N,EAAK2N,aAAa3N,EAAKM,OACvB,IAAM2B,EAASjC,EAAK2N,aAAa3N,EAAKM,OAEtC,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CACpC,IAAIiE,EAAc,CAChBC,SAAU7N,EAAKM,MAAMgN,UAEvBhE,IAAkB,EAClBtJ,EAAKO,MAAM0I,cAAc2E,GACzB5N,EAAKoD,SAAS,CACZV,UAAU,MAjcF1C,EAscd8N,eAAiB,SAACtQ,GAChB,GAAyC,GAAtCwC,EAAKM,MAAMuJ,iBAAiBF,OAC7B3J,EAAKoD,SAAS,CACZyG,iBAAkB,GAClBkE,UAAU,GACV,kBACG,CACL,IAAIC,EAAQhO,EAAKM,MAAMuJ,iBAAiBoE,QAAQzQ,GAC5C0Q,EAAalO,EAAKM,MAAMuJ,iBAAiBsE,MAAM,EAAGH,GAAOI,OAAOpO,EAAKM,MAAMuJ,iBAAiBsE,MAAMH,EAAQ,EAAGhO,EAAKM,MAAMuJ,iBAAiBF,SAC7I3J,EAAKoD,SAAS,CACZyG,iBAAkBqE,EAClBH,UAAU,GACV,gBAldQ/N,EAsddqO,sBAAwB,SAACtD,GACvB,OACEvL,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACtBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,yBAAyB6H,QAAS,kBAAM1H,EAAK8N,eAAe/C,KAAUvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAciI,cAAY,YAvdnIqB,IAAY,EACZC,IAAW,GACK,EAChBE,IAAkB,EACpBtJ,EAAKM,MAAQ,CACZoC,UAAU,EACP4L,aAAc,GACdC,UAAW,GACXlD,qBAAqB,EACrBZ,YAAY,EACZ0C,mBAAmB,EACnBpB,gBAAiB,GACjB2B,gBAAgB,EAChBjE,YAAY,EACZ4D,cAAe,GACfH,gBAAiB,GACjBI,SAAU,GACVzD,iBAAkB,GAClB2D,gBAAgB,EAChBO,UAAU,EACV5D,eAAgB,IAElBnK,EAAKwO,eAAiBxO,EAAKwO,eAAeC,KAApB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACtBA,EAAK2O,kBAAoB3O,EAAK2O,kBAAkBF,KAAvB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACzBA,EAAK4O,eAAiB5O,EAAK4O,eAAeH,KAApB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IA1BVA,mFA+BS,OADFtE,EAAQ,cAEzBwE,KAAKkD,SAAS,CACZV,UAAU,EACV2K,cAAe3R,EAAQ,cACvBwR,gBAAiBxR,EAAQ,kBAG3BwE,KAAKkD,SAAS,CACZV,UAAU,IAGdxC,KAAKK,MAAMsO,WACX3O,KAAKK,MAAMoI,wEAGapI,GAAO,IAAA+C,EAAApD,KAqD/B,GApDIK,EAAMuO,mBACPvO,EAAMuO,kBAAkBtR,MAAQ+C,EAAMuO,kBAAkBtR,KAAKuO,kBACL,IAAvDxL,EAAMuO,kBAAkBtR,KAAKuO,gBAAgBhJ,SAC3C7C,KAAKkD,SAAS,CACZ2I,gBAAiBxL,EAAMuO,kBAAkBtR,KAAKuO,gBAAgBvO,MAC9D,cAIJ+C,EAAMwO,aACPxO,EAAMwO,YAAYvR,MAAQ+C,EAAMwO,YAAYvR,KAAKwR,UACP,IAAzCzO,EAAMwO,YAAYvR,KAAKwR,QAAQjM,SAC7B7C,KAAKkD,SAAS,CACZmL,UAAWhO,EAAMwO,YAAYvR,KAAKwR,QAAQxR,KAC1CkF,UAAU,IAMdnC,EAAM+H,mBACJ/H,EAAM+H,kBAAkB9K,MAAQ+C,EAAM+H,kBAAkB9K,KAAKgM,eACL,IAAtDjJ,EAAM+H,kBAAkB9K,KAAKgM,aAAazG,SAAoBoG,KAChEA,IAAY,EACZjJ,KAAKK,MAAMsO,YAIbtO,EAAM0O,mBACJ1O,EAAM0O,kBAAkBzR,MAAQ+C,EAAM0O,kBAAkBzR,KAAK0R,iBACH,IAAxD3O,EAAM0O,kBAAkBzR,KAAK0R,eAAenM,WAC9B,EAChB7C,KAAKK,MAAMsO,WACX3O,KAAKkD,SAAS,CACZ+J,mBAAmB,KAKvB5M,EAAMiI,iBACJjI,EAAMiI,gBAAgBhL,MAAQ+C,EAAMiI,gBAAgBhL,KAAK6M,aACL,IAAlD9J,EAAMiI,gBAAgBhL,KAAK6M,WAAWtH,SAAoBqG,KAC5DA,IAAW,EACXlJ,KAAKK,MAAMsO,WACX3O,KAAKkD,SAAS,CACZiI,qBAAqB,EACrBZ,YAAY,KAMjBlK,EAAM4O,aACP,GAAG5O,EAAM4O,aAAa3R,KAAK4R,UAAW,CAClC,IAAiD,IAA9C7O,EAAM4O,aAAa3R,KAAK4R,UAAUrM,SAAoBuG,GAAiB,CACtEA,IAAkB,EAClBpJ,KAAKkD,SAAS,CACVV,UAAU,IAEd,IAAI2M,EAAanP,KAAKI,MAAMuJ,iBAC5B,GAAIwF,EAAW1F,OAAS,EAAG,CACzB,IAAI2F,EAAS,EACb,GAAgB,KAAZjG,GAAiB,KAAAkG,GAAA,EAAAC,GAAA,EAAAC,OAAA7T,EAAA,IACnB,QAAA8T,EAAAC,EAAkBzP,KAAKI,MAAMuJ,iBAA7BmC,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,GAAA,EAA+C,CAAAG,EAAAnU,MACnCoR,gBAAkBzM,KAAKI,MAAM+M,gBACrCiC,EAAS,IAHM,MAAA7T,GAAA+T,GAAA,EAAAC,EAAAhU,EAAA,YAAA8T,GAAA,MAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,QAMd,KAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAAlU,EAAA,IACL,QAAAmU,EAAAC,EAAkBX,EAAlBrD,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EAA8B,CAAAG,EAAAxU,MAClB0U,WAAa/P,KAAKI,MAAMgN,WAChCgC,EAAS,IAHR,MAAA7T,GAAAoU,GAAA,EAAAC,EAAArU,EAAA,YAAAmU,GAAA,MAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,MAAAC,IAOP,GAAc,GAAVR,EAAa,CACf,IAAIY,EAAWb,EACXrI,EAAU,GACd,GAAgB,KAAZqC,GAAiB,KAAA8G,GAAA,EAAAC,GAAA,EAAAC,OAAAzU,EAAA,IACnB,QAAA0U,EAAAC,EAAiBrQ,KAAKI,MAAMyL,gBAA5BC,OAAAC,cAAAkE,GAAAG,EAAAC,EAAArE,QAAAC,MAAAgE,GAAA,EAA6C,KAApC/D,EAAoCkE,EAAA/U,MACvCiV,OAAOtQ,KAAKI,MAAM+M,gBAAkBjB,EAAKO,iBAC3C3F,EAAUoF,EAAKrC,mBAHA,MAAAtO,GAAA2U,GAAA,EAAAC,EAAA5U,EAAA,YAAA0U,GAAA,MAAAI,EAAA3D,QAAA2D,EAAA3D,SAAA,WAAAwD,EAAA,MAAAC,SAOnBrJ,EAAU9G,KAAKI,MAAM4M,gBAEvBgD,EAAStF,KAAK,CACZ+B,eAAgBzM,KAAKI,MAAM+M,cAC3BtD,iBAAkB/C,EAClBiJ,UAAW/P,KAAKI,MAAMgN,WAExBpN,KAAKkD,SAAS,CACZyG,iBAAkBqG,GACjB,WACe,KAAZ7G,GACF/F,EAAKF,SAAS,CACZiK,cAAe,GACfC,SAAU,GACVI,gBAAgB,IAGlBpK,EAAKF,SAAS,CACZkK,SAAU,GACVI,gBAAgB,WAKtBxN,KAAKkD,SAAS,CACZoK,gBAAgB,QAGf,CACL,IAAI0C,EAAWhQ,KAAKI,MAAMuJ,iBACtB7C,EAAU,GAMd,GAAgB,KAAZqC,GAAiB,KAAAoH,GAAA,EAAAC,GAAA,EAAAC,OAAA/U,EAAA,IACnB,QAAAgV,EAAAC,EAAiB3Q,KAAKI,MAAMyL,gBAA5BC,OAAAC,cAAAwE,GAAAG,EAAAC,EAAA3E,QAAAC,MAAAsE,GAAA,EAA6C,KAApCrE,EAAoCwE,EAAArV,MACvCiV,OAAOtQ,KAAKI,MAAM+M,gBAAkBjB,EAAKO,iBAC3C3F,EAAUoF,EAAKrC,mBAHA,MAAAtO,GAAAiV,GAAA,EAAAC,EAAAlV,EAAA,YAAAgV,GAAA,MAAAI,EAAAjE,QAAAiE,EAAAjE,SAAA,WAAA8D,EAAA,MAAAC,SAOnB3J,EAAU9G,KAAKI,MAAM4M,gBAEvBgD,EAAStF,KAAK,CACZ+B,eAAgBzM,KAAKI,MAAM+M,cAC3BtD,iBAAkB/C,EAClBiJ,UAAW/P,KAAKI,MAAMgN,WAExBpN,KAAKkD,SAAS,CACZyG,iBAAkBqG,GACjB,WACe,KAAZ7G,GACF/F,EAAKF,SAAS,CACZiK,cAAe,GACfC,SAAU,GACVI,gBAAgB,IAGlBpK,EAAKF,SAAS,CACZkK,SAAU,GACVI,gBAAgB,QAMqB,IAA9CnN,EAAM4O,aAAa3R,KAAK4R,UAAUrM,SAAqBuG,KACtDA,IAAkB,EAClBpJ,KAAKkD,SAAS,CACVV,UAAU,IAEd8B,IAAKC,KAAK,CACNC,MAAOnE,EAAM4O,aAAa3R,KAAK4R,UAAUvL,QACzChF,KAAM,OACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,YAIf1B,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,+CA6BGqI,EAAS5E,GACzB,IAAI2K,EAAa,CACf5G,QAASa,EAAQb,QACjB/D,OAAQA,GAEVjG,KAAKK,MAAMwQ,iBAAiBD,GAC5B3H,IAAY,yCAqBC6H,GACb9Q,KAAKkD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACGqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,+CAIfwP,EAASoG,GAAQ,IAAAC,EAAAlR,KAE9B,OAAQV,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WAET,IAAnBuF,EAAQ5E,QACR3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB6H,QAAS,WAAQ0J,EAAK7F,aAAaR,KAA7E,WACAvL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,0BAA0B6H,QAAS,WAAQ0J,EAAKzC,kBAAkB5D,EAAS,OAA7F,eAMiB,IAAnBA,EAAQ5E,QACR3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,0BAA0B6H,QAAS,WAAQ0J,EAAKzC,kBAAkB5D,EAAS,OAA7F,eAMiB,IAAnBA,EAAQ5E,QACR3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB6H,QAAS,WAAQ0J,EAAK7F,aAAaR,KAA7E,kDA2CN7K,KAAKK,MAAMoK,QAAQC,KAAK,oDAwEb5I,GACX,IAAMC,EAAS,GAOf,MAN4B,IAAxBD,EAAOqL,gBACTpL,EAAOoL,cAAgB,6BAEF,IAAnBrL,EAAOsL,WACTrL,EAAOqL,SAAW,yBAEbrL,mCAGAD,GACP,IAAMC,EAAS,GAIf,OAHuC,IAAnCD,EAAO6H,iBAAiBF,SAC1B1H,EAAO4H,iBAAmB,gDAErB5H,mCA8CA,IAAAoP,EAAAnR,KAAAoR,EAC6DpR,KAAKI,MAAjEiO,EADD+C,EACC/C,UAAWb,EADZ4D,EACY5D,eAAgB7D,EAD5ByH,EAC4BzH,iBAAkBJ,EAD9C6H,EAC8C7H,WAC/C8H,EAAarR,KAAKyN,aAAazN,KAAKI,OACpC2B,EAAS/B,KAAK6B,SAAS7B,KAAKI,OAC5BkR,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,SACV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MAC3C+N,EAAcjS,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAY,SACvBhG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAe0F,MAAO,CAACmM,OAAO,iBAC3ClS,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAO8S,QAAS,SAACX,GAAD,OAAOK,EAAKjO,SAAS,CAACkL,aAAc0C,EAAEE,OAAO3V,SAASuE,YAAY,SAAS8R,KAAK,QAEhI,OACEpS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GAC1C/D,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,QAAQoN,OAAQN,GACjChS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BACbL,EAAAC,EAAAC,cAAA,OAAMG,UAAU,+BACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAEbL,EAAAC,EAAAC,cAAA,OAAMG,UAAU,+BACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAf,cAEFL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAqB0F,MAAO,CAAEC,UAAW,UACtDhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,qBAAqB6H,QAAS,kBAAM2J,EAAKU,eAA3D,iBAGJvS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6CAA6C0F,MAAO,CAAEyM,YAAa,GAAIC,aAAc,GAAIC,WAAY,GAAIC,cAAe,KACrI3S,EAAAC,EAAAC,cAAC0S,GAAA,UAAD,CAAW7W,MAAOgT,EAAWuD,OAAQL,EAAanD,aAAcpO,KAAKI,MAAMgO,aAAc+D,WAAW,EAAMC,KAAM,GAAKC,YAAU,EAACC,YAAU,EAAEC,aAAa,iBACvJjT,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,QAAQb,OAAO,QAAQc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACnF/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,WAAWb,OAAO,YAAYc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAC1F/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,UAAUb,OAAO,UAAUjU,KAAMqC,KAAK+K,sBAAuB2H,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACzH/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,UAAUb,OAAO,UAAUc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACvF/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAAU9U,KAAMqC,KAAKkL,eAAgB0G,OAAO,SAASc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACjH/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAASb,OAAO,qBAAqBjU,KAAMqC,KAAKsO,eAAgBjJ,MAAO,CAACgC,MAAO,WACnH/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,UAAUb,OAAO,SAASjU,KAAMqC,KAAK4K,qBAAsBvF,MAAO,CAACgC,MAAO,aAGlH/H,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAM+K,oBAAqByH,QAAS5S,KAAKoL,iBAAkByH,QAAM,GACjFvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAf,sCAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAM0F,MAAO,CAACgC,MAAO,OAGpC/H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAkB0F,MAAO,CAACyN,UAAW,KAChDxT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BAA0B0F,MAAO,CAACC,UAAW,UACxDhG,EAAAC,EAAAC,cAAA,UACIG,UAAU,0BACV6H,QAAS,kBAAM2J,EAAKhH,cACpB/I,SAAUpB,KAAKI,MAAMmK,YAHzB,QAQJjL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACXL,EAAAC,EAAAC,cAAA,UACIG,UAAU,yBACV6H,QAAS,kBAAM2J,EAAK/F,qBAFxB,UAUZ9L,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAM6M,kBAAmB2F,QAAS5S,KAAKkN,cAAe2F,QAAM,GAC5EvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAqB0F,MAAO,CAACgC,MAAO,MACjD/H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBAAf,kBAEFL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BAEC,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,gBAAgBiS,SAAU,SAACjC,GAAD,OAAOK,EAAKzC,eAAeoC,IAAIzV,MAAO2E,KAAKI,MAAM+M,eAC7G7N,EAAAC,EAAAC,cAAA,UAAQnE,MAAM,IAAd,sBAEK2E,KAAKI,MAAMyL,iBAAoB7L,KAAKI,MAAMyL,gBAAgBmH,IAAI,SAACC,EAAKC,GAAN,OAC3D5T,EAAAC,EAAAC,cAAA,UAAQpE,IAAK8X,EAAG7X,MAAO4X,EAAIxG,eAAgBrL,SAAU6R,EAAI7R,UAAW6R,EAAIpJ,qBAInFwH,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWlE,gBAGjF7N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,gBAAgBzF,MAAO2E,KAAKI,MAAM+M,cAAegG,UAAQ,GAE3F7T,EAAAC,EAAAC,cAAA,UAAQnE,MAAO2E,KAAKI,MAAM+M,cAAe/L,UAAU,GAAOpB,KAAKI,MAAM4M,kBAGxEqE,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWlE,iBAIrF7N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAemB,KAAK,WAAWlB,YAAY,kBAAkBmT,SAAU,SAACjC,GAAD,OAAOK,EAAKzC,eAAeoC,IAAIzV,MAAO2E,KAAKI,MAAMgN,WACpJiE,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWjE,YAGrF9N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAEPL,EAAAC,EAAAC,cAAA,UACAgI,QAAS,WACL2J,EAAK5D,eAET5N,UAAU,uBAJV,SAQXoC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO4H,mBAInEA,EAAiBF,OAAS,GAC1BnK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAC0S,GAAA,UAAD,CAAW7W,MAAOsO,EAAkBwI,WAAW,EAAMC,KAAM,GAAKC,YAAU,EAACC,YAAU,EAAEC,aAAa,iBAClGjT,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,mBAAmBb,OAAO,mBAAmBc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACzG/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,YAAYb,OAAO,YAAYc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAC3F/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAASb,OAAO,SAASjU,KAAMqC,KAAKmO,sBAAuB9I,MAAO,CAACgC,MAAO,cAKtH/H,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAMkN,eAAgBsF,QAAS5S,KAAKqN,gBAAiBwF,QAAM,GACzEvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAEC,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAAf,uEAEAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAAf,sDAGJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAM0F,MAAO,CAACgC,MAAO,SAK5C/H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAkB0F,MAAO,CAACyN,UAAW,KAChDxT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAA6B0F,MAAO,CAACC,UAAW,WAC3DhG,EAAAC,EAAAC,cAAA,UACEG,UAAU,0BACV6H,QAAS,kBAAM2J,EAAK7H,gBACpBlI,SAAUpB,KAAKI,MAAMmK,YAHvB,8BAnnBPlJ,IAAMC,eAmpB7BC,GAAkBC,YAAyB,CAChDqN,YAAazI,GACZgC,kBAAmBA,GACnBE,gBAAiBA,GAClBsG,kBAAmBpG,GACnBuG,kBAAmBnG,GAClBqG,aAAcnG,KAchB,IAAMhF,GAAc1B,YAAQb,GAX5B,SAA4Bc,GAC1B,MAAO,CACPsM,SAAU,kBAAMtM,EAASgE,OACzBwK,iBAAkB,SAACuC,GAAD,OAAU/Q,ETrqBvB,SAA0B/E,GAE/B,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACd8F,GAAgBkL,eAAe/V,GAAMc,KAAK,SAAAd,GACxC+E,EAAS+F,GAAkB9K,IAC3B+E,EAAS+F,GAAkB,OACxB9K,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KSgpBmC0K,CAAiBuC,KACtD9I,iBAAkB,SAAC8I,GAAD,OAAU/Q,EPvqBvB,SAA2B/E,GAEhC,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACdgG,GAAc8B,WAAW7M,GAAMc,KAAK,SAAAd,GAClC+E,EAASiG,GAAgBhL,IACzB+E,EAASiG,GAAgB,OACtBhL,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KOkpBmCmN,CAAkBF,KACvDlJ,eAAgB,SAACkJ,GAAD,OAAU/Q,EHvqBrB,SAAwB/E,GAE7B,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACdsG,GAAkB4K,iBAAiBjW,GAAMc,KAAK,SAAAd,GAC5C+E,EAASuG,GAAoBtL,IAC1BA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGXtC,EAASuG,GAAoB,SAC5BrK,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KGkpBiC+D,CAAekJ,KAClD3K,oBAAqB,kBAAMpG,EAASoG,OAClCM,cAAe,SAACzL,GAAD,OAAU+E,EAAS0G,GAAczL,QAMrCyH,eAAQjB,GAARiB,CAAqBsE,ICpqBrBmK,oHA5BQlW,GACf,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,SACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,4BAA6BO,GAAMS,KAAK,SAAAC,GAK5D,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCdR,SAASkY,GAAenW,GAC7B,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAASoW,GAAwBpW,GAGtC,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACdmR,GAAqBG,YAAYrW,GAAMc,KAAK,SAAAd,GAC1C+E,EAASoR,GAAenW,IACxB+E,EAASoR,GAAe,OACrBnW,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KCtBJ,IAAI+C,IAAW,EAET0K,eACJ,SAAAA,IAAc,IAAA9T,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAA4T,IACZ9T,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAmU,GAAAzT,KAAAH,QAsEF6T,oBAAsB,SAAChJ,GACrB/K,EAAKO,MAAMoK,QAAQC,KAAK,CACtB3D,SAAU,sBACV3G,MAAO,CAAC0T,QAASjJ,MA1EP/K,EAkFdiU,UAAY,WACVjU,EAAKoD,SAAS,CACZ8Q,YAAY,IAEd9K,IAAW,EACX,IAAI+K,EAAU,CACZ7P,OAAQtE,EAAKM,MAAM8T,OAErBpU,EAAKO,MAAMqT,wBAAwBO,IA1FvBnU,EA6FdqU,cAAgB,SAACtJ,GACf/K,EAAKoD,SAAS,CACZgR,MAAOrJ,EAAQ4B,eACf2H,oBAAoB,KAhGVtU,EAoGduU,gBAAkB,WAChBvU,EAAKoD,SAAS,CACZkR,oBAAoB,KAtGVtU,EA0GdwU,mBAAqB,SAAChX,GACpB,OACEgC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKhG,EAAKiX,KAAM/Q,IAAI,GAAG6B,MAAO,CAACgC,MAAO,GAAIC,OAAQ,QA7G/CxH,EAkHd0U,oBAAsB,SAAC3J,GACrB,OACEvL,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACtBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB6H,QAAS,kBAAK1H,EAAK2U,UAAU5J,KACrEvL,EAAAC,EAAAC,cAAA,wBAtHMM,EA4Hd2U,UAAY,SAACnX,GACXwC,EAAKO,MAAMoK,QAAQC,KAAK,gBAAgB,CACtCgK,gBAAiBpX,KA5HnB4L,IAAW,EACbpJ,EAAKM,MAAQ,CACZoC,UAAU,EACP4L,aAAc,GACdvC,gBAAiB,GACjB8I,UAAU,EACVP,oBAAoB,EACpBJ,YAAY,GAEdlU,EAAKwO,eAAiBxO,EAAKwO,eAAeC,KAApB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IAXVA,mFAeZ,IAAIgU,EAAU7V,KAAK2W,MAAMpZ,EAAQ,iBACjC,GAAe,OAAZsY,EAAkB,CACnBA,EAAQrH,eAAiBqH,EAAQ1P,OACjC0P,EAAQjK,iBAAmBiK,EAAQzP,SACnCyP,EAAQS,KAAOT,EAAQe,gBAChBf,EAAQ1P,cACR0P,EAAQzP,gBACRyP,EAAQe,SACf,IAAIC,EAAU,GACdA,EAAQpK,KAAKoJ,GACb9T,KAAKkD,SAAS,CACZ2I,gBAAiBiJ,SAGnB9U,KAAKK,MAAMoI,wEAIWpI,GACpBA,EAAMuO,mBACPvO,EAAMuO,kBAAkBtR,MAAQ+C,EAAMuO,kBAAkBtR,KAAKuO,kBACL,IAAvDxL,EAAMuO,kBAAkBtR,KAAKuO,gBAAgBhJ,SAC3C7C,KAAKkD,SAAS,CACZ2I,gBAAiBxL,EAAMuO,kBAAkBtR,KAAKuO,gBAAgBvO,KAC9DkF,UAAU,IAKdnC,EAAMoT,gBACPpT,EAAMoT,eAAenW,MAAQ+C,EAAMoT,eAAenW,KAAKyX,oBACA,IAAtD1U,EAAMoT,eAAenW,KAAKyX,kBAAkBlS,SAAkBqG,KAC5DA,IAAW,EACXlJ,KAAKkD,SAAS,CACZkR,oBAAoB,EACpBJ,YAAY,IAEdhU,KAAKK,MAAMoI,8DAMJoC,EAASoG,GAAQ,IAAA7N,EAAApD,KAC9B,OACEV,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACtBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB6H,QAAS,kBAAKpE,EAAKyQ,oBAAoBhJ,KAC/EvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeiI,cAAY,UAE1CtI,EAAAC,EAAAC,cAAA,UAAQG,UAAU,0BAA0B6H,QAAS,kBAAKpE,EAAK+Q,cAActJ,KAC3EvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAciI,cAAY,+CAc7C5H,KAAKK,MAAMoK,QAAQC,KAAK,wDAmDjB,IAAAwG,EAAAlR,KACC6L,EAAoB7L,KAAKI,MAAzByL,gBACRjH,QAAQC,IAAIgH,GACZ,IAAI1C,EAAW3N,EAAQ,cACjB8V,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,gBACV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MAC3C+N,EAAcjS,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAY,SACvBhG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAe0F,MAAO,CAACmM,OAAO,iBAC3ClS,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAO8S,QAAS,SAACX,GAAD,OAAOI,EAAKhO,SAAS,CAACkL,aAAc0C,EAAEE,OAAO3V,SAASuE,YAAY,SAAS8R,KAAK,QAEhI,OACEpS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GAC1C/D,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,eAAeoN,OAAQN,GAC1ChS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BACbL,EAAAC,EAAAC,cAAA,OAAMG,UAAU,+BACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,OAAMG,UAAU,+BACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAf,qBAGY,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAqB0F,MAAO,CAAEC,UAAW,UACtDhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,qBAAqB6H,QAAS,kBAAM0J,EAAK8D,cAA3D,wBAIN1V,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6CAA6C0F,MAAO,CAAEyM,YAAa,GAAIC,aAAc,GAAIC,WAAY,GAAIC,cAAe,KACrI3S,EAAAC,EAAAC,cAAC0S,GAAA,UAAD,CAAW7W,MAAOwQ,EAAiB+F,OAAQL,EAAanD,aAAcpO,KAAKI,MAAMgO,aAAc+D,WAAW,EAAMC,KAAM,GAAKC,YAAU,EAACC,YAAU,EAAEC,aAAa,iBAC7JjT,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,OAAOb,OAAO,OAAOjU,KAAMqC,KAAKsU,mBAAoB5B,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAChH/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,mBAAmBb,OAAO,mBAAmBc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAE3F,KAAZ8B,GACA7J,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,QAAQb,OAAO,QAAQjU,KAAMqC,KAAKwU,oBAAqBnP,MAAO,CAACgC,MAAO,WAG9F,KAAZ8B,GACA7J,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAASb,OAAO,SAASjU,KAAMqC,KAAKsO,eAAgBjJ,MAAO,CAACgC,MAAO,aAI7G/H,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAMgU,mBAAoBxB,QAAS5S,KAAKqU,gBAAiBxB,QAAM,GAC/EvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAf,sCAEFL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAM0F,MAAO,CAACgC,MAAO,OAEpC/H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAkB0F,MAAO,CAACyN,UAAW,KAClDxT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BAA0B0F,MAAO,CAACC,UAAW,UAC1DhG,EAAAC,EAAAC,cAAA,UACEG,UAAU,0BACV6H,QAAS,kBAAM0J,EAAK6C,aACpB3S,SAAUpB,KAAKI,MAAM4T,YAHvB,QAQF1U,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACbL,EAAAC,EAAAC,cAAA,UACEG,UAAU,yBACV6H,QAAS,kBAAM0J,EAAKmD,oBAFtB,yBAjMMhT,IAAMC,eA4NpCC,GAAkBC,YAAyB,CAChDoN,kBAAmBpG,GACnBiL,eAAgBA,KAUjB,IAAM3P,GAAc1B,YAAQb,GAP5B,SAA4Bc,GAC1B,MAAO,CACPoG,oBAAqB,kBAAMpG,EAASoG,OACpCiL,wBAAyB,SAACpW,GAAD,OAAU+E,EAASqR,GAAwBpW,QAMvDyH,eAAQjB,GAARiB,CAAqB6O,ICzIrBqB,qHAjHS3X,GAChB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,cAAeO,GAAMS,KAAK,SAAAC,GAK9C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,+CAMP,IAAMuK,EAAQtK,EAAQ,cACtB,IACI,IAAMuK,EAAqB,IAAIjI,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAMrB,OAAO3H,MAAMf,EAAW,gBAJb,CACPQ,OAAQ,MACRC,QAASkI,IAEkC3H,KAAK,SAAAC,GAKhD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,2CAIU+B,GACjB,IAAMwI,EAAQtK,EAAQ,cAClB+B,EAAS,CACT2X,UAAW5X,GAEf,IACI,IAKIK,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAW,cAAeO,GAAMS,KAAK,SAAAC,GAK9C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,0CAIS+B,GAChBsH,QAAQC,IAAI,WAAYvH,GACxB,IAAMwI,EAAQtK,EAAQ,cAClB+B,EAAS,CACT4X,QAAS7X,GAEb,IACI,IAKIK,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAW,aAAcO,GAAMS,KAAK,SAAAC,GAK7C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCpGR,SAAS6Z,GAAgB9X,GAC9B,MAAO,CACLqB,KAAMC,EACNtB,QAuDG,SAAS+X,GAAgB/X,GAC9B,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAASgY,KAGd,GAFc9Z,EAAQ,cAGpB,OAAO,SAAS6G,GACd4S,GAAcM,kBAAkBnX,KAAK,SAAAd,GACnC+E,EAASgT,GAAgB/X,IACtBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KAWG,SAASqP,GAAclY,GAC5B,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAASmY,GAAYnY,GAG1B,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACd4S,GAAcS,cAAcpY,GAAMc,KAAK,SAAAd,GACrC+E,EAASmT,GAAclY,IACpBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KAWG,SAASwP,GAAarY,GAC3B,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAASsY,GAAWtY,GAGzB,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACd4S,GAAcY,aAAavY,GAAMc,KAAK,SAAAd,GACpC+E,EAASsT,GAAarY,IACnBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,6BC/KW,SAAStE,GAASC,GAC/B,IAAMC,EAAS,GAkCf,MAjCqB,KAAjBD,EAAOtE,QACTuE,EAAOvE,MAAQ,sBAEO,KAApBsE,EAAOrE,WACTsE,EAAOtE,SAAW,yBAEI,KAApBqE,EAAOmC,WACTlC,EAAOkC,SAAW,yBAEG,KAAnBnC,EAAOgU,UACT/T,EAAO+T,QAAU,wBAEK,KAApBhU,EAAOkJ,WACTjJ,EAAOiJ,SAAW,0BAEI,KAApBlJ,EAAOmJ,WACTlJ,EAAOkJ,SAAW,0BAEG,KAAnBnJ,EAAOiU,UACThU,EAAOgU,QAAU,yBAEE,KAAjBjU,EAAO1B,QACT2B,EAAO3B,MAAQ,uBAEG,KAAhB0B,EAAOkU,OACTjU,EAAOiU,KAAO,sBAEO,KAAnBlU,EAAOmU,UACTlU,EAAOkU,QAAU,yBAKZlU,eCfLoH,GAAW3N,EAAQ,cACnB4N,IAAkB,EAChB8M,eAEF,SAAAA,EAAY7V,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAkW,IACfpW,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAyW,GAAA/V,KAAAH,KAAMK,KAyNVgN,gBAAkB,WACdvN,EAAKoD,SAAS,CACVoK,gBAAgB,KA5NLxN,EAgOnBqW,WAAa,WACTrW,EAAKO,MAAMoK,QAAQC,KAAK,WAjOT5K,EAiQnBsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SAnQfyE,EAuQnBuW,cAAgB,SAACnK,GACbpM,EAAKoD,SAAS,CACVoT,gBAAiBpK,EACjB6J,QAAS7J,EAAK7Q,QAElByE,EAAKO,MAAMoV,YAAYvJ,EAAKqK,SAAS7O,KA5QtB5H,EA+QnB0W,YAAc,SAACtK,GACXpM,EAAKoD,SAAS,CACVuT,cAAevK,EACf9L,MAAO8L,EAAK7Q,QAEhByE,EAAKO,MAAMuV,WAAW1J,EAAKqK,SAASG,WApRrB5W,EAwRnB6W,WAAa,SAACzK,GACVpM,EAAKoD,SAAS,CACV0T,aAAc1K,EACd8J,KAAM9J,EAAK7Q,SA3RAyE,EAgTnByN,YAAc,WACVzN,EAAKoD,SAAS,CACVsK,gBAAgB,GACjB,cACH1N,EAAK2N,aAAa3N,EAAKM,OACvB,IAAM2B,EAASjC,EAAK2N,aAAa3N,EAAKM,OAEtC,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAIiE,EAAc,CACdC,SAAU7N,EAAKM,MAAMgN,UAEzBhE,IAAkB,EAClBtJ,EAAKO,MAAM0I,cAAc2E,GACzB5N,EAAKoD,SAAS,CACVV,UAAU,MA9TH1C,EAoUnB8N,eAAiB,SAACtQ,GACd,GAAyC,GAAtCwC,EAAKM,MAAMuJ,iBAAiBF,OAC3B3J,EAAKoD,SAAS,CACVyG,iBAAkB,IACpB,kBACD,CACD,IAAImE,EAAQhO,EAAKM,MAAMuJ,iBAAiBoE,QAAQzQ,GAC5CuZ,EAAgB/W,EAAKM,MAAMuJ,iBAAiBsE,MAAM,EAAGH,GAAOI,OAAOpO,EAAKM,MAAMuJ,iBAAiBsE,MAAMH,EAAQ,EAAGhO,EAAKM,MAAMuJ,iBAAiBF,SAChJ3J,EAAKoD,SAAS,CACVyG,iBAAkBkN,GACpB,gBA9US/W,EAkVnBwO,eAAiB,SAACzD,GACd,OACIvL,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACpBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6BAA6B6H,QAAS,kBAAM1H,EAAK8N,eAAe/C,KAC9EvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAciI,cAAY,YAtVpC9H,EA4VnBgX,aAAe,WACXhX,EAAKoD,SAAS,CACV6T,eAAgBjX,EAAKM,MAAM2W,eAC7B,eA7VF3N,IAAkB,EAClBtJ,EAAKM,MAAQ,CACToC,UAAU,EACV+G,YAAY,EACZiE,gBAAgB,EAChBvJ,SAAU,GACVzG,MAAO,GACPC,SAAU,GACVqY,QAAS,GACT9K,SAAU,GACVC,SAAU,GACV8K,QAAS,GACT3V,MAAO,GACP4V,KAAM,GACNC,QAAS,GACTe,YAAa,GACbC,UAAW,GACXC,SAAU,GACVZ,gBAAiB,KACjBG,cAAe,KACfG,aAAc,KACd/K,gBAAiB,GACjBsB,cAAe,GACfH,gBAAiB,GACjBI,SAAU,GACVzD,iBAAkB,GAClB2D,gBAAgB,EAChByJ,eAAe,GA7BJjX,mFAmCM,OADFtE,EAAQ,cAEvBwE,KAAKkD,SAAS,CACVV,UAAU,EACV2K,cAAe3R,EAAQ,cACvBwR,gBAAiBxR,EAAQ,kBAG7BwE,KAAKkD,SAAS,CACVV,UAAU,IAGlBxC,KAAKK,MAAMiV,gBACXtV,KAAKK,MAAMoI,wEAGW9F,GAAW,IAAAS,EAAApD,KAmDjC,GAlDI2C,EAAUiM,mBACfjM,EAAUiM,kBAAkBtR,MAAQqF,EAAUiM,kBAAkBtR,KAAKuO,kBACT,IAA3DlJ,EAAUiM,kBAAkBtR,KAAKuO,gBAAgBhJ,SACrC7C,KAAKkD,SAAS,CACV2I,gBAAiBlJ,EAAUiM,kBAAkBtR,KAAKuO,gBAAgBvO,OAK/EqF,EAAU0S,iBACN1S,EAAU0S,gBAAgB/X,KAAK0Z,cAC4B,IAAvDrU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYnU,SAC1C7C,KAAKkD,SAAS,CACV8T,YAAarU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYG,gBAKrExU,EAAU6S,eACN7S,EAAU6S,cAAclY,KAAK2Z,YAC0B,IAAnDtU,EAAU6S,cAAclY,KAAK2Z,UAAUpU,SACtC7C,KAAKkD,SAAS,CACV+T,UAAWtU,EAAU6S,cAAclY,KAAK2Z,UAAUA,YAK/DtU,EAAUgT,cACNhT,EAAUgT,aAAarY,KAAK4Z,WACyB,IAAjDvU,EAAUgT,aAAarY,KAAK4Z,SAASrU,SACpC7C,KAAKkD,SAAS,CACVgU,SAAUvU,EAAUgT,aAAarY,KAAK4Z,SAASE,WAK5DzU,EAAU0U,eACN1U,EAAU0U,cAAc/Z,KAAKuU,cAC2B,IAApDlP,EAAU0U,cAAc/Z,KAAKuU,WAAWhP,SACvC7C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMoK,QAAQC,KAAK,WAExBzH,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,MAIhBG,EAAUsM,aACT,GAAGtM,EAAUsM,aAAa3R,KAAK4R,UAAW,CACtC,IAAqD,IAAlDvM,EAAUsM,aAAa3R,KAAK4R,UAAUrM,SAAoBuG,GAKzD,GAJAA,IAAkB,EAClBpJ,KAAKkD,SAAS,CACVV,UAAU,IAEVxC,KAAKI,MAAMuJ,iBAAiBF,OAAS,EAAG,CACxC,IAAI2F,EAAS,EACb,GAAgB,KAAZjG,GAAiB,KAAAqC,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IACjB,QAAAiQ,EAAAC,EAAkB5L,KAAKI,MAAMuJ,iBAA7BmC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA+C,CAAAG,EAAAtQ,MACjCoR,gBAAkBzM,KAAKI,MAAM+M,gBACnCiC,EAAS,IAHA,MAAA7T,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,QAMd,KAAAS,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IACH,QAAA4Q,EAAAC,EAAkBvM,KAAKI,MAAMuJ,iBAA7BmC,OAAAC,cAAAI,GAAAG,EAAAC,EAAAP,QAAAC,MAAAE,GAAA,EAA+C,CAAAG,EAAAjR,MACjC0U,WAAa/P,KAAKI,MAAMgN,WAC9BgC,EAAS,IAHd,MAAA7T,GAAA6Q,GAAA,EAAAC,EAAA9Q,EAAA,YAAA4Q,GAAA,MAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,IAOP,GAAc,GAAV+C,EAAa,CACb,IAAIY,EAAWhQ,KAAKI,MAAMuJ,iBACtB7C,EAAU,GACd,GAAgB,KAAZqC,GAAiB,KAAAwD,GAAA,EAAAC,GAAA,EAAAC,OAAAnR,EAAA,IACjB,QAAAoR,EAAAC,EAAiB/M,KAAKI,MAAMyL,gBAA5BC,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAA6C,KAApCT,EAAoCY,EAAAzR,MACrCiV,OAAOtQ,KAAKI,MAAM+M,gBAAkBjB,EAAKO,iBACzC3F,EAAUoF,EAAKrC,mBAHN,MAAAtO,GAAAqR,GAAA,EAAAC,EAAAtR,EAAA,YAAAoR,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,SAOjB/F,EAAU9G,KAAKI,MAAM4M,gBAEzBgD,EAAStF,KAAK,CACV+B,eAAgBzM,KAAKI,MAAM+M,cAC3BtD,iBAAkB/C,EAClBiJ,UAAW/P,KAAKI,MAAMgN,WAE1BpN,KAAKkD,SAAS,CACVyG,iBAAkBqG,GACnB,WACiB,KAAZ7G,GACA/F,EAAKF,SAAS,CACViK,cAAe,GACfC,SAAU,GACVI,gBAAgB,IAGpBpK,EAAKF,SAAS,CACVkK,SAAU,GACVI,gBAAgB,WAK5BxN,KAAKkD,SAAS,CACVoK,gBAAgB,QAGrB,CACH,IAAI0C,EAAWhQ,KAAKI,MAAMuJ,iBACtB7C,EAAU,GACd,GAAgB,KAAZqC,GAAiB,KAAAkG,GAAA,EAAAC,GAAA,EAAAC,OAAA7T,EAAA,IACjB,QAAA8T,EAAAC,EAAiBzP,KAAKI,MAAMyL,gBAA5BC,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,GAAA,EAA6C,KAApCnD,EAAoCsD,EAAAnU,MACrCiV,OAAOtQ,KAAKI,MAAM+M,gBAAkBjB,EAAKO,iBACzC3F,EAAUoF,EAAKrC,mBAHN,MAAAtO,GAAA+T,GAAA,EAAAC,EAAAhU,EAAA,YAAA8T,GAAA,MAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,SAOjBzI,EAAU9G,KAAKI,MAAM4M,gBAGzBgD,EAAStF,KAAK,CACV+B,eAAgBzM,KAAKI,MAAM+M,cAC3BtD,iBAAkB/C,EAClBiJ,UAAW/P,KAAKI,MAAMgN,WAE1BpN,KAAKkD,SAAS,CACVyG,iBAAkBqG,GACnB,WACiB,KAAZ7G,GACA/F,EAAKF,SAAS,CACViK,cAAe,GACfC,SAAU,GACVI,gBAAgB,IAGpBpK,EAAKF,SAAS,CACVkK,SAAU,GACVI,gBAAgB,OAMiB,IAAlD7K,EAAUsM,aAAa3R,KAAK4R,UAAUrM,SAAqBuG,KAC1DA,IAAkB,EAClBpJ,KAAKkD,SAAS,CACVV,UAAU,IAEd8B,IAAKC,KAAK,CACNC,MAAO7B,EAAUsM,aAAa3R,KAAK4R,UAAUvL,QAC7ChF,KAAM,OACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,YAIf1B,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,4CAgBfxC,KAAKkD,SAAS,CACZqG,YAAY,GACX,cACH1H,GAAS7B,KAAKI,OAGd,IAFA,IAAM2B,EAASF,GAAS7B,KAAKI,OACzBsJ,EAAc1J,KAAKI,MAAMuJ,iBACpBC,EAAI,EAAGA,EAAIF,EAAYD,OAAQG,IAAK,QACjCF,EAAYE,GACXC,iBAEb,GAAmC,IAA/BpK,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAImH,EAAa,CACb3M,SAAUjE,KAAKI,MAAM6D,SACrBzG,MAAOwC,KAAKI,MAAM5C,MAClBC,SAAUuC,KAAKI,MAAM3C,SACrBqY,QAAS9V,KAAKI,MAAM0V,QACpB9K,SAAUhL,KAAKI,MAAM4K,SACrBC,SAAUjL,KAAKI,MAAM6K,SACrB8K,QAAS/V,KAAKI,MAAM2V,QACpB3V,MAAOJ,KAAKI,MAAMA,MAClB4V,KAAMhW,KAAKI,MAAM4V,KACjBC,QAASjW,KAAKI,MAAM6V,QACpBlM,YAAaL,GAEjB1J,KAAKK,MAAMI,iBAAiBmQ,2CAkCrBE,GACX9Q,KAAKkD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,6CAIrByG,GACT,IAAMC,EAAS,GAOf,MAN4B,IAAxBD,EAAOqL,gBACPpL,EAAOoL,cAAgB,6BAEJ,IAAnBrL,EAAOsL,WACPrL,EAAOqL,SAAW,yBAEfrL,mCAqDF,IAAAmP,EAAAlR,KACCsR,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,eAEV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzCzB,EAASF,GAAS7B,KAAKI,OACvBiR,EAAarR,KAAKyN,aAAazN,KAAKI,OALrCgR,EAMoEpR,KAAKI,MAAtEmJ,EANH6H,EAMG7H,WAAYyN,EANf5F,EAMe4F,YAAaC,EAN5B7F,EAM4B6F,UAAWC,EANvC9F,EAMuC8F,SAAU1J,EANjD4D,EAMiD5D,eAGhD8J,EAAqB,GACvBN,GAAeA,EAAYvN,OAAS,GACpCuN,EAAYhE,IAAI,SAAC9G,GAEb,OADAoL,EAAmB5M,KAAK,CAAErP,MAAO6Q,EAAKqL,aAAcrY,MAAOgN,EAAKqL,aAAchB,SAAUrK,IAExF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKqL,aAAc7P,GAAIwE,EAAKxE,GAAItM,IAAK8Q,EAAKxE,IACpDwE,EAAKqL,gBAKlB,IAAMC,EAAmB,GACrBP,GAAaA,EAAUxN,OAAS,GAChCwN,EAAUjE,IAAI,SAAC9G,GAEX,OADAsL,EAAiB9M,KAAK,CAAErP,MAAO6Q,EAAKuL,WAAYvY,MAAOgN,EAAKuL,WAAYlB,SAAUrK,IAElF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKuL,WAAY/P,GAAIwE,EAAKwK,SAAUtb,IAAK8Q,EAAKwK,UACxDxK,EAAKuL,cAKlB,IAAMC,EAAkB,GAWxB,OAVIR,GAAYA,EAASzN,OAAS,GAC9ByN,EAASlE,IAAI,SAAC9G,GAEV,OADAwL,EAAgBhN,KAAK,CAAErP,MAAO6Q,EAAKyL,UAAWzY,MAAOgN,EAAKyL,UAAWpB,SAAUrK,IAE/E5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKyL,UAAWjQ,GAAIwE,EAAK0L,QAASxc,IAAK8Q,EAAK0L,SACtD1L,EAAKyL,aAMdrY,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,cAAcoN,OAAQN,GACvChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YACzD7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,kBAEJL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,gBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,kBAAkBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC5H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkC,aAI7E3E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,QAAQgB,UAAU,eAAeC,YAAY,cAAckB,KAAK,QAAQiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MACtH/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOvE,WAKjF8B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAMqB,KAAKI,MAAM2W,cAAgB,OAAS,WAAYpX,UAAU,eAAeC,YAAY,iBAAiBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAElK9Q,KAAKI,MAAM2W,eACXzX,EAAAC,EAAAC,cAAA,KAAGgI,QAASxH,KAAK8W,cACbxX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAAqBiI,cAAY,WAIjD5H,KAAKI,MAAM2W,eACZzX,EAAAC,EAAAC,cAAA,QAAMgI,QAASxH,KAAK8W,cAChBxX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,2BAA2BiI,cAAY,UAG3D7F,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOtE,aAI7E6B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,qBAAqBkB,KAAK,UAAUiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC9H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO+T,aAKjFxW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,kBAAkBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC5H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiJ,aAI7E1L,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,6BAA6BkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MACvI/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkJ,cAMjF3L,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,SAASgB,UAAU,eAAeC,YAAY,gBAAgBkB,KAAK,UAAUiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC3H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkU,YAI7E3W,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMkW,gBAClBvD,SAAU/S,KAAKqW,cACf0B,QAAST,EACTxW,KAAK,UACLlB,YAAY,mBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOgU,aAKjFzW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMqW,cAClB1D,SAAU/S,KAAKwW,YACfuB,QAASP,EACT1W,KAAK,QACLlB,YAAY,iBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO3B,UAI7Ed,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMwW,aAClB7D,SAAU/S,KAAK2W,WACfoB,QAASL,EACT5W,KAAK,OACLlB,YAAY,gBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiU,UAKjF1W,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BAGK,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,gBAAgBiS,SAAU,SAACjC,GAAD,OAAOI,EAAKxC,eAAeoC,IAAIzV,MAAO2E,KAAKI,MAAM+M,eAC7G7N,EAAAC,EAAAC,cAAA,UAAQnE,MAAM,IAAd,sBAEK2E,KAAKI,MAAMyL,iBAAoB7L,KAAKI,MAAMyL,gBAAgBmH,IAAI,SAACC,EAAKC,GAAN,OAC3D5T,EAAAC,EAAAC,cAAA,UAAQpE,IAAK8X,EAAG7X,MAAO4X,EAAIxG,eAAgBrL,SAAU6R,EAAI7R,UAAW6R,EAAIpJ,qBAInFwH,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWlE,gBAGjF7N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,gBAAgBzF,MAAO2E,KAAKI,MAAM+M,cAAegG,UAAQ,GAC3F7T,EAAAC,EAAAC,cAAA,UAAQnE,MAAO2E,KAAKI,MAAM+M,cAAe/L,UAAU,GAAOpB,KAAKI,MAAM4M,kBAExEqE,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWlE,iBAIzF7N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAemB,KAAK,WAAWlB,YAAY,kBAAkBmT,SAAU,SAACjC,GAAD,OAAOI,EAAKxC,eAAeoC,IAAIzV,MAAO2E,KAAKI,MAAMgN,WACpJiE,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWjE,YAGrF9N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAEPL,EAAAC,EAAAC,cAAA,UACAgI,QAAS,WACL0J,EAAK3D,eAET5N,UAAU,uBAJV,WAWhBK,KAAKI,MAAMuJ,iBAAiBF,OAAS,GACrCnK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAC0S,GAAA,UAAD,CAAW7W,MAAO2E,KAAKI,MAAMuJ,iBAAkBwI,WAAW,EAAMC,KAAM,GAAKC,YAAU,EAACC,YAAU,EAAEC,aAAa,iBAC3GjT,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,mBAAmBb,OAAO,mBAAmBc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACzG/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,YAAYb,OAAO,YAAYc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAC3F/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAASb,OAAO,SAASjU,KAAMqC,KAAKsO,eAAgBjJ,MAAO,CAACgC,MAAO,cAMvH/H,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAMkN,eAAgBsF,QAAS5S,KAAKqN,gBAAiBwF,QAAM,GACzEvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAEK,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAAf,uEAEAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAAf,sDAIRL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAM0F,MAAO,CAACgC,MAAO,SAK5C/H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAK0J,EAAK1Q,gBAAgBb,UAAU,gCAArD,wBAhmBN0B,IAAMC,eAsnBlCC,GAAkBC,YAAyB,CAC7C6V,cAAejC,GACfC,gBAAiBA,GACjBM,aAAcA,GACdH,cAAeA,GACf5G,kBAAmBpG,GACnByG,aAAcnG,KAalB,IAAMhF,GAAc1B,YAAQb,GAV5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EFroB7B,SAA0B/E,GAG/B,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACd4S,GAAc+C,aAAa1a,GAAMc,KAAK,SAAAd,GAEpC+E,EAAS+S,GAAgB9X,IACzB+E,EAAS+S,GAAgB,QACL,IAAjB9X,EAAKuF,SACNyB,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,OAGS,IAAjBrH,EAAKuF,SACNyB,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGRrH,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KE4lByC8R,CAAiB3a,KACtDgY,cAAe,kBAAMjT,EAASiT,OAC9BG,YAAa,SAACnY,GAAD,OAAU+E,EAASoT,GAAYnY,KAC5CsY,WAAY,SAACtY,GAAD,OAAU+E,EAASuT,GAAWtY,KAChDmL,oBAAqB,kBAAMpG,EAASoG,OAC9BM,cAAe,SAACzL,GAAD,OAAU+E,EAAS0G,GAAczL,QAKzCyH,eAAQjB,GAARiB,CAAqBmR,ICxnBrBgC,mHArCO5a,GACd,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,MACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,4BAA6BO,GAAMS,KAAK,SAAAC,GAc5D,OAbmB,IAAhBA,EAAS6G,IACRZ,IAAKC,KAAK,CACNC,MAAO,yBACP7F,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGS,MAApBtG,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCvBR,SAAS4c,GAAc7a,GAC5B,MAAO,CACLqB,KAAMC,EACNtB,QCfW,SAASuE,GAASC,GAC/B,IAAMC,EAAS,GA4Bf,MA3BqB,KAAjBD,EAAOtE,QACTuE,EAAOvE,MAAQ,sBAEO,KAApBsE,EAAOmC,WACTlC,EAAOkC,SAAW,yBAEG,KAAnBnC,EAAOgU,UACT/T,EAAO+T,QAAU,wBAEK,KAApBhU,EAAOkJ,WACTjJ,EAAOiJ,SAAW,0BAEI,KAApBlJ,EAAOmJ,WACTlJ,EAAOkJ,SAAW,0BAEG,KAAnBnJ,EAAOiU,UACThU,EAAOgU,QAAU,yBAEE,KAAjBjU,EAAO1B,QACT2B,EAAO3B,MAAQ,uBAEG,KAAhB0B,EAAOkU,OACTjU,EAAOiU,KAAO,sBAEO,KAAnBlU,EAAOmU,UACTlU,EAAOkU,QAAU,yBAEZlU,ECRT,IAAIqW,IAAY,EACZC,IAAU,EACVC,IAAS,EACTC,IAAgB,EAChBpP,GAAW3N,EAAQ,cACnB4N,IAAkB,EAEhBoP,eAEF,SAAAA,IAAc,IAAA1Y,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAwY,IACV1Y,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA+Y,GAAArY,KAAAH,QAqTJqN,gBAAkB,WACdvN,EAAKoD,SAAS,CACVoK,gBAAgB,KAxTVxN,EA4TdW,iBAAmB,WACfX,EAAKoD,SAAS,CACVqG,YAAY,GACb,cACH1H,GAAS/B,EAAKM,OACd,IAAM2B,EAASF,GAAS/B,EAAKM,OAC7B,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAElC,IADA,IAAIC,EAAc5J,EAAKM,MAAMuJ,iBACpBC,EAAI,EAAGA,EAAIF,EAAYD,OAAQG,IAAK,QACjCF,EAAYE,GACXC,iBAEb,IAAI+G,EAAa,CACb5G,QAASlK,EAAKM,MAAMuK,SAASX,QAC7B/F,SAAUnE,EAAKM,MAAM6D,SACrB6R,QAAShW,EAAKM,MAAM0V,QACpB9K,SAAUlL,EAAKM,MAAM4K,SACrBC,SAAUnL,EAAKM,MAAM6K,SACrB8K,QAASjW,EAAKM,MAAM2V,QACpB3V,MAAON,EAAKM,MAAMA,MAClB4V,KAAMlW,EAAKM,MAAM4V,KACjBC,QAASnW,EAAKM,MAAM6V,QACpBlM,YAAaL,GAEjB5J,EAAKO,MAAMI,iBAAiBmQ,KApVtB9Q,EAwVdqW,WAAa,WACTrW,EAAKO,MAAMoK,QAAQgO,UAzVT3Y,EA4VdsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SA9VpByE,EAkWduW,cAAgB,SAACnK,GACbpM,EAAKoD,SAAS,CACVoT,gBAAiBpK,EACjB6J,QAAS7J,EAAK7Q,QAElByE,EAAKO,MAAMoV,YAAYvJ,EAAKqK,SAAS7O,IACrC2Q,IAAU,GAxWAvY,EA2Wd0W,YAAc,SAACtK,GACXpM,EAAKoD,SAAS,CACVuT,cAAevK,EACf9L,MAAO8L,EAAK7Q,QAEhByE,EAAKO,MAAMuV,WAAW1J,EAAKqK,SAASG,UACpC4B,IAAS,GAjXCxY,EAoXd6W,WAAa,SAACzK,GACVpM,EAAKoD,SAAS,CACV0T,aAAc1K,EACd8J,KAAM9J,EAAK7Q,SAvXLyE,EA4YdyN,YAAc,WACVzN,EAAKoD,SAAS,CACVsK,gBAAgB,GACjB,cACH1N,EAAK2N,aAAa3N,EAAKM,OACvB,IAAM2B,EAASjC,EAAK2N,aAAa3N,EAAKM,OAEtC,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAIiE,EAAc,CACdC,SAAU7N,EAAKM,MAAMgN,UAEzBhE,IAAkB,EAClBtJ,EAAKO,MAAM0I,cAAc2E,GACzB5N,EAAKoD,SAAS,CACVV,UAAU,MA1ZR1C,EAgad8N,eAAiB,SAACtQ,GACd,GAAyC,GAAtCwC,EAAKM,MAAMuJ,iBAAiBF,OAC3B3J,EAAKoD,SAAS,CACVyG,iBAAkB,IACpB,kBACC,CACH,IAAImE,EAAQhO,EAAKM,MAAMuJ,iBAAiBoE,QAAQzQ,GAC5C0Q,EAAalO,EAAKM,MAAMuJ,iBAAiBsE,MAAM,EAAGH,GAAOI,OAAOpO,EAAKM,MAAMuJ,iBAAiBsE,MAAMH,EAAQ,EAAGhO,EAAKM,MAAMuJ,iBAAiBF,SAE7I3J,EAAKoD,SAAS,CACVyG,iBAAkBqE,GACpB,gBA3aIlO,EA+adwO,eAAiB,SAACzD,GACd,OACIvL,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACpBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6BAA6B6H,QAAS,kBAAM1H,EAAK8N,eAAe/C,KAC9EvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAciI,cAAY,YAjbnDwQ,IAAY,EACZC,IAAU,EACVC,IAAS,EACTC,IAAgB,EAChBnP,IAAkB,EAClBtJ,EAAKM,MAAQ,CACToC,UAAU,EACVmI,SAAU,KACVpB,YAAY,EACZtF,SAAU,GACVzG,MAAO,GACPsY,QAAS,GACT9K,SAAU,GACVC,SAAU,GACV8K,QAAS,GACT3V,MAAO,GACP4V,KAAM,GACNC,QAAS,GACTe,YAAa,GACbC,UAAW,GACXC,SAAU,GACVZ,gBAAiB,KACjBG,cAAe,KACfG,aAAc,KACd/K,gBAAiB,GACjBsB,cAAe,GACfH,gBAAiB,GACjBI,SAAU,GACVzD,iBAAkB,GAClB2D,gBAAgB,EAChBE,gBAAgB,GAhCV1N,mFAoCM,IAAAsD,EAAApD,KAEK,OADFxE,EAAQ,eAEvBwE,KAAKkD,SAAS,CACViK,cAAe3R,EAAQ,cACvBwR,gBAAiBxR,EAAQ,kBAGjCwE,KAAKK,MAAMiV,gBACXtV,KAAKK,MAAMoI,sBACX2P,IAAY,EACZG,IAAgB,EAChB,IAAMG,EAAc1Y,KAAKK,MAAM0C,SAAS3C,MAAMuK,SAC9C3K,KAAKkD,SAAS,CACVyH,SAAU+N,GACX,WACC,GAAgB,KAAZvP,IACI/F,EAAKhD,MAAMuK,SAASY,SAAS9B,OAAS,EAAG,KAAA+B,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IACzC,QAAAiQ,EAAAC,EAAiBxI,EAAKhD,MAAMuK,SAASY,SAArCO,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA+C,CAAAG,EAAAtQ,MACtCwO,iBAAoBrO,EAAQ,iBAFI,MAAAD,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,IAMjDtI,EAAKF,SAAS,CACVe,SAAUb,EAAKhD,MAAMuK,SAAS1G,SAC9BzG,MAAO4F,EAAKhD,MAAMuK,SAASnN,MAC3BsY,QAAS1S,EAAKhD,MAAMuK,SAASmL,QAC7B9K,SAAU5H,EAAKhD,MAAMuK,SAASK,SAC9BC,SAAU7H,EAAKhD,MAAMuK,SAASM,SAC9B8K,QAAS3S,EAAKhD,MAAMuK,SAASoL,QAC7B3V,MAAOgD,EAAKhD,MAAMuK,SAASvK,MAC3B4V,KAAM5S,EAAKhD,MAAMuK,SAASqL,KAC1BC,QAAS7S,EAAKhD,MAAMuK,SAASsL,QAC7BtM,iBAAkBvG,EAAKhD,MAAMuK,SAASY,aAG9CvL,KAAKkD,SAAS,CACVV,UAAU,sDAIQG,GAAW,IAAAuO,EAAAlR,KAqHjC,GApHI2C,EAAUiM,mBACfjM,EAAUiM,kBAAkBtR,MAAQqF,EAAUiM,kBAAkBtR,KAAKuO,kBACT,IAA3DlJ,EAAUiM,kBAAkBtR,KAAKuO,gBAAgBhJ,SAAmB0V,KACxDA,IAAgB,EAChBvY,KAAKkD,SAAS,CACV2I,gBAAiBlJ,EAAUiM,kBAAkBtR,KAAKuO,gBAAgBvO,MACnE,WACC,GAAI4T,EAAK9Q,MAAMuK,SAASY,SAAS9B,OAAS,EAAG,CACzC,IAAIkP,EAAUzH,EAAK9Q,MAAMuJ,iBADgBwC,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAEzC,QAAA4Q,EAAAC,EAAiB2E,EAAK9Q,MAAMyL,gBAA5BC,OAAAC,cAAAI,GAAAG,EAAAC,EAAAP,QAAAC,MAAAE,GAAA,EAA6C,KAApCD,EAAoCI,EAAAjR,MAAAsR,GAAA,EAAAC,GAAA,EAAAC,OAAAnR,EAAA,IACzC,QAAAoR,EAAAC,EAAkB4L,EAAlB7M,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAA2B,KAAlBiM,EAAkB9L,EAAAzR,MACnBiV,OAAOsI,EAAMnM,kBAAoBP,EAAKO,iBACtCmM,EAAM/O,iBAAmBqC,EAAKrC,mBAHG,MAAAtO,GAAAqR,GAAA,EAAAC,EAAAtR,EAAA,YAAAoR,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,KAFJ,MAAAtR,GAAA6Q,GAAA,EAAAC,EAAA9Q,EAAA,YAAA4Q,GAAA,MAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,GASzC6E,EAAKhO,SAAS,CACVyG,iBAAkBgP,QAOvChW,EAAU0S,iBACN1S,EAAU0S,gBAAgB/X,KAAK0Z,cAC4B,IAAvDrU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYnU,SAAoBuV,KAC9DA,IAAY,EACZpY,KAAKkD,SAAS,CACV8T,YAAarU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYG,eACzD,WAEC,GAA2B,KAAvBjG,EAAK9Q,MAAM2V,QAAgB,KAAA1G,GAAA,EAAAC,GAAA,EAAAC,OAAA7T,EAAA,IAC3B,QAAA8T,EAAAC,EAAiByB,EAAK9Q,MAAM4W,YAA5BlL,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,GAAA,EAAyC,KAAhCnD,EAAgCsD,EAAAnU,MACrC,GAAI6V,EAAK9Q,MAAMuK,SAASoL,QAAQjX,gBAAkBoN,EAAKqL,aAAazY,cAAe,CAC/E,IAAM+Z,EAAwB,CAC1Bxd,MAAO6Q,EAAKxE,GACZxI,MAAOgS,EAAK9Q,MAAM2V,SAEtB7E,EAAKhO,SAAS,CACVoT,gBAAiBuC,GAClB,cACH3H,EAAK7Q,MAAMoV,YAAYvJ,EAAKxE,IAC5B2Q,IAAU,IAXS,MAAA9c,GAAA+T,GAAA,EAAAC,EAAAhU,EAAA,YAAA8T,GAAA,MAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,QAmB5C5M,EAAU6S,eACN7S,EAAU6S,cAAclY,KAAK2Z,YAC0B,IAAnDtU,EAAU6S,cAAclY,KAAK2Z,UAAUpU,SAAoBwV,KAC1DA,IAAU,EACVrY,KAAKkD,SAAS,CACV+T,UAAWtU,EAAU6S,cAAclY,KAAK2Z,UAAUA,WACnD,WACC,GAAyB,KAArB/F,EAAK9Q,MAAMA,MAAc,KAAAsP,GAAA,EAAAC,GAAA,EAAAC,OAAAlU,EAAA,IACzB,QAAAmU,EAAAC,EAAiBoB,EAAK9Q,MAAM6W,UAA5BnL,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EAAuC,KAA9BxD,EAA8B2D,EAAAxU,MACnC,GAAI6V,EAAK9Q,MAAMA,MAAMtB,gBAAkBoN,EAAKuL,WAAW3Y,cAAe,CAClE,IAAMga,EAAsB,CACxBzd,MAAO6Q,EAAKwK,SACZxX,MAAOgS,EAAK9Q,MAAMA,OAEtB8Q,EAAKhO,SAAS,CACVuT,cAAeqC,GAChB,cACH5H,EAAK7Q,MAAMuV,WAAW1J,EAAKwK,UAC3B4B,IAAS,IAXQ,MAAA/c,GAAAoU,GAAA,EAAAC,EAAArU,EAAA,YAAAmU,GAAA,MAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,MAAAC,QAmB1CjN,EAAUgT,cACNhT,EAAUgT,aAAarY,KAAK4Z,WACyB,IAAjDvU,EAAUgT,aAAarY,KAAK4Z,SAASrU,SAAoByV,KACxDA,IAAS,EACTtY,KAAKkD,SAAS,CACVgU,SAAUvU,EAAUgT,aAAarY,KAAK4Z,SAASE,UAChD,WACC,GAAwB,KAApBlG,EAAK9Q,MAAM4V,KAAa,KAAA/F,GAAA,EAAAC,GAAA,EAAAC,OAAAzU,EAAA,IACxB,QAAA0U,EAAAC,EAAiBa,EAAK9Q,MAAM8W,SAA5BpL,OAAAC,cAAAkE,GAAAG,EAAAC,EAAArE,QAAAC,MAAAgE,GAAA,EAAsC,KAA7B/D,EAA6BkE,EAAA/U,MAClC,GAAI6V,EAAK9Q,MAAM4V,KAAKlX,gBAAkBoN,EAAKyL,UAAU7Y,cAAe,CAChE,IAAMia,EAAqB,CACvB1d,MAAO6Q,EAAK0L,QACZ1Y,MAAOgS,EAAK9Q,MAAM4V,MAEtB9E,EAAKhO,SAAS,CACV0T,aAAcmC,GACf,gBATa,MAAAxd,GAAA2U,GAAA,EAAAC,EAAA5U,EAAA,YAAA0U,GAAA,MAAAI,EAAA3D,QAAA2D,EAAA3D,SAAA,WAAAwD,EAAA,MAAAC,QAiBxCxN,EAAUwV,eACfxV,EAAUwV,cAAc7a,MAAQqF,EAAUwV,cAAc7a,KAAKkN,cACR,IAApD7H,EAAUwV,cAAc7a,KAAKkN,WAAW3H,SAC5B7C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMoK,QAAQC,KAAK,WAExBzH,WAAW,WAAQiO,EAAKhO,SAAS,CAC7BV,UAAU,KACP,MAKhBG,EAAUsM,aACT,GAAGtM,EAAUsM,aAAa3R,KAAK4R,UAAW,CACtC,IAAqD,IAAlDvM,EAAUsM,aAAa3R,KAAK4R,UAAUrM,SAAoBuG,GAKzD,GAJAA,IAAkB,EAClBpJ,KAAKkD,SAAS,CACVV,UAAU,IAEVxC,KAAKI,MAAMuJ,iBAAiBF,OAAS,EAAG,CACxC,IAAI2F,EAAS,EACb,GAAgB,KAAZjG,GAAiB,KAAAoH,GAAA,EAAAC,GAAA,EAAAC,OAAA/U,EAAA,IACjB,QAAAgV,EAAAC,EAAkB3Q,KAAKI,MAAMuJ,iBAA7BmC,OAAAC,cAAAwE,GAAAG,EAAAC,EAAA3E,QAAAC,MAAAsE,GAAA,EAA+C,CAAAG,EAAArV,MACjCoR,gBAAkBzM,KAAKI,MAAM+M,gBACnCiC,EAAS,IAHA,MAAA7T,GAAAiV,GAAA,EAAAC,EAAAlV,EAAA,YAAAgV,GAAA,MAAAI,EAAAjE,QAAAiE,EAAAjE,SAAA,WAAA8D,EAAA,MAAAC,QAMd,KAAAuI,GAAA,EAAAC,GAAA,EAAAC,OAAAxd,EAAA,IACH,QAAAyd,EAAAC,EAAkBpZ,KAAKI,MAAMuJ,iBAA7BmC,OAAAC,cAAAiN,GAAAG,EAAAC,EAAApN,QAAAC,MAAA+M,GAAA,EAA+C,CAAAG,EAAA9d,MACjC0U,WAAa/P,KAAKI,MAAMgN,WAC9BgC,EAAS,IAHd,MAAA7T,GAAA0d,GAAA,EAAAC,EAAA3d,EAAA,YAAAyd,GAAA,MAAAI,EAAA1M,QAAA0M,EAAA1M,SAAA,WAAAuM,EAAA,MAAAC,IAOP,GAAe,IAAX9J,EAAc,CACd,IAAIY,EAAWhQ,KAAKI,MAAMuJ,iBACtB7C,EAAU,GACd,GAAgB,KAAZqC,GAAiB,KAAAkQ,GAAA,EAAAC,GAAA,EAAAC,OAAA7d,EAAA,IACjB,QAAA8d,EAAAC,EAAiBzZ,KAAKI,MAAMyL,gBAA5BC,OAAAC,cAAAsN,GAAAG,EAAAC,EAAAzN,QAAAC,MAAAoN,GAAA,EAA6C,KAApCnN,EAAoCsN,EAAAne,MACrCiV,OAAOtQ,KAAKI,MAAM+M,gBAAkBjB,EAAKO,iBACzC3F,EAAUoF,EAAKrC,mBAHN,MAAAtO,GAAA+d,GAAA,EAAAC,EAAAhe,EAAA,YAAA8d,GAAA,MAAAI,EAAA/M,QAAA+M,EAAA/M,SAAA,WAAA4M,EAAA,MAAAC,SAOjBzS,EAAU9G,KAAKI,MAAM4M,gBAEzBgD,EAAStF,KAAK,CACV+B,eAAgBzM,KAAKI,MAAM+M,cAC3BtD,iBAAkB/C,EAClBiJ,UAAW/P,KAAKI,MAAMgN,WAE1BpN,KAAKkD,SAAS,CACVyG,iBAAkBqG,GACnB,WACiB,KAAZ7G,GACA+H,EAAKhO,SAAS,CACViK,cAAe,GACfC,SAAU,GACVI,gBAAgB,IAGpB0D,EAAKhO,SAAS,CACVkK,SAAU,GACVI,gBAAgB,WAK5BxN,KAAKkD,SAAS,CACVoK,gBAAgB,QAGrB,CACH,IAAI0C,EAAWhQ,KAAKI,MAAMuJ,iBACtB7C,EAAU,GACd,GAAgB,KAAZqC,GAAiB,KAAAuQ,GAAA,EAAAC,GAAA,EAAAC,OAAAle,EAAA,IACjB,QAAAme,EAAAC,EAAiB9Z,KAAKI,MAAMyL,gBAA5BC,OAAAC,cAAA2N,GAAAG,EAAAC,EAAA9N,QAAAC,MAAAyN,GAAA,EAA6C,KAApCxN,EAAoC2N,EAAAxe,MACrCiV,OAAOtQ,KAAKI,MAAM+M,gBAAkBjB,EAAKO,iBACzC3F,EAAUoF,EAAKrC,mBAHN,MAAAtO,GAAAoe,GAAA,EAAAC,EAAAre,EAAA,YAAAme,GAAA,MAAAI,EAAApN,QAAAoN,EAAApN,SAAA,WAAAiN,EAAA,MAAAC,SAOjB9S,EAAU9G,KAAKI,MAAM4M,gBAEzBgD,EAAStF,KAAK,CACV+B,eAAgBzM,KAAKI,MAAM+M,cAC3BtD,iBAAkB/C,EAClBiJ,UAAW/P,KAAKI,MAAMgN,WAE1BpN,KAAKkD,SAAS,CACVyG,iBAAkBqG,GACnB,WACiB,KAAZ7G,GACA+H,EAAKhO,SAAS,CACViK,cAAe,GACfC,SAAU,GACVI,gBAAgB,IAGpB0D,EAAKhO,SAAS,CACVkK,SAAU,GACVI,gBAAgB,OAMiB,IAAlD7K,EAAUsM,aAAa3R,KAAK4R,UAAUrM,SAAqBuG,KAC1DA,IAAkB,EAClBpJ,KAAKkD,SAAS,CACVV,UAAU,IAEd8B,IAAKC,KAAK,CACNC,MAAO7B,EAAUsM,aAAa3R,KAAK4R,UAAUvL,QAC7ChF,KAAM,OACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,YAIf1B,WAAW,WAAQiO,EAAKhO,SAAS,CAC7BV,UAAU,KACP,4CA0EJsO,GACX9Q,KAAKkD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,6CAIrByG,GACT,IAAMC,EAAS,GAOf,MAN6B,KAAzBD,EAAOqL,gBACPpL,EAAOoL,cAAgB,6BAEH,KAApBrL,EAAOsL,WACPrL,EAAOqL,SAAW,yBAEfrL,mCAgDF,IAAAoP,EAAAnR,KACCsR,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,iBACV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzCzB,EAASF,GAAS7B,KAAKI,OACvBiR,EAAarR,KAAKyN,aAAazN,KAAKI,OAJrCgR,EAKoEpR,KAAKI,MAAtEmJ,EALH6H,EAKG7H,WAAYyN,EALf5F,EAKe4F,YAAaC,EAL5B7F,EAK4B6F,UAAWC,EALvC9F,EAKuC8F,SAAU1J,EALjD4D,EAKiD5D,eAEhD8J,EAAqB,GACvBN,GAAeA,EAAYvN,OAAS,GACpCuN,EAAYhE,IAAI,SAAC9G,GAEb,OADAoL,EAAmB5M,KAAK,CAAErP,MAAO6Q,EAAKqL,aAAcrY,MAAOgN,EAAKqL,aAAchB,SAAUrK,IAExF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKqL,aAAc7P,GAAIwE,EAAKxE,GAAItM,IAAK8Q,EAAKxE,IACpDwE,EAAKqL,gBAMlB,IAAMC,EAAmB,GACrBP,GAAaA,EAAUxN,OAAS,GAChCwN,EAAUjE,IAAI,SAAC9G,GAEX,OADAsL,EAAiB9M,KAAK,CAAErP,MAAO6Q,EAAKuL,WAAYvY,MAAOgN,EAAKuL,WAAYlB,SAAUrK,IAElF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKuL,WAAY/P,GAAIwE,EAAKwK,SAAUtb,IAAK8Q,EAAKwK,UACxDxK,EAAKuL,cAMlB,IAAMC,EAAkB,GAYxB,OAXIR,GAAYA,EAASzN,OAAS,GAC9ByN,EAASlE,IAAI,SAAC9G,GAEV,OADAwL,EAAgBhN,KAAK,CAAErP,MAAO6Q,EAAKyL,UAAWzY,MAAOgN,EAAKyL,UAAWpB,SAAUrK,IAE/E5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKyL,UAAWjQ,GAAIwE,EAAK0L,QAASxc,IAAK8Q,EAAK0L,SACtD1L,EAAKyL,aAOdrY,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,cAAcoN,OAAQN,GACvChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YACzD7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,kBAEJL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,gBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,kBAAkBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOK,EAAKiF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAM6D,WAClJlC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkC,aAI7E3E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,QAAQgB,UAAU,eAAeC,YAAY,cAAckB,KAAK,QAAQiS,SAAU,SAACjC,GAAD,OAAOK,EAAKiF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAM5C,MAAO4D,UAAQ,IAC3JW,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOvE,UAI7E8B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,qBAAqBkB,KAAK,UAAUiS,SAAU,SAACjC,GAAD,OAAOK,EAAKiF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAM0V,UACpJ/T,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO+T,YAI7ExW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,kBAAkBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOK,EAAKiF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAM4K,WAClJjJ,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiJ,aAI7E1L,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,kBAAkBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOK,EAAKiF,aAAatF,IAAKzV,MAAO2E,KAAKI,MAAM6K,WACnJlJ,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkJ,aAK7E3L,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,SAASgB,UAAU,eAAeC,YAAY,gBAAgBkB,KAAK,UAAUiS,SAAU,SAACjC,GAAD,OAAOK,EAAKiF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAM6V,UACjJlU,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkU,YAI7E3W,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMkW,gBAClBvD,SAAU/S,KAAKqW,cACf0B,QAAST,EACTxW,KAAK,UACLlB,YAAY,mBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOgU,YAI7EzW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMqW,cAClB1D,SAAU/S,KAAKwW,YACfuB,QAASP,EACT1W,KAAK,QACLlB,YAAY,iBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO3B,UAI7Ed,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMwW,aAClB7D,SAAU/S,KAAK2W,WACfoB,QAASL,EACT5W,KAAK,OACLlB,YAAY,gBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiU,UAKjF1W,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BAaK,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,gBAAgBiS,SAAU,SAACjC,GAAD,OAAOK,EAAKzC,eAAeoC,IAAIzV,MAAO2E,KAAKI,MAAM+M,eAC7G7N,EAAAC,EAAAC,cAAA,UAAQnE,MAAM,IAAd,sBAEK2E,KAAKI,MAAMyL,iBAAoB7L,KAAKI,MAAMyL,gBAAgBmH,IAAI,SAACC,EAAKC,GAAN,OAC3D5T,EAAAC,EAAAC,cAAA,UAAQpE,IAAK8X,EAAG7X,MAAO4X,EAAIxG,eAAgBrL,SAAU6R,EAAI7R,UAAW6R,EAAIpJ,qBAInFwH,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWlE,gBAGjF7N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,gBAAgBzF,MAAO2E,KAAKI,MAAM+M,cAAegG,UAAQ,GAC3F7T,EAAAC,EAAAC,cAAA,UAAQnE,MAAO2E,KAAKI,MAAM+M,cAAe/L,UAAU,GAAOpB,KAAKI,MAAM4M,kBAExEqE,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWlE,iBAIzF7N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAemB,KAAK,WAAWlB,YAAY,kBAAkBmT,SAAU,SAACjC,GAAD,OAAOK,EAAKzC,eAAeoC,IAAIzV,MAAO2E,KAAKI,MAAMgN,WACpJiE,GAAc7D,GAAkBlO,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiB0R,EAAWjE,YAGrF9N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAEPL,EAAAC,EAAAC,cAAA,UACAgI,QAAS,WACL2J,EAAK5D,eAET5N,UAAU,uBAJV,WAWhBK,KAAKI,MAAMuJ,iBAAiBF,OAAS,GACrCnK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAC0S,GAAA,UAAD,CAAW7W,MAAO2E,KAAKI,MAAMuJ,iBAAkBwI,WAAW,EAAMC,KAAM,GAAKC,YAAU,EAACC,YAAU,EAAEC,aAAa,iBAC3GjT,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,mBAAmBb,OAAO,mBAAmBc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACzG/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,YAAYb,OAAO,YAAYc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAC3F/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAASb,OAAO,SAASjU,KAAMqC,KAAKsO,eAAgBjJ,MAAO,CAACgC,MAAO,cAMvH/H,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAMkN,eAAgBsF,QAAS5S,KAAKqN,gBAAiBwF,QAAM,GACzEvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAEK,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAAf,uEAEAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BAAf,sDAIRL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAM0F,MAAO,CAACgC,MAAO,SAK5C/H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAM2J,EAAK1Q,oBAAoBd,UAAU,gCAA1D,wBA/qBR0B,IAAMC,eAqsBhCC,GAAkBC,YAAyB,CAC7C2W,cAAeA,GACf9C,gBAAiBA,GACjBM,aAAcA,GACdH,cAAeA,GAClB5G,kBAAmBpG,GAChByG,aAAcnG,KAalB,IAAMhF,GAAc1B,YAAQb,GAV5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EFztB7B,SAA0B/E,GAE/B,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACd6V,GAAY6B,WAAWzc,GAAMc,KAAK,SAAAd,GAChC+E,EAAS8V,GAAc7a,IACvB+E,EAAS8V,GAAc,OACpB7a,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KEosByC6T,CAAiB1c,KACtDgY,cAAe,kBAAMjT,EAASiT,OAC9BG,YAAa,SAACnY,GAAD,OAAU+E,EAASoT,GAAYnY,KAC5CsY,WAAY,SAACtY,GAAD,OAAU+E,EAASuT,GAAWtY,KAChDmL,oBAAqB,kBAAMpG,EAASoG,OAC9BM,cAAe,SAACzL,GAAD,OAAU+E,EAAS0G,GAAczL,QAKzCyH,eAAQjB,GAARiB,CAAqByT,ICvtBrByB,4HA5BgB3c,GACvB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,0BAA2BO,GAAMS,KAAK,SAAAC,GAK1D,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCdR,SAAS2e,GAAuB5c,GACrC,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAAS6c,GAAwB7c,GAGtC,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACd4X,GAAqBG,oBAAoB9c,GAAMc,KAAK,SAAAd,GAClD+E,EAAS6X,GAAuB5c,IAChC+E,EAAS6X,GAAuB,QACX,IAAjB5c,EAAKuF,SACPyB,IAAKC,KAAK,CACRC,MAAO,mCACP7F,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,OAGU,IAAjBrH,EAAKuF,SACPyB,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGRrH,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,SCzBWkU,gHA9BYC,GACnB1V,QAAQC,IAAI,OAAQyV,EAAK,IACzB,IAAMxU,EAAQtK,EAAQ,cAChB8B,EAAO,IAAIid,SACjBjd,EAAKkd,OAAO,OAAQF,EAAK,IACzB,IACI,IAAMvU,EAAqB,IAAIjI,QAAQ,CACnC2c,SAAU,sBACVzU,cAAiBF,IAOrB,OAAO3H,MAAMf,EAAW,eALb,CACPQ,OAAQ,OACRC,QAASkI,EACTpI,KAAML,IAEoCc,KAAK,SAAAC,GAK/C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cChBR,SAASmf,GAAmBpd,GACjC,MAAO,CACLqB,KAAMC,EACNtB,QAIG,SAASqd,GAAcrd,GAG5B,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACdgY,GAAiBO,gBAAgBtd,GAAMc,KAAK,SAAAd,GAC1C+E,EAASqY,GAAmBpd,IAC5B+E,EAASqY,GAAmB,OACzBpd,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KCxCW,SAAStE,GAASC,GAC/B,IAAMC,EAAS,GAaf,MAZ+B,KAA3BD,EAAOkL,kBACTjL,EAAOiL,gBAAkB,iCAEP,KAAhBlL,EAAOyS,OACTxS,EAAOwS,KAAO,kCAEe,OAA3BzS,EAAOwU,kBACTvU,EAAOuU,gBAAkB,2BAKpBvU,MCCH8Y,eAEF,SAAAA,EAAYxa,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAA6a,IACf/a,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAob,GAAA1a,KAAAH,KAAMK,KAFVya,YAAa,EACMhb,EAgEnBqW,WAAa,WACTrW,EAAKO,MAAMoK,QAAQC,KAAK,kBAjET5K,EAoEnBU,aAAe,WACXV,EAAKoD,SAAS,CACZqG,YAAY,GACX,cACH1H,GAAS/B,EAAKM,OACd,IAAM2B,EAASF,GAAS/B,EAAKM,OAC7B,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAIsR,EAAc,GADgBvP,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IAElC,QAAAiQ,EAAAC,EAAiB9L,EAAKM,MAAMkW,gBAA5BxK,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA6C,KAApCU,EAAoCP,EAAAtQ,MACzC0f,EAAYrQ,KAAKwB,EAAK7Q,QAHQ,MAAAE,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,GAKlC,IAAIkF,EAAa,CACb5D,gBAAiBlN,EAAKM,MAAM4M,gBAC5BuH,KAAMzU,EAAKM,MAAMmU,KACjByG,kBAAmBD,EAAYE,OAC/BC,aAAc,IAElBpb,EAAKO,MAAMI,iBAAiBmQ,KArFjB9Q,EAwFnBsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SA1FfyE,EA6FnBqb,iBAAmB,SAACrK,GAChBhR,EAAKoD,SAAS,CACVoX,KAAMxJ,EAAEE,OAAOoK,QAEnBtb,EAAKO,MAAMgb,YAAYvK,EAAEE,OAAOoK,QAjGjBtb,EAmGnBuW,cAAgB,SAACnK,GACbpM,EAAKoD,SAAS,CACVoT,gBAAiBpK,KArGNpM,EAwGnBwb,WAAa,SAACpP,GACVpM,EAAKoD,SAAS,CACVgY,aAAchP,KAxGlBpM,EAAKM,MAAQ,CACToC,UAAU,EACV+G,YAAY,EACZyD,gBAAiB,GACjBuH,KAAM,GACNyC,YAAa,GACb3I,UAAW,GACXiI,gBAAiB,KACjB4E,aAAc,KACdZ,KAAM,MAXKxa,mFAefE,KAAKK,MAAMiV,gBAEXtV,KAAKkD,SAAS,CACVV,UAAU,sDAGQG,GAAW,IAAAS,EAAApD,KAC9B2C,EAAU0S,iBACN1S,EAAU0S,gBAAgB/X,KAAK0Z,cAC4B,IAAvDrU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYnU,SAC1C7C,KAAKkD,SAAS,CACV8T,YAAarU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYG,gBAKrExU,EAAUkM,aACLlM,EAAUkM,YAAYvR,MAAQqF,EAAUkM,YAAYvR,KAAKwR,UACpB,IAA7CnM,EAAUkM,YAAYvR,KAAKwR,QAAQjM,SACvB7C,KAAKkD,SAAS,CACVmL,UAAW1L,EAAUkM,YAAYvR,KAAKwR,QAAQxR,OAK3DqF,EAAU+X,oBACL/X,EAAU+X,mBAAmBpd,MAAQqF,EAAU+X,mBAAmBpd,KAAKqd,gBACrB,IAA1DhY,EAAU+X,mBAAmBpd,KAAKqd,cAAc9X,SACpC7C,KAAKkD,SAAS,CACVqR,KAAM5R,EAAU+X,mBAAmBpd,KAAKqd,cAAcY,WAKnE5Y,EAAU6Y,cACN7Y,EAAU6Y,aAAale,KAAKme,qBACkC,IAA1D9Y,EAAU6Y,aAAale,KAAKme,kBAAkB5Y,SAC7C7C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMoK,QAAQC,KAAK,kBAExBzH,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,uCAmDd,IAAA0O,EAAAlR,KACCsR,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,eAEV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzCzB,EAASF,GAAS7B,KAAKI,OAJxBgR,EAK0CpR,KAAKI,MAA5CmJ,EALH6H,EAKG7H,WAAYyN,EALf5F,EAKe4F,YAAa3I,EAL5B+C,EAK4B/C,UAG3BiJ,EAAqB,GAEvBN,GAAeA,EAAYvN,OAAS,GACpCuN,EAAYhE,IAAI,SAAC9G,GAEb,OADAoL,EAAmB5M,KAAK,CAAErP,MAAO6Q,EAAKqL,aAAcrY,MAAOgN,EAAKqL,aAAchB,SAAUrK,IAExF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKqL,aAAc7P,GAAIwE,EAAKxE,GAAItM,IAAK8Q,EAAKxE,IACpDwE,EAAKqL,gBAKlB,IAAMmE,EAAkB,GAWxB,OAVIrN,GAAaA,EAAU5E,OAAS,GAChC4E,EAAU2E,IAAI,SAAC9G,GAEX,OADAwP,EAAgBhR,KAAK,CAAErP,MAAO6Q,EAAKjI,SAAU/E,MAAOgN,EAAKjI,SAAUsS,SAAUrK,IAE7E5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKjI,SAAUyD,GAAIwE,EAAKlC,QAAS5O,IAAK8Q,EAAKlC,SACrDkC,EAAKjI,YAMV3E,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,qBAAqBoN,OAAQN,GAC9ChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YACzD7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,wBAEJL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,uBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DAEXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,yBAAyBkB,KAAK,kBAAkBiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC1I/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiL,oBAI7E1N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAemB,KAAK,OAAO6a,OAAO,UAAU5I,SAAU,SAACjC,GAAD,OAAOI,EAAKiK,iBAAiBrK,MAC/G/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOwS,SAI7EjV,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMkW,gBAClBvD,SAAU/S,KAAKqW,cACf0B,QAAST,EACTxW,KAAK,oBACLlB,YAAY,mBACZgc,SAAS,IAEZ7Z,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOuU,qBAoBjFhX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAK0J,EAAK1Q,gBAAgBb,UAAU,gCAArD,wBA/MH0B,IAAMC,eAmOzCC,GAAkBC,YAAyB,CAC7Cga,aAActB,GACd7E,gBAAiBA,GACjBxG,YAAazI,GACbsU,mBAAoBA,KAWxB,IAAM5W,GAAc1B,YAAQb,GAR5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EAAS8X,GAAwB7c,KAC7DgY,cAAe,kBAAMjT,EAASiT,OAC9BjP,YAAa,kBAAMhE,EAASgE,OAC5BgV,YAAa,SAACf,GAAD,OAAUjY,EAASsY,GAAcL,QAKvCvV,eAAQjB,GAARiB,CAAqB8V,ICpOrBgB,oHA5BQve,GACf,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,MACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,oBAAqBO,GAAMS,KAAK,SAAAC,GAKpD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCdR,SAASugB,GAAexe,GAC7B,MAAO,CACLqB,KAAMC,EACNtB,QCdW,SAASuE,GAASC,GAC/B,IAAMC,EAAS,GAaf,MAZ+B,KAA3BD,EAAOkL,kBACTjL,EAAOiL,gBAAkB,iCAEP,KAAhBlL,EAAOyS,OACTxS,EAAOwS,KAAO,kCAEe,KAA3BzS,EAAOwU,kBACTvU,EAAOuU,gBAAkB,2BAEC,KAAxBxU,EAAOoZ,eACTnZ,EAAOmZ,aAAe,uBAEjBnZ,MCEHga,eACF,SAAAA,EAAY1b,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAA+b,IACfjc,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAsc,GAAA5b,KAAAH,KAAMK,KAoFV8V,WAAa,WACTrW,EAAKO,MAAMoK,QAAQC,KAAK,kBAtFT5K,EAyFnBU,aAAe,WACXV,EAAKoD,SAAS,CACZqG,YAAY,GACX,cACH1H,GAAS/B,EAAKM,OACd,IAAM2B,EAASF,GAAS/B,EAAKM,OAC7B,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAIuS,EAAc,GADgBxQ,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IAElC,QAAAiQ,EAAAC,EAAiB9L,EAAKM,MAAMkW,gBAA5BxK,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA6C,KAApCU,EAAoCP,EAAAtQ,MACzC2gB,EAAYtR,KAAKwB,EAAK7Q,QAHQ,MAAAE,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,GAKlC,IAAIkF,EAAa,CACbxM,OAAQtE,EAAKM,MAAM0T,QAAQrH,eAC3BO,gBAAiBlN,EAAKM,MAAM4M,gBAC5BuH,KAAMzU,EAAKM,MAAMmU,KACjByG,kBAAmBgB,EAAYf,OAC/BC,aAAc,IAElBpb,EAAKO,MAAMI,iBAAiBmQ,KA3GjB9Q,EA8GnBsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SAhHfyE,EAmHnBqb,iBAAmB,SAACrK,GAChBhR,EAAKoD,SAAS,CACVoX,KAAMxJ,EAAEE,OAAOoK,QAEnBtb,EAAKO,MAAMgb,YAAYvK,EAAEE,OAAOoK,QAvHjBtb,EAyHnBuW,cAAgB,SAACnK,GACbpM,EAAKoD,SAAS,CACVoT,gBAAiBpK,EACjB6J,QAAS7J,EAAK7Q,SA1HlByE,EAAKM,MAAQ,CACToC,UAAU,EACV+G,YAAY,EACZyD,gBAAiB,GACjBuH,KAAM,GACN0H,UAAW,GACXjF,YAAa,GACb3I,UAAW,GACXiI,gBAAiB,KACjBgE,KAAM,KACNxG,QAAS,MAZEhU,mFAeC,IAAAsD,EAAApD,KAEhBA,KAAKK,MAAMiV,gBACX,IAAM4G,EAAalc,KAAKK,MAAM0C,SAAS3C,MAAM0T,QAC7C9T,KAAKkD,SAAS,CACV4Q,QAASoI,GACV,WACC9Y,EAAKF,SAAS,CACV8J,gBAAiB5J,EAAKhD,MAAM0T,QAAQjK,iBACpC0K,KAAMnR,EAAKhD,MAAM0T,QAAQS,KACzB0H,UAAW7Y,EAAKhD,MAAM0T,QAAQqI,uBAGtCnc,KAAKkD,SAAS,CACVV,UAAU,sDAGQG,GAAW,IAAAuO,EAAAlR,KAC9B2C,EAAU0S,iBACN1S,EAAU0S,gBAAgB/X,KAAK0Z,cAC4B,IAAvDrU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYnU,SAC1C7C,KAAKkD,SAAS,CACV8T,YAAarU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYG,eACzD,WACC,GAA6B,KAAzBjG,EAAK9Q,MAAM6b,UAAkB,CAC7B,IAAIG,EAAa,GACbC,EAAWnL,EAAK9Q,MAAM6b,UAAUjV,MAAM,KAFbmF,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAG7B,QAAA4Q,EAAAC,EAAiB2E,EAAK9Q,MAAM4W,YAA5BlL,OAAAC,cAAAI,GAAAG,EAAAC,EAAAP,QAAAC,MAAAE,GAAA,EAAyC,KAAhCD,EAAgCI,EAAAjR,MAAAsR,GAAA,EAAAC,GAAA,EAAAC,OAAAnR,EAAA,IACrC,QAAAoR,EAAAC,EAAesP,EAAfvQ,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAAyB,CAAAG,EAAAzR,QACV6Q,EAAKqL,cACZ6E,EAAW1R,KAAK,CACZrP,MAAO6Q,EAAKqL,aACZrY,MAAOgN,EAAKqL,aACZhB,SAAUrK,KANe,MAAA3Q,GAAAqR,GAAA,EAAAC,EAAAtR,EAAA,YAAAoR,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,KAHZ,MAAAtR,GAAA6Q,GAAA,EAAAC,EAAA9Q,EAAA,YAAA4Q,GAAA,MAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,GAc7B6E,EAAKhO,SAAS,CACVoT,gBAAiB8F,OAOtCzZ,EAAU+X,oBACL/X,EAAU+X,mBAAmBpd,MAAQqF,EAAU+X,mBAAmBpd,KAAKqd,gBACrB,IAA1DhY,EAAU+X,mBAAmBpd,KAAKqd,cAAc9X,SACpC7C,KAAKkD,SAAS,CACVqR,KAAM5R,EAAU+X,mBAAmBpd,KAAKqd,cAAcY,WAKnE5Y,EAAU2Z,cACN3Z,EAAU2Z,aAAahf,KAAKif,qBACkC,IAA1D5Z,EAAU2Z,aAAahf,KAAKif,kBAAkB1Z,SAC7C7C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMoK,QAAQC,KAAK,kBAExBzH,WAAW,WAAQiO,EAAKhO,SAAS,CAC7BV,UAAU,KACP,uCA+Cd,IAAA2O,EAAAnR,KACCsR,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,sBAEV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzCzB,EAASF,GAAS7B,KAAKI,OAJxBgR,EAK+BpR,KAAKI,MAAjCmJ,EALH6H,EAKG7H,WAAYyN,EALf5F,EAKe4F,YAEdM,EAAqB,GAW3B,OAVIN,GAAeA,EAAYvN,OAAS,GACpCuN,EAAYhE,IAAI,SAAC9G,GAEb,OADAoL,EAAmB5M,KAAK,CAAErP,MAAO6Q,EAAKqL,aAAcrY,MAAOgN,EAAKqL,aAAchB,SAAUrK,IAExF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKqL,aAAc7P,GAAIwE,EAAKxE,GAAItM,IAAK8Q,EAAKxE,IACpDwE,EAAKqL,gBAMVjY,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,qBAAqBoN,OAAQN,GAC9ChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YACzD7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,wBAEJL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,uBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,yBAAyBkB,KAAK,kBAAkBiS,SAAU,SAACjC,GAAD,OAAOK,EAAKiF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAM4M,kBAChKjL,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiL,oBAI7E1N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAemB,KAAK,OAAO6a,OAAO,UAAU5I,SAAU,SAACjC,GAAD,OAAOK,EAAKgK,iBAAiBrK,MAC/G/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOwS,SAI7EjV,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAK8D,IAAKtD,KAAKI,MAAMmU,KAAMlP,MAAO,CAACgC,MAAO,GAAIC,OAAQ,IAAK9D,IAAI,QAI3ElE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMkW,gBAClBvD,SAAU/S,KAAKqW,cACf0B,QAAST,EACTxW,KAAK,oBACLlB,YAAY,mBACZgc,SAAS,IAEZ7Z,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOuU,qBAKjFhX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAK2J,EAAK3Q,gBAAgBb,UAAU,gCAArD,wBAzMH0B,IAAMC,eA6NzCC,GAAkBC,YAAyB,CAC7C8a,aAAcR,GACdzG,gBAAiBA,GACjBxG,YAAazI,GACbsU,mBAAoBA,KAWxB,IAAM5W,GAAc1B,YAAQb,GAR5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EFpO7B,SAAiC/E,GAGtC,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACdwZ,GAAqBW,YAAYlf,GAAMc,KAAK,SAAAd,GAC1C+E,EAASyZ,GAAexe,IACxB+E,EAASyZ,GAAe,QACJ,IAAjBxe,EAAKuF,SACNyB,IAAKC,KAAK,CACNC,MAAO,mCACP7F,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGVrH,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KEqMyCsW,CAAwBnf,KAC7DgY,cAAe,kBAAMjT,EAASiT,OAC9BjP,YAAa,kBAAMhE,EAASgE,OAC5BgV,YAAa,SAACf,GAAD,OAAUjY,EAASsY,GAAcL,QAKvCvV,eAAQjB,GAARiB,CAAqBgX,IC7NrBW,wHA9BYpf,GACnB,IAAI2W,EAAU,CACVlE,UAAWzS,GAETwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAKM,KAAKC,UAAU+V,IAExB,OAAO9V,MAAMf,EAAW,qBAAsBO,GAAMS,KAAK,SAAAC,GAKrD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCfR,SAASohB,GAAmBrf,GACjC,MAAO,CACLqB,KAAMC,EACNtB,YCeWsf,qHA5BiBtf,GACxB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,qBAAsBO,GAAMS,KAAK,SAAAC,GAKrD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCdR,SAASshB,GAAwBvf,GACtC,MAAO,CACLqB,KAAMC,EACNtB,QCdW,SAASuE,GAASC,GAC/B,IAAMC,EAAS,GAwBf,MAvB0B,KAAtBD,EAAOgb,aACT/a,EAAO+a,WAAa,uBAEI,SAAtBhb,EAAOgb,YACmB,OAAxBhb,EAAOoZ,eACTnZ,EAAOmZ,aAAe,uBAGL,KAAjBpZ,EAAO0C,QACTzC,EAAOyC,MAAQ,sBAEG,KAAhB1C,EAAOnE,OACToE,EAAOpE,KAAO,wBAWToE,ECVT,IAAIgb,IAAS,EACPC,eACF,SAAAA,EAAY3c,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAgd,IACfld,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAud,GAAA7c,KAAAH,KAAMK,KA4EV8V,WAAa,WACTrW,EAAKO,MAAMoK,QAAQC,KAAK,kBA9ET5K,EAiFnBU,aAAe,WACXV,EAAKoD,SAAS,CACZqG,YAAY,GACX,cACH1H,GAAS/B,EAAKM,OACd,IAAM2B,EAASF,GAAS/B,EAAKM,OAC7B,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAIC,EAAc,GAClB,GAAgC,OAA5B5J,EAAKM,MAAM8a,aAAuB,KAAA1P,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IAClC,QAAAiQ,EAAAC,EAAiB9L,EAAKM,MAAM8a,aAA5BpP,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA0C,KAAjCU,EAAiCP,EAAAtQ,MACtCqO,EAAYgB,KAAKwB,EAAKqK,SAASvM,UAFD,MAAAzO,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,IAKtC,IAAIkF,EAAa,CACbnE,eAA0C,SAA1B3M,EAAKM,MAAM0c,WAAwBhd,EAAKM,MAAM0c,WAAa,GAC3EG,cAA2C,OAA5Bnd,EAAKM,MAAM8a,aAAwBxR,EAAYuR,OAAS,GACvEzW,MAAO1E,EAAKM,MAAMoE,MAClB0Y,aAAcpd,EAAKM,MAAMzC,MAE7Bof,IAAS,EACTjd,EAAKO,MAAMI,iBAAiBmQ,KArGjB9Q,EAwGnBsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SA1GfyE,EA6GnBqd,kBAAoB,SAAC9hB,GACH,KAAVA,GACAyE,EAAKoD,SAAS,CACVka,iBAAiB,IAIzBtd,EAAKO,MAAMgd,kBAAkBhiB,IApHdyE,EAuHnBwb,WAAa,SAACpP,GACVpM,EAAKoD,SAAS,CACVgY,aAAchP,KAzHHpM,EA4HnBwd,YAAc,SAACjiB,GACXyE,EAAKoD,SAAS,CACV4Z,WAAYzhB,EAAM2V,OAAO3V,OAC1B,WAC+B,SAA1ByE,EAAKM,MAAM0c,WACXhd,EAAKoD,SAAS,CACVqa,cAAc,IAGlBzd,EAAKoD,SAAS,CACVqa,cAAc,OApI1BR,IAAS,EACTjd,EAAKM,MAAQ,CACToC,UAAU,EACV+G,YAAY,EACZ/E,MAAO,GACP7G,KAAM,GACN0Q,UAAW,GACX6M,aAAc,KACdZ,KAAM,KACN8C,iBAAiB,EACjBvR,gBAAiB,GACjBiR,WAAY,GACZS,cAAc,EACdzW,QAAS,IAfEhH,mFAoBM,OADFtE,EAAQ,cAEvBwE,KAAKkD,SAAS,CACVV,UAAU,EACVsa,WAAYthB,EAAQ,cACpBsL,QAAStL,EAAQ,kBAGrBwE,KAAKkD,SAAS,CACVV,UAAU,IAIlBxC,KAAKK,MAAMoI,wEAEW9F,GAAW,IAAAS,EAAApD,KAC7B2C,EAAUiM,mBACfjM,EAAUiM,kBAAkBtR,MAAQqF,EAAUiM,kBAAkBtR,KAAKuO,kBACT,IAA3DlJ,EAAUiM,kBAAkBtR,KAAKuO,gBAAgBhJ,SACrC7C,KAAKkD,SAAS,CACV2I,gBAAiBlJ,EAAUiM,kBAAkBtR,KAAKuO,gBAAgBvO,OAK/EqF,EAAUga,oBACLha,EAAUga,mBAAmBrf,MAAQqF,EAAUga,mBAAmBrf,KAAKkgB,aACxB,IAAvD7a,EAAUga,mBAAmBrf,KAAKkgB,WAAW3a,UACjC7C,KAAKkD,SAAS,CACVmL,UAAW1L,EAAUga,mBAAmBrf,KAAKkgB,WAAWlgB,KACxD8f,iBAAiB,IAErBna,WAAW,WAAQG,EAAKF,SAAS,CAC7Bka,iBAAiB,KACd,MAIhBza,EAAU8a,uBACN9a,EAAU8a,sBAAsBngB,KAAKogB,sBACmC,IAApE/a,EAAU8a,sBAAsBngB,KAAKogB,mBAAmB7a,SAAoBka,IAC3EA,IAAS,EACT/c,KAAKkD,SAAS,CACVV,UAAU,EACVgC,MAAO,GACP7G,KAAM,GACNud,aAAc,KACd3R,YAAY,KAGhBtG,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,uCAqEd,IAAA0O,EAAAlR,KACCsR,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,uBAEV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzCzB,EAASF,GAAS7B,KAAKI,OAJxBgR,EAK6BpR,KAAKI,MAA/BmJ,EALH6H,EAKG7H,WAAY8E,EALf+C,EAKe/C,UAGdqN,EAAkB,GACpBrN,GAAaA,EAAU5E,OAAS,GAChC4E,EAAU2E,IAAI,SAAC9G,GAEX,OADAwP,EAAgBhR,KAAK,CAAErP,MAAO6Q,EAAKjI,SAAU/E,MAAOgN,EAAKjI,SAAUsS,SAAUrK,IAE7E5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKjI,SAAUyD,GAAIwE,EAAKlC,QAAS5O,IAAK8Q,EAAKlC,SACrDkC,EAAKjI,YAKlB,IAAIkF,EAAW3N,EAAQ,cAEvB,OADAoJ,QAAQC,IAAI7E,KAAKI,MAAM0c,YAEfxd,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,sBAAsBoN,OAAQN,GAC/ChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBAKXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,wBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DAEXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QAEK,KAAZwJ,EACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,aAAaiS,SAAU,SAACjC,GAAD,OAAOI,EAAKoM,YAAYxM,IAAIzV,MAAO2E,KAAKI,MAAM0c,YACvGxd,EAAAC,EAAAC,cAAA,UAAQnE,MAAM,IAAd,gBACAiE,EAAAC,EAAAC,cAAA,UAAQnE,MAAM,QAAd,mBAEK2E,KAAKI,MAAMyL,iBAAoB7L,KAAKI,MAAMyL,gBAAgBmH,IAAI,SAAC2K,EAAI/T,GAChE,OACItK,EAAAC,EAAAC,cAAA,UAAQpE,IAAKwO,EAAGvO,MAAOsiB,EAAGlR,gBAAiBkR,EAAG9T,qBAM7D9H,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO+a,aAGrExd,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAemB,KAAK,aAAazF,MAAO2E,KAAKI,MAAM0c,WAAY3J,UAAQ,GACrF7T,EAAAC,EAAAC,cAAA,UAAQnE,MAAO2E,KAAKI,MAAM0c,WAAY1b,UAAU,GAAOpB,KAAKI,MAAM0G,UAErE/E,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO+a,eAM5E9c,KAAKI,MAAMmd,cACZje,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAM8a,aAClBnI,SAAU/S,KAAKsb,WACfvD,QAAS2D,EACT5a,KAAK,eACLlB,YAAY,eACZgc,SAAS,EACTgC,cAAe5d,KAAKmd,oBAGnBnd,KAAKI,MAAMgd,iBACZ9d,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAc2D,IAAKC,KAAWC,IAAI,KAEpDzB,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOmZ,iBAMjF5b,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,2BAA2BkB,KAAK,QAAQiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAMoE,QACxJzC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOyC,UAI7ElF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,6BAA6BkB,KAAK,OAAOiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,IAAIzV,MAAO2E,KAAKI,MAAMzC,OACzJoE,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOpE,UAKjF2B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAK0J,EAAK1Q,gBAAgBb,UAAU,gCAArD,wBA9PF0B,IAAMC,eAiR1CC,GAAkBC,YAAyB,CAC7Cic,sBAAuBZ,GACvBF,mBAAoBA,GACvB/N,kBAAmBpG,KAUpB,IAAM1E,GAAc1B,YAAQb,GAP5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EFvR7B,SAAkC/E,GAGvC,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACdua,GAAsBiB,qBAAqBvgB,GAAMc,KAAK,SAAAd,GACpD+E,EAASwa,GAAwBvf,KACZ,IAAjBA,EAAKuF,SACPyB,IAAKC,KAAK,CACRC,MAAO,iCACP7F,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,OAGU,IAAjBrH,EAAKuF,SACPyB,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGRrH,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGXtC,EAASwa,GAAwB,SAChCte,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KE+OyC2X,CAAyBxgB,KAC9D+f,kBAAmB,SAAC/f,GAAD,OAAU+E,EJtR9B,SAA2B/E,GAEhC,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACdqa,GAAeqB,gBAAgBzgB,GAAMc,KAAK,SAAAd,GACxC+E,EAASsa,GAAmBrf,IACzBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KIkQ0CkX,CAAkB/f,KAC9DmL,oBAAqB,kBAAMpG,EAASoG,UAKvB1D,eAAQjB,GAARiB,CAAqBiY,ICtQrBgB,wHAtCY1gB,GAEnB,IAAIC,EAAS,CACTyG,MAAO1G,EAAK2gB,qBACZxgB,SAAUH,EAAKI,oBAGnB,IACI,IAIIC,EAAO,CACPC,OAAQ,MACRC,QANuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,qBAKRL,KAAMM,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAW,SAAUO,GAAMS,KAAK,SAAAC,GAYzC,OAXmB,IAAhBA,EAAS6G,KACRZ,IAAKC,KAAK,CACNC,MAAO,8BACP7F,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAEXrJ,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eC3BR,SAAS2iB,GAAmBxf,GACjC,MAAO,CACLC,KAAMC,EACNF,QCPJ,IAEMK,GAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,MAAOP,EAAjBK,EAAiBL,KAAjBQ,EAAAH,EAAuBI,KAAQC,EAA/BF,EAA+BE,QAASb,EAAxCW,EAAwCX,MAAxC,OAChBc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAAC,OAAAC,OAAA,CAAOC,UAAU,gBAAmBV,EAApC,CAA2CW,YAAaV,EAAOP,KAAMA,KACpEU,GAAWb,GAASc,EAAAC,EAAAC,cAAA,YAAOhB,KA8B9B2f,eAEF,SAAAA,IAAc,IAAAre,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAme,IACVre,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA0e,GAAAhe,KAAAH,QAiBJoe,qBAAuB,WACnBte,EAAKoD,SAAS,CACVmb,gBAAiBve,EAAKM,MAAMie,kBAlBhCve,EAAKM,MAAQ,CACTie,gBAAgB,GAHVve,yFAWY6C,GACnBA,IACsF,IAAlFA,EAAUub,mBAAmBxf,KAAKiD,KAAK2c,uBAAuBC,iBAC7Dve,KAAKK,MAAMC,yCASd,IAAA8C,EAAApD,KAAAO,EAC4DP,KAAKK,MAA9DG,EADHD,EACGC,aAAcC,EADjBF,EACiBE,iBAAkBC,EADnCH,EACmCG,SAAUC,EAD7CJ,EAC6CI,WAClD,OACIrB,EAAAC,EAAAC,cAAA,QAAMoB,SAAUJ,EAAaC,IACzBnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2EAA2E0F,MAAO,CAAEyN,UAAW,GAAI0L,aAAc,KAC5Hlf,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIC,KAAK,qBACLC,UAAWhC,GACXG,MAAM,eACN8B,aAAa,MACbrC,KAAMqB,KAAKI,MAAMie,eAAiB,OAAS,aAG1Cre,KAAKI,MAAMie,gBACZ/e,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BAA2B6H,QAAS,kBAAKpE,EAAKgb,yBAAwB9e,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAGhGK,KAAKI,MAAMie,gBACb/e,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BAA2B6H,QAAS,kBAAKpE,EAAKgb,yBAAwB9e,EAAAC,EAAAC,cAAA,KAAGG,UAAU,sBAG1GL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQb,KAAK,SAASgB,UAAU,+BAA+ByB,SAAUV,GAAYC,GAArF,mBA/CYU,IAAMC,eA6DhCC,GAAkBC,YAAyB,CAC7C0c,mBAAoBA,KASxB,IAAMI,GAAyB5c,YAAU,CACrCC,KAAM,yBACNE,SAnGa,SAAAC,GACb,IAAMC,EAAS,GAsBf,OApBKD,EAAOpE,qBACRqE,EAAOrE,mBAAqB,YAmBzBqE,GA6EPH,OA7GW,CAAC,sBA8GZI,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,aAAa,GAPcT,CAQ5Byc,IAEY/b,eAAQb,GAhBvB,SAA4Bc,EAASC,GACjC,MAAO,IAeIF,CAA6Ckc,IChHtDG,eAEF,SAAAA,IAAc,IAAA3e,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAye,IACV3e,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAgf,GAAAte,KAAAH,QACKI,MAAQ,CACT/E,MAAM,GACNqjB,mBAAmB,IAJb5e,mFASV,IAAI6e,EAAY3e,KAAKK,MAAM0C,SAASgE,SAASC,MAAM,KACnDhH,KAAKkD,SAAS,CACVwb,mBAAqBC,EAAU,uDAIbhc,yCAEbrF,GACT,IAAI6F,EAAc7F,EAClB6F,EAAY8a,qBAAuBje,KAAKI,MAAMse,mBAC9C1e,KAAKK,MAAMI,iBAAiB0C,oCAGvB,IAAAC,EAAApD,KACL,OACIV,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAK8D,IAAKM,KAASJ,IAAI,OAG/BlE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kCAEXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wCAAf,kBAGAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACXL,EAAAC,EAAAC,cAACof,GAAD,CAAmBne,iBAAkB,SAACnD,GAAW8F,EAAK5C,aAAalD,kBAzC9D+D,IAAMC,eAyDrCC,GAAkBC,YAAyB,CAC7Cqd,iBAAkBX,KAStB,IAAMpa,GAAc1B,YAAQb,GAN5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EFxD7B,SAAwB/E,GAC3B,OAAO,SAAS+E,GACd2b,GAAiBc,gBAAgBxhB,GAAMc,KAAK,SAAAM,GAC1C2D,EAAS6b,GAAmBxf,IACzBA,EAAKF,OACN8F,IAAKC,KAAK,CACRC,MAAO9F,EAAKiF,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KE0C8BugB,CAAezhB,QAM7CyH,eAAQjB,GAARiB,CAAqB0Z,IChDrBO,mHA3BO1hB,GACd,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,aAAcO,GAAMS,KAAK,SAAAC,GAK7C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCdR,SAAS0jB,GAAc3hB,GAC5B,MAAO,CACLqB,KAAMC,EACNtB,YCkBW4hB,8GA5BU5hB,GACjB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,SACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,eAAgBO,GAAMS,KAAK,SAAAC,GAK/C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,cCfR,SAAS4jB,GAAiB7hB,GAC/B,MAAO,CACLqB,KAAMC,EACNtB,QCAJ,IAAI4L,IAAW,EAETkW,eAEJ,SAAAA,EAAY/e,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAof,IACjBtf,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA2f,GAAAjf,KAAAH,KAAMK,KAqER0T,UAAY,WACVjU,EAAKoD,SAAS,CACZ8Q,YAAY,IAEd9K,IAAW,EACX,IAAI+K,EAAU,CACZoL,SAAUvf,EAAKM,MAAMkf,SAEvBxf,EAAKO,MAAMkf,YAAYtL,IA9ENnU,EAiFnBqU,cAAgB,SAACtJ,GACf/K,EAAKoD,SAAS,CACZoc,QAASzU,EAAQb,QACjBoK,oBAAoB,KApFLtU,EAwFnBuU,gBAAkB,WAChBvU,EAAKoD,SAAS,CACZkR,oBAAoB,KA1FLtU,EA8FnBqW,WAAa,WACXrW,EAAKO,MAAMoK,QAAQC,KAAK,kBA/FP5K,EAkGnBiL,sBAAwB,SAACF,GACvB,OACEvL,EAAAC,EAAAC,cAAA,WACGqL,EAAQG,SADX,IACsBH,EAAQI,WAnGhC/B,IAAW,EACbpJ,EAAKM,MAAQ,CACZoC,UAAU,EACP4L,aAAc,GACdgG,oBAAoB,EACpBJ,YAAY,EACZwL,UAAW,GACXC,gBAAiB,GACjBH,QAAS,IAEXxf,EAAKwO,eAAiBxO,EAAKwO,eAAeC,KAApB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IAZLA,mFAgBjB,IAAIgU,EAAU9T,KAAKK,MAAM0C,SAAS3C,MAAMsU,gBACxC1U,KAAKkD,SAAS,CACZuc,gBAAiB3L,IAEnB,IAAI1J,EAAU,CACZqC,eAAgBqH,EAAQrH,gBAE1BzM,KAAKK,MAAMqf,gBAAgBtV,qDAGH/J,GAWxB,GAVIA,EAAMsf,aACPtf,EAAMsf,YAAYriB,MAAQ+C,EAAMsf,YAAYriB,KAAKsiB,eACF,IAA9Cvf,EAAMsf,YAAYriB,KAAKsiB,aAAa/c,SAClC7C,KAAKkD,SAAS,CACZsc,UAAWnf,EAAMsf,YAAYriB,KAAKsiB,aAAatiB,KAC/CkF,UAAU,IAKdnC,EAAM8e,kBACP9e,EAAM8e,iBAAiB7hB,MAAQ+C,EAAM8e,iBAAiB7hB,KAAKiiB,cACR,IAAlDlf,EAAM8e,iBAAiB7hB,KAAKiiB,YAAY1c,SAAkBqG,GAAU,CAClEA,IAAW,EACXlJ,KAAKkD,SAAS,CACZkR,oBAAoB,EACpBJ,YAAY,IAEd,IAAI6L,EAAc,CAChBpT,eAAgBzM,KAAKI,MAAMqf,gBAAgBhT,gBAE7CzM,KAAKK,MAAMqf,gBAAgBG,2CAMpBhV,EAASoG,GAAQ,IAAA7N,EAAApD,KAC9B,OACEV,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACtBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,0BAA0B6H,QAAS,kBAAKpE,EAAK+Q,cAActJ,KAC3EvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAciI,cAAY,iDAO7C5H,KAAKK,MAAMoK,QAAQC,KAAK,gBAAgB,CACtCgK,gBAAiB1U,KAAKI,MAAMqf,mDAwCvB,IAAAvO,EAAAlR,KACCyf,EAAoBzf,KAAKI,MAAzBqf,gBACAD,EAAcxf,KAAKI,MAAnBof,UACFlO,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,gBACV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MAC3C+N,EAAcjS,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAY,SACvBhG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAe0F,MAAO,CAACmM,OAAO,iBAC3ClS,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAO8S,QAAS,SAACX,GAAD,OAAOI,EAAKhO,SAAS,CAACkL,aAAc0C,EAAEE,OAAO3V,SAASuE,YAAY,SAAS8R,KAAK,QAEhI,OACEpS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GAC1C/D,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,eAAeoN,OAAQN,GAC1ChS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BACbL,EAAAC,EAAAC,cAAA,OAAMG,UAAU,+BACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YAC3D7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,oBAINL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoB8f,EAAgB5V,iBAAnD,iBAEFvK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAAEC,UAAW,UACvBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,uBAAuB6H,QAAS,kBAAM0J,EAAK4O,gBAA7D,mBAINxgB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6CAA6C0F,MAAO,CAAEyM,YAAa,GAAIC,aAAc,GAAIC,WAAY,GAAIC,cAAe,KACrI3S,EAAAC,EAAAC,cAAC0S,GAAA,UAAD,CAAW7W,MAAOmkB,EAAW5N,OAAQL,EAAanD,aAAcpO,KAAKI,MAAMgO,aAAc+D,WAAW,EAAMC,KAAM,GAAKC,YAAU,EAACC,YAAU,EAAEC,aAAa,iBACvJjT,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,QAAQb,OAAO,QAAQc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACnF/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,WAAWb,OAAO,YAAYc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAC1F/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,UAAUb,OAAO,UAAUjU,KAAMqC,KAAK+K,sBAAuB2H,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACzH/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,UAAUb,OAAO,UAAUc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACvF/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,QAAQb,OAAO,QAAQc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACnF/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,OAAOb,OAAO,OAAOc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WACjF/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAASb,OAAO,SAASjU,KAAMqC,KAAKsO,eAAgBjJ,MAAO,CAACgC,MAAO,aAG3G/H,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAMgU,mBAAoBxB,QAAS5S,KAAKqU,gBAAiBxB,QAAM,GAC/EvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAf,sCAEFL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAM0F,MAAO,CAACgC,MAAO,OAEpC/H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAkB0F,MAAO,CAACyN,UAAW,KAClDxT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BAA0B0F,MAAO,CAACC,UAAW,UAC1DhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,0BAA0B6H,QAAS,kBAAM0J,EAAK6C,aAAa3S,SAAUpB,KAAKI,MAAM4T,YAAlG,QAIF1U,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,yBAAyB6H,QAAS,kBAAM0J,EAAKmD,oBAA/D,yBAzKMhT,IAAMC,eAiMpCC,GAAkBC,YAAyB,CAC/Cme,YAAaV,GACdE,iBAAkBA,KAUnB,IAAMrb,GAAc1B,YAAQb,GAP5B,SAA4Bc,GAC1B,MAAO,CACLqd,gBAAiB,SAACpiB,GAAD,OAAU+E,EHtMxB,SAAuB/E,GAE5B,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACd2c,GAASe,WAAWziB,GAAMc,KAAK,SAAAd,GAC7B+E,EAAS4c,GAAc3hB,IACpBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KGkLoC6Z,CAAc1iB,KACpDiiB,YAAa,SAACjiB,GAAD,OAAU+E,EDvMlB,SAAsB/E,GAG3B,GADc9B,EAAQ,cAEpB,OAAO,SAAS6G,GACd6c,GAAee,cAAc3iB,GAAMc,KAAK,SAAAd,GACtC+E,EAAS8c,GAAiB7hB,IAC1B+E,EAAS8c,GAAiB,OACvB7hB,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KCiL8B+Z,CAAa5iB,QAMhCyH,eAAQjB,GAARiB,CAAqBqa,ICtLrBe,sHApCU7iB,GACjB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,eAAgBO,GAAMS,KAAK,SAAAC,GAc/C,OAbmB,IAAhBA,EAAS6G,IACRZ,IAAKC,KAAK,CACNC,MAAO,6BACP7F,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGS,MAApBtG,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCzBR,SAAS6kB,GAAiB9iB,GAC/B,MAAO,CACLqB,KAAMC,EACNtB,QCfW,SAASuE,GAASC,GAC/B,IAAMC,EAAS,GA+Bf,MA9BqB,KAAjBD,EAAOtE,QACTuE,EAAOvE,MAAQ,sBAEO,KAApBsE,EAAOrE,WACTsE,EAAOtE,SAAW,yBAEI,KAApBqE,EAAOmC,WACTlC,EAAOkC,SAAW,yBAEG,KAAnBnC,EAAOgU,UACT/T,EAAO+T,QAAU,wBAEK,KAApBhU,EAAOkJ,WACTjJ,EAAOiJ,SAAW,0BAEI,KAApBlJ,EAAOmJ,WACTlJ,EAAOkJ,SAAW,0BAEG,KAAnBnJ,EAAOiU,UACThU,EAAOgU,QAAU,yBAEE,KAAjBjU,EAAO1B,QACT2B,EAAO3B,MAAQ,uBAEG,KAAhB0B,EAAOkU,OACTjU,EAAOiU,KAAO,sBAEO,KAAnBlU,EAAOmU,UACTlU,EAAOkU,QAAU,yBAEZlU,MClBHse,eAEF,SAAAA,EAAYhgB,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAqgB,IACfvgB,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA4gB,GAAAlgB,KAAAH,KAAMK,KAkFV8V,WAAa,WACTrW,EAAKO,MAAMoK,QAAQgO,UApFJ3Y,EAmHnBsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SArHfyE,EAyHnBuW,cAAgB,SAACnK,GACbpM,EAAKoD,SAAS,CACVoT,gBAAiBpK,EACjB6J,QAAS7J,EAAK7Q,QAElByE,EAAKO,MAAMoV,YAAYvJ,EAAKqK,SAAS7O,KA9HtB5H,EAiInB0W,YAAc,SAACtK,GACXpM,EAAKoD,SAAS,CACVuT,cAAevK,EACf9L,MAAO8L,EAAK7Q,QAEhByE,EAAKO,MAAMuV,WAAW1J,EAAKqK,SAASG,WAtIrB5W,EAyInB6W,WAAa,SAACzK,GACVpM,EAAKoD,SAAS,CACV0T,aAAc1K,EACd8J,KAAM9J,EAAK7Q,SA5IAyE,EAsJnBgX,aAAe,WACXhX,EAAKoD,SAAS,CACV6T,eAAgBjX,EAAKM,MAAM2W,eAC7B,eAvJFjX,EAAKM,MAAQ,CACToC,UAAU,EACV+G,YAAY,EACZtF,SAAU,GACVzG,MAAO,GACPC,SAAU,GACVqY,QAAS,GACT9K,SAAU,GACVC,SAAU,GACV8K,QAAS,GACT3V,MAAO,GACP4V,KAAM,GACNC,QAAS,GACTe,YAAa,GACbC,UAAW,GACXC,SAAU,GACVZ,gBAAiB,KACjBG,cAAe,KACfG,aAAc,KACdG,eAAe,EACfrC,gBAAiB,IAtBN5U,mFA2Bf,IAAIgU,EAAU9T,KAAKK,MAAM0C,SAAS3C,MAAMsU,gBACxC1U,KAAKkD,SAAS,CACVwR,gBAAiBZ,IAErB9T,KAAKK,MAAMiV,gBACXtV,KAAKkD,SAAS,CACVV,UAAU,sDAIQG,GAAW,IAAAS,EAAApD,KAC9B2C,EAAU0S,iBACN1S,EAAU0S,gBAAgB/X,KAAK0Z,cAC4B,IAAvDrU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYnU,SAC1C7C,KAAKkD,SAAS,CACV8T,YAAarU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYG,gBAKrExU,EAAU6S,eACN7S,EAAU6S,cAAclY,KAAK2Z,YAC0B,IAAnDtU,EAAU6S,cAAclY,KAAK2Z,UAAUpU,SACtC7C,KAAKkD,SAAS,CACV+T,UAAWtU,EAAU6S,cAAclY,KAAK2Z,UAAUA,YAK/DtU,EAAUgT,cACNhT,EAAUgT,aAAarY,KAAK4Z,WACyB,IAAjDvU,EAAUgT,aAAarY,KAAK4Z,SAASrU,SACpC7C,KAAKkD,SAAS,CACVgU,SAAUvU,EAAUgT,aAAarY,KAAK4Z,SAASE,WAK5DzU,EAAU2d,gBACN3d,EAAU2d,eAAehjB,KAAKwiB,eAC4B,IAAtDnd,EAAU2d,eAAehjB,KAAKwiB,YAAYjd,SACzC7C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMoK,QAAQC,KAAK,gBAAgB,CACpCgK,gBAAiB1U,KAAKI,MAAMsU,mBAGhCzR,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,6CAWnBxC,KAAKkD,SAAS,CACZqG,YAAY,GACX,cACH1H,GAAS7B,KAAKI,OACd,IAAM2B,EAASF,GAAS7B,KAAKI,OAE7B,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAImH,EAAa,CACb3M,SAAUjE,KAAKI,MAAM6D,SACrBzG,MAAOwC,KAAKI,MAAM5C,MAClBC,SAAUuC,KAAKI,MAAM3C,SACrBqY,QAAS9V,KAAKI,MAAM0V,QACpB9K,SAAUhL,KAAKI,MAAM4K,SACrBC,SAAUjL,KAAKI,MAAM6K,SACrB8K,QAAS/V,KAAKI,MAAM2V,QACpB3V,MAAOJ,KAAKI,MAAMA,MAClB4V,KAAMhW,KAAKI,MAAM4V,KACjBC,QAASjW,KAAKI,MAAM6V,QACpBsK,sBAAuBvgB,KAAKI,MAAMsU,gBAAgBjI,gBAEtDzM,KAAKK,MAAMI,iBAAiBmQ,GAC5B5Q,KAAKkD,SAAS,CACVV,UAAU,4CAkCPsO,GACX9Q,KAAKkD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,yCAUzB,IAAA6V,EAAAlR,KACCsR,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,gBACV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzCzB,EAASF,GAAS7B,KAAKI,OAHxBgR,EAIoDpR,KAAKI,MAAtDmJ,EAJH6H,EAIG7H,WAAYyN,EAJf5F,EAIe4F,YAAaC,EAJ5B7F,EAI4B6F,UAAWC,EAJvC9F,EAIuC8F,SAEtCI,EAAqB,GACvBN,GAAeA,EAAYvN,OAAS,GACpCuN,EAAYhE,IAAI,SAAC9G,GAEb,OADAoL,EAAmB5M,KAAK,CAAErP,MAAO6Q,EAAKqL,aAAcrY,MAAOgN,EAAKqL,aAAchB,SAAUrK,IAExF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKqL,aAAc7P,GAAIwE,EAAKxE,GAAItM,IAAK8Q,EAAKxE,IACpDwE,EAAKqL,gBAMlB,IAAMC,EAAmB,GACrBP,GAAaA,EAAUxN,OAAS,GAChCwN,EAAUjE,IAAI,SAAC9G,GAEX,OADAsL,EAAiB9M,KAAK,CAAErP,MAAO6Q,EAAKuL,WAAYvY,MAAOgN,EAAKuL,WAAYlB,SAAUrK,IAElF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKuL,WAAY/P,GAAIwE,EAAKwK,SAAUtb,IAAK8Q,EAAKwK,UACxDxK,EAAKuL,cAMlB,IAAMC,EAAkB,GAYxB,OAXIR,GAAYA,EAASzN,OAAS,GAC9ByN,EAASlE,IAAI,SAAC9G,GAEV,OADAwL,EAAgBhN,KAAK,CAAErP,MAAO6Q,EAAKyL,UAAWzY,MAAOgN,EAAKyL,UAAWpB,SAAUrK,IAE/E5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKyL,UAAWjQ,GAAIwE,EAAK0L,QAASxc,IAAK8Q,EAAK0L,SACtD1L,EAAKyL,aAOdrY,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,cAAcoN,OAAQN,GACvChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YACzD7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,kBAEJL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,iBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,kBAAkBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC5H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkC,aAI7E3E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,QAAQgB,UAAU,eAAeC,YAAY,cAAckB,KAAK,QAAQiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MACtH/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOvE,WAKjF8B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAMqB,KAAKI,MAAM2W,cAAgB,OAAS,WAAYpX,UAAU,eAAeC,YAAY,iBAAiBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAElK9Q,KAAKI,MAAM2W,eACXzX,EAAAC,EAAAC,cAAA,KAAGgI,QAASxH,KAAK8W,cACbxX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAAqBiI,cAAY,WAIjD5H,KAAKI,MAAM2W,eACZzX,EAAAC,EAAAC,cAAA,QAAMgI,QAASxH,KAAK8W,cAChBxX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,2BAA2BiI,cAAY,UAG3D7F,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOtE,aAI7E6B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,qBAAqBkB,KAAK,UAAUiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC9H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO+T,aAKjFxW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,kBAAkBkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC5H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiJ,aAI7E1L,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,6BAA6BkB,KAAK,WAAWiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MACvI/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkJ,cAMjF3L,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,SAASgB,UAAU,eAAeC,YAAY,gBAAgBkB,KAAK,UAAUiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC3H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOkU,YAI7E3W,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMkW,gBAClBvD,SAAU/S,KAAKqW,cACf0B,QAAST,EACTxW,KAAK,UACLlB,YAAY,mBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOgU,aAKjFzW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMqW,cAClB1D,SAAU/S,KAAKwW,YACfuB,QAASP,EACT1W,KAAK,QACLlB,YAAY,iBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAO3B,UAI7Ed,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CACIzc,MAAO2E,KAAKI,MAAMwW,aAClB7D,SAAU/S,KAAK2W,WACfoB,QAASL,EACT5W,KAAK,OACLlB,YAAY,gBAEfmC,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiU,UAKjF1W,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAK0J,EAAK1Q,gBAAgBb,UAAU,gCAArD,wBAhVL0B,IAAMC,eAoWnCC,GAAkBC,YAAyB,CAC7C8e,eAAgBF,GAChB/K,gBAAiBA,GACjBM,aAAcA,GACdH,cAAeA,KAWnB,IAAM1R,GAAc1B,YAAQb,GAR5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EFxW7B,SAAsB/E,GAG3B,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACd8d,GAAeK,cAAcljB,GAAMc,KAAK,SAAAd,GACtC+E,EAAS+d,GAAiB9iB,IAC1B+E,EAAS+d,GAAiB,OACvB9iB,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KEkVyCsa,CAAanjB,KAClDgY,cAAe,kBAAMjT,EAASiT,OAC9BG,YAAa,SAACnY,GAAD,OAAU+E,EAASoT,GAAYnY,KAC5CsY,WAAY,SAACtY,GAAD,OAAU+E,EAASuT,GAAWtY,QAKnCyH,eAAQjB,GAARiB,CAAqBsb,ICtWrBK,qHAzBP,IAAM5a,EAAQtK,EAAQ,cACtB,IACI,IAAMuK,EAAqB,IAAIjI,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAMrB,OAAO3H,MAAMf,EAAW,oBAJb,CACPQ,OAAQ,MACRC,QAASkI,IAEsC3H,KAAK,SAAAC,GAKpD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCZR,SAASolB,GAAcrjB,GAC5B,MAAO,CACLqB,KAAMC,EACNtB,sBCKA4L,IAAW,EAET0X,eAMJ,SAAAA,IAAc,IAAA9gB,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAA4gB,IACZ9gB,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAmhB,GAAAzgB,KAAAH,QANF6gB,kBAAoB,SAAC/P,GACnBhR,EAAKoD,SAAS,CACZ4d,QAAShQ,EAAEzV,SAGDyE,EA6Ed+T,oBAAsB,SAAChJ,KA7ET/K,EA2FdiU,UAAY,WACVjU,EAAKoD,SAAS,CACZ8Q,YAAY,IAEd9K,IAAW,EACX,IAAI+K,EAAU,CACZ7P,OAAQtE,EAAKM,MAAM8T,OAErBpU,EAAKO,MAAMqT,wBAAwBO,IAnGvBnU,EAsGdqU,cAAgB,SAACtJ,GACf/K,EAAKoD,SAAS,CACZgR,MAAOrJ,EAAQ4B,eACf2H,oBAAoB,KAzGVtU,EA6GduU,gBAAkB,WAChBvU,EAAKoD,SAAS,CACZkR,oBAAoB,KA/GVtU,EAmHdwU,mBAAqB,SAAChX,GACpB,OACEgC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAK8D,IAAI,gEAAgEE,IAAI,OAAO7D,UAAU,kBAvHtFG,EAgJdihB,qBAAuB,SAACzjB,GAAS,IAAA0jB,EAAAC,EACvBC,EAAWphB,EAAKM,MAAhB8gB,OACR,OACE5hB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,qBAAqB6H,QAAS1H,EAAKqhB,WAArD,SAGED,GACA5hB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACfL,EAAAC,EAAAC,cAAC4hB,GAAA,OAAD,CAAQliB,MAAM,QAAQqV,KAAK,eAAe5U,UAAU,qBAAqB0hB,QAAQ,OAAO7Z,QAAS1H,EAAKwhB,aACtGhiB,EAAAC,EAAAC,cAAC4hB,GAAA,QAADJ,EAAA,CAAQ9hB,MAAM,gBAAgBS,UAAU,0BAA0B4U,KAAK,eAAvE9U,OAAAsR,GAAA,EAAAtR,CAAAuhB,EAAA,YAA+F,sBAA/FvhB,OAAAsR,GAAA,EAAAtR,CAAAuhB,EAAA,UAA4H,QAA5HvhB,OAAAsR,GAAA,EAAAtR,CAAAuhB,EAAA,UAA4IlhB,EAAKyhB,YAAjJP,IACA1hB,EAAAC,EAAAC,cAAC4hB,GAAA,QAADH,EAAA,CAAQ/hB,MAAM,YAAYS,UAAU,qBAAqB4U,KAAK,eAA9D9U,OAAAsR,GAAA,EAAAtR,CAAAwhB,EAAA,YAAsF,sBAAtFxhB,OAAAsR,GAAA,EAAAtR,CAAAwhB,EAAA,UAAmH,QAAnHxhB,OAAAsR,GAAA,EAAAtR,CAAAwhB,EAAA,UAAmInhB,EAAK0hB,YAAxIP,OA3JMnhB,EAmKd0U,oBAAsB,SAAC3J,GACrB,OACEvL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAAa0F,MAAO,CAACC,UAAW,WAC7ChG,EAAAC,EAAAC,cAAA,KAAGgI,QAAS,kBAAK1H,EAAK2U,UAAU5J,KAAhC,sBAtKQ/K,EA6Kd2U,UAAY,SAACnX,KA3KX4L,IAAW,EACbpJ,EAAKM,MAAQ,CACZoC,UAAU,EACP4L,aAAc,GACdqT,YAAa,GACb9M,UAAU,EACVP,oBAAoB,EACpBJ,YAAY,EACZkN,QAAQ,GAEVphB,EAAKwO,eAAiBxO,EAAKwO,eAAeC,KAApB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACtBA,EAAKqhB,UAAYrhB,EAAKqhB,UAAU5S,KAAf9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACjBA,EAAKwhB,WAAaxhB,EAAKwhB,WAAW/S,KAAhB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IAClBA,EAAKyhB,WAAazhB,EAAKyhB,WAAWhT,KAAhB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IAClBA,EAAK0hB,WAAa1hB,EAAK0hB,WAAWjT,KAAhB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IAhBNA,mFAoBZ,IAAIgU,EAAU7V,KAAK2W,MAAMpZ,EAAQ,iBACjC,GAAe,OAAZsY,EAAkB,CACnBA,EAAQrH,eAAiBqH,EAAQ1P,OACjC0P,EAAQjK,iBAAmBiK,EAAQzP,SACnCyP,EAAQS,KAAOT,EAAQe,gBAChBf,EAAQ1P,cACR0P,EAAQzP,gBACRyP,EAAQe,SACf,IAAIC,EAAU,GACdA,EAAQpK,KAAKoJ,GACb9T,KAAKkD,SAAS,CACZue,YAAa3M,SAGf9U,KAAKK,MAAMqhB,iEAIWrhB,GACxBuE,QAAQC,IAAI,cAAexE,GACvBA,EAAMshB,YACPthB,EAAMshB,WAAWrkB,MAAQ+C,EAAMshB,WAAWrkB,KAAKskB,UACN,IAAxCvhB,EAAMshB,WAAWrkB,KAAKskB,QAAQ/e,SAC5B7C,KAAKkD,SAAS,CACZue,YAAaphB,EAAMshB,WAAWrkB,KAAKskB,QAAQtkB,KAC3CkF,UAAU,IAKdnC,EAAMoT,gBACPpT,EAAMoT,eAAenW,MAAQ+C,EAAMoT,eAAenW,KAAKyX,oBACA,IAAtD1U,EAAMoT,eAAenW,KAAKyX,kBAAkBlS,SAAkBqG,KAC5DA,IAAW,EACXlJ,KAAKkD,SAAS,CACZkR,oBAAoB,EACpBJ,YAAY,IAEdhU,KAAKK,MAAMoI,8DAMJoC,EAASoG,GAAQ,IAAA7N,EAAApD,KAC9B,OACEV,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAW,WACtBhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB6H,QAAS,kBAAKpE,EAAKyQ,oBAAoBhJ,KAC/EvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeiI,cAAY,UAE1CtI,EAAAC,EAAAC,cAAA,UAAQG,UAAU,0BAA0B6H,QAAS,kBAAKpE,EAAK+Q,cAActJ,KAC3EvL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAciI,cAAY,+CAe7C5H,KAAKK,MAAMoK,QAAQC,KAAK,wDAuC1B1K,KAAKkD,SAAS,CACVge,QAAQ,yCAIZlhB,KAAKkD,SAAS,CACVge,QAAQ,yCAIZlhB,KAAKkD,SAAS,CACVge,QAAQ,yCAIZlhB,KAAKkD,SAAS,CACVge,QAAQ,qCAsCH,IAAAhQ,EAAAlR,KACCyhB,EAAgBzhB,KAAKI,MAArBqhB,YACR7c,QAAQC,IAAI4c,GACZ,IAAItY,EAAW3N,EAAQ,cACjB8V,EAAUhS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,gBACV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MAC3C+N,EAAcjS,EAAAC,EAAAC,cAAA,OAAK6F,MAAO,CAACC,UAAY,SACvBhG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAe0F,MAAO,CAACmM,OAAO,iBAC3ClS,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAO8S,QAAS,SAACX,GAAD,OAAOI,EAAKhO,SAAS,CAACkL,aAAc0C,EAAEE,OAAO3V,SAASuE,YAAY,SAAS8R,KAAK,QAEhI,OACEpS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GAC1C/D,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,eAAeoN,OAAQN,GAC1ChS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BACbL,EAAAC,EAAAC,cAAA,OAAMG,UAAU,+BACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,OAAMG,UAAU,+BACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAf,SAGY,KAAZwJ,GACA7J,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAqB0F,MAAO,CAAEC,UAAW,UACtDhG,EAAAC,EAAAC,cAAA,UAAQG,UAAU,qBAAqB6H,QAAS,kBAAM0J,EAAK8D,cAA3D,iBAIN1V,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6CAA6C0F,MAAO,CAAEyM,YAAa,GAAIC,aAAc,GAAIC,WAAY,GAAIC,cAAe,KACrI3S,EAAAC,EAAAC,cAAC0S,GAAA,UAAD,CAAW7W,MAAOomB,EAAa7P,OAAQL,EAAanD,aAAcpO,KAAKI,MAAMgO,aAAc+D,WAAW,EAAMC,KAAM,GAAKC,YAAU,EAACC,YAAU,EAAEC,aAAa,gBAAgBsP,SAAS,WAAWC,UAAU,EAAOC,UAAW/hB,KAAKI,MAAM0gB,QAASD,kBAAmB7gB,KAAK6gB,kBAAmBlhB,UAAU,mBACpSL,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQwP,cAAc,WAAW3c,MAAO,CAACgC,MAAM,SAC7C/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,OAAOb,OAAO,GAAGjU,KAAMqC,KAAKsU,mBAAqBjP,MAAO,CAACgC,MAAO,WACpG/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,mBAAmBb,OAAO,QAAQc,UAAQ,EAACrN,MAAO,CAACgC,MAAO,WAEhF,KAAZ8B,GACA7J,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,QAAQb,OAAO,OAAOjU,KAAMqC,KAAKwU,oBAAqBnP,MAAO,CAACgC,MAAO,WAE3G/H,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,GAAGb,OAAO,SAASvM,MAAO,CAACgC,MAAO,SAAU1J,KAAMqC,KAAK+gB,uBAE7E,KAAZ5X,GACA7J,EAAAC,EAAAC,cAACgT,GAAA,OAAD,CAAQ7S,UAAU,YAAY8S,MAAM,SAASb,OAAO,kBAAkBjU,KAAMqC,KAAKsO,eAAgBjJ,MAAO,CAACgC,MAAO,aAItH/H,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAOvL,KAAMpH,KAAKI,MAAMgU,mBAAoBxB,QAAS5S,KAAKqU,gBAAiBxB,QAAM,GAC/EvT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAf,sCAEFL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAM0F,MAAO,CAACgC,MAAO,OAEpC/H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAkB0F,MAAO,CAACyN,UAAW,KAClDxT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BAA0B0F,MAAO,CAACC,UAAW,UAC1DhG,EAAAC,EAAAC,cAAA,UACEG,UAAU,0BACV6H,QAAS,kBAAM0J,EAAK6C,aACpB3S,SAAUpB,KAAKI,MAAM4T,YAHvB,QAQF1U,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACbL,EAAAC,EAAAC,cAAA,UACEG,UAAU,yBACV6H,QAAS,kBAAM0J,EAAKmD,oBAFtB,yBAzPChT,IAAMC,eAoR/BC,GAAkBC,YAAyB,CAC/CmgB,WAAYhB,GACblN,eAAgBA,KAUjB,IAAM3P,GAAc1B,YAAQb,GAP5B,SAA4Bc,GAC1B,MAAO,CACPqf,aAAc,kBAAMrf,ED9Rf,WAEL,GADc7G,EAAQ,cAEpB,OAAO,SAAS6G,GACd4f,GAAWC,aAAa9jB,KAAK,SAAAd,GAC3B+E,EAASse,GAAcrjB,IACpBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KC0Q2Bub,KAC7BhO,wBAAyB,SAACpW,GAAD,OAAU+E,EAASqR,GAAwBpW,QAMvDyH,eAAQjB,GAARiB,CAAqB6b,WCxTrB,SAAS/e,GAASC,GAC/B,IAAMC,EAAS,GAaf,MAZ+B,KAA3BD,EAAOkL,kBACTjL,EAAOiL,gBAAkB,iCAEP,KAAhBlL,EAAOyS,OACTxS,EAAOwS,KAAO,kCAEe,OAA3BzS,EAAOwU,kBACTvU,EAAOuU,gBAAkB,2BAKpBvU,MCEHogB,eAEF,SAAAA,EAAY9hB,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAmiB,IACfriB,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA0iB,GAAAhiB,KAAAH,KAAMK,KAFVya,YAAa,EACMhb,EAgEnBqW,WAAa,WACTrW,EAAKO,MAAMoK,QAAQC,KAAK,cAjET5K,EAoEnBU,aAAe,WACXV,EAAKoD,SAAS,CACZqG,YAAY,GACX,cACH1H,GAAS/B,EAAKM,OACd,IAAM2B,EAASF,GAAS/B,EAAKM,OAC7B,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAIsR,EAAc,GADgBvP,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IAElC,QAAAiQ,EAAAC,EAAiB9L,EAAKM,MAAMkW,gBAA5BxK,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA6C,KAApCU,EAAoCP,EAAAtQ,MACzC0f,EAAYrQ,KAAKwB,EAAK7Q,QAHQ,MAAAE,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,GAKlC,IAAIkF,EAAa,CACb5D,gBAAiBlN,EAAKM,MAAM4M,gBAC5BuH,KAAMzU,EAAKM,MAAMmU,KACjByG,kBAAmBD,EAAYE,OAC/BC,aAAc,IAElBpb,EAAKO,MAAMI,iBAAiBmQ,KArFjB9Q,EAwFnBsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SA1FfyE,EA6FnBqb,iBAAmB,SAACrK,GAChBhR,EAAKoD,SAAS,CACVoX,KAAMxJ,EAAEE,OAAOoK,QAEnBtb,EAAKO,MAAMgb,YAAYvK,EAAEE,OAAOoK,QAjGjBtb,EAmGnBuW,cAAgB,SAACnK,GACbpM,EAAKoD,SAAS,CACVoT,gBAAiBpK,KArGNpM,EAwGnBwb,WAAa,SAACpP,GACVpM,EAAKoD,SAAS,CACVgY,aAAchP,KAxGlBpM,EAAKM,MAAQ,CACToC,UAAU,EACV+G,YAAY,EACZyD,gBAAiB,GACjBuH,KAAM,GACNyC,YAAa,GACb3I,UAAW,GACXiI,gBAAiB,KACjB4E,aAAc,KACdZ,KAAM,MAXKxa,mFAefE,KAAKK,MAAMiV,gBAEXtV,KAAKkD,SAAS,CACVV,UAAU,sDAGQG,GAAW,IAAAS,EAAApD,KAC9B2C,EAAU0S,iBACN1S,EAAU0S,gBAAgB/X,KAAK0Z,cAC4B,IAAvDrU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYnU,SAC1C7C,KAAKkD,SAAS,CACV8T,YAAarU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYG,gBAKrExU,EAAUkM,aACLlM,EAAUkM,YAAYvR,MAAQqF,EAAUkM,YAAYvR,KAAKwR,UACpB,IAA7CnM,EAAUkM,YAAYvR,KAAKwR,QAAQjM,SACvB7C,KAAKkD,SAAS,CACVmL,UAAW1L,EAAUkM,YAAYvR,KAAKwR,QAAQxR,OAK3DqF,EAAU+X,oBACL/X,EAAU+X,mBAAmBpd,MAAQqF,EAAU+X,mBAAmBpd,KAAKqd,gBACrB,IAA1DhY,EAAU+X,mBAAmBpd,KAAKqd,cAAc9X,SACpC7C,KAAKkD,SAAS,CACVqR,KAAM5R,EAAU+X,mBAAmBpd,KAAKqd,cAAcY,WAKnE5Y,EAAU6Y,cACN7Y,EAAU6Y,aAAale,KAAKme,qBACkC,IAA1D9Y,EAAU6Y,aAAale,KAAKme,kBAAkB5Y,SAC7C7C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMoK,QAAQC,KAAK,kBAExBzH,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,6CAoDnB,OACIlD,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cACZL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,UAAUyiB,aAAW,SACvC9iB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,YAAYyiB,aAAW,WACzC9iB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAeyiB,aAAW,gDAI/C,IAAAlR,EAAAlR,KAGCsR,GAFStR,KAAKqiB,eAEJ/iB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,gBAEV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MACzCzB,EAASF,GAAS7B,KAAKI,OANxBgR,EAO0CpR,KAAKI,MAA5CmJ,EAPH6H,EAOG7H,WAAYyN,EAPf5F,EAOe4F,YAAa3I,EAP5B+C,EAO4B/C,UAG3BiJ,EAAqB,GAEvBN,GAAeA,EAAYvN,OAAS,GACpCuN,EAAYhE,IAAI,SAAC9G,GAEb,OADAoL,EAAmB5M,KAAK,CAAErP,MAAO6Q,EAAKqL,aAAcrY,MAAOgN,EAAKqL,aAAchB,SAAUrK,IAExF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKqL,aAAc7P,GAAIwE,EAAKxE,GAAItM,IAAK8Q,EAAKxE,IACpDwE,EAAKqL,gBAKlB,IAAMmE,EAAkB,GAWxB,OAVIrN,GAAaA,EAAU5E,OAAS,GAChC4E,EAAU2E,IAAI,SAAC9G,GAEX,OADAwP,EAAgBhR,KAAK,CAAErP,MAAO6Q,EAAKjI,SAAU/E,MAAOgN,EAAKjI,SAAUsS,SAAUrK,IAE7E5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKjI,SAAUyD,GAAIwE,EAAKlC,QAAS5O,IAAK8Q,EAAKlC,SACrDkC,EAAKjI,YAMV3E,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,qBAAqBoN,OAAQN,GAC9ChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YACzD7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,qBAEJL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,oBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DAEXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAeC,YAAY,cAAckB,KAAK,kBAAkBiS,SAAU,SAACjC,GAAD,OAAOI,EAAKkF,aAAatF,MAC/H/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOiL,oBAI7E1N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,SAAOb,KAAK,OAAOgB,UAAU,eAAemB,KAAK,OAAO6a,OAAO,UAAU5I,SAAU,SAACjC,GAAD,OAAOI,EAAKiK,iBAAiBrK,MAC/G/O,GAAUwH,GAAcjK,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBoC,EAAOwS,UAmCjFjV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAK0J,EAAK1Q,gBAAgBb,UAAU,gCAArD,wBA1NP0B,IAAMC,eA8OrCC,GAAkBC,YAAyB,CAC7Cga,aAActB,GACd7E,gBAAiBA,GACjBxG,YAAazI,GACbsU,mBAAoBA,KAWxB,IAAM5W,GAAc1B,YAAQb,GAR5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EAAS8X,GAAwB7c,KAC7DgY,cAAe,kBAAMjT,EAASiT,OAC9BjP,YAAa,kBAAMhE,EAASgE,OAC5BgV,YAAa,SAACf,GAAD,OAAUjY,EAASsY,GAAcL,QAKvCvV,eAAQjB,GAARiB,CAAqBod,IC1JrBG,yHAjHahlB,GACpB,IAAMwI,EAAQtK,EAAQ,cACtB,IACI,IAKImC,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUZ,IAEzB,OAAOa,MAAMf,EAAW,cAAeO,GAAMS,KAAK,SAAAC,GAK9C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,+CAMP,IAAMuK,EAAQtK,EAAQ,cACtB,IACI,IAAMuK,EAAqB,IAAIjI,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAMrB,OAAO3H,MAAMf,EAAW,gBAJb,CACPQ,OAAQ,MACRC,QAASkI,IAEkC3H,KAAK,SAAAC,GAKhD,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,2CAIU+B,GACjB,IAAMwI,EAAQtK,EAAQ,cAClB+B,EAAS,CACT2X,UAAW5X,GAEf,IACI,IAKIK,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAW,cAAeO,GAAMS,KAAK,SAAAC,GAK9C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,0CAIS+B,GAChBsH,QAAQC,IAAI,WAAYvH,GACxB,IAAMwI,EAAQtK,EAAQ,cAClB+B,EAAS,CACT4X,QAAS7X,GAEb,IACI,IAKIK,EAAO,CACPC,OAAQ,OACRC,QAPuB,IAAIC,QAAQ,CACnCC,eAAgB,mBAChBC,OAAQ,mBACRgI,cAAiBF,IAKjBnI,KAAMM,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAW,aAAcO,GAAMS,KAAK,SAAAC,GAK7C,OAJwB,MAApBA,EAAS4H,SACT3K,aAAa4K,QACbpD,OAAOC,SAASC,KAAO,KAEpB3E,EAASC,SACjBC,MAAM,SAAAC,GACL,OAAOA,IAEd,MAAMjD,eCpGR,SAASgnB,GAAoBjlB,GAClC,MAAO,CACLqB,KAAMC,EACNtB,QAuDG,SAAS+X,GAAgB/X,GAC9B,MAAO,CACLqB,KAAMC,EACNtB,QCxEW,SAASuE,GAASC,GAC/B,IAAMC,EAAS,GAaf,MAZ+B,KAA3BD,EAAOkL,kBACTjL,EAAOiL,gBAAkB,iCAEP,KAAhBlL,EAAOyS,OACTxS,EAAOwS,KAAO,kCAEe,OAA3BzS,EAAOwU,kBACTvU,EAAOuU,gBAAkB,2BAKpBvU,oCCOHygB,8BAEF,SAAAA,EAAYniB,GAAO,IAAAP,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAwiB,IACf1iB,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA+iB,GAAAriB,KAAAH,KAAMK,KAFVya,YAAa,EACMhb,EAoFnBqW,WAAa,WACTrW,EAAKO,MAAMoK,QAAQC,KAAK,cArFT5K,EAyJnBU,aAAe,WACXV,EAAKoD,SAAS,CACZqG,YAAY,GACX,cACH1H,GAAS/B,EAAKM,OACd,IAAM2B,EAASF,GAAS/B,EAAKM,OAC7B,GAAmC,IAA/BX,OAAO+J,KAAKzH,GAAQ0H,OAAc,CAClC,IAAIsR,EAAc,GADgBvP,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IAElC,QAAAiQ,EAAAC,EAAiB9L,EAAKM,MAAMkW,gBAA5BxK,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAA6C,KAApCU,EAAoCP,EAAAtQ,MACzC0f,EAAYrQ,KAAKwB,EAAK7Q,QAHQ,MAAAE,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,GAKlC,IAAIkF,EAAa,CACb5D,gBAAiBlN,EAAKM,MAAM4M,gBAC5BuH,KAAMzU,EAAKM,MAAMmU,KACjByG,kBAAmBD,EAAYE,OAC/BC,aAAc,IAElBpb,EAAKO,MAAMI,iBAAiBmQ,KA1KjB9Q,EA6KnBsW,aAAe,SAACtF,GACZhR,EAAKoD,SAALzD,OAAAsR,GAAA,EAAAtR,CAAA,GACKqR,EAAEE,OAAOlQ,KAAOgQ,EAAEE,OAAO3V,SA/KfyE,EAkLnBqb,iBAAmB,SAACrK,GAChBhR,EAAKoD,SAAS,CACVoX,KAAMxJ,EAAEE,OAAOoK,QAEnBtb,EAAKO,MAAMgb,YAAYvK,EAAEE,OAAOoK,QAtLjBtb,EAwLnBuW,cAAgB,SAACnK,GACbpM,EAAKoD,SAAS,CACVoT,gBAAiBpK,KA1LNpM,EA6LnBwb,WAAa,SAACpP,GACVpM,EAAKoD,SAAS,CACVgY,aAAchP,KA7LlBpM,EAAKM,MAAQ,CACToC,UAAU,EACV+G,YAAY,EACZyD,gBAAiB,GACjBuH,KAAM,GACNyC,YAAa,GACb3I,UAAW,GACXiI,gBAAiB,KACjB4E,aAAc,KACdZ,KAAM,KACNmI,UAAU,EACVC,eAAe,EACfC,QAAQ,EACRC,WAAW,EACXC,gBAAgB,EAChBC,SAAS,EACTC,WAAW,EACXC,gBAAgB,EAChBC,SAAS,GAIbnjB,EAAKojB,UAAYpjB,EAAKojB,UAAU3U,KAAf9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACjBA,EAAKqjB,YAAcrjB,EAAKqjB,YAAY5U,KAAjB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACnBA,EAAKsjB,iBAAmBtjB,EAAKsjB,iBAAiB7U,KAAtB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACxBA,EAAKujB,aAAevjB,EAAKujB,aAAa9U,KAAlB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACpBA,EAAKwjB,kBAAoBxjB,EAAKwjB,kBAAkB/U,KAAvB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACzBA,EAAKyjB,WAAazjB,EAAKyjB,WAAWhV,KAAhB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IAClBA,EAAK0jB,aAAe1jB,EAAK0jB,aAAajV,KAAlB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACpBA,EAAK2jB,kBAAoB3jB,EAAK2jB,kBAAkBlV,KAAvB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IACzBA,EAAK4jB,WAAa5jB,EAAK4jB,WAAWnV,KAAhB9O,OAAA+O,GAAA,EAAA/O,CAAAK,IAhCHA,mFAmCfE,KAAKK,MAAMiV,gBAEXtV,KAAKkD,SAAS,CACVV,UAAU,sDAGQG,GAAW,IAAAS,EAAApD,KAC9B2C,EAAU0S,iBACN1S,EAAU0S,gBAAgB/X,KAAK0Z,cAC4B,IAAvDrU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYnU,SAC1C7C,KAAKkD,SAAS,CACV8T,YAAarU,EAAU0S,gBAAgB/X,KAAK0Z,YAAYG,gBAKrExU,EAAUkM,aACLlM,EAAUkM,YAAYvR,MAAQqF,EAAUkM,YAAYvR,KAAKwR,UACpB,IAA7CnM,EAAUkM,YAAYvR,KAAKwR,QAAQjM,SACvB7C,KAAKkD,SAAS,CACVmL,UAAW1L,EAAUkM,YAAYvR,KAAKwR,QAAQxR,OAK3DqF,EAAU+X,oBACL/X,EAAU+X,mBAAmBpd,MAAQqF,EAAU+X,mBAAmBpd,KAAKqd,gBACrB,IAA1DhY,EAAU+X,mBAAmBpd,KAAKqd,cAAc9X,SACpC7C,KAAKkD,SAAS,CACVqR,KAAM5R,EAAU+X,mBAAmBpd,KAAKqd,cAAcY,WAKnE5Y,EAAUghB,eACNhhB,EAAUghB,cAAcrmB,KAAKsmB,sBACmC,IAA5DjhB,EAAUghB,cAAcrmB,KAAKsmB,mBAAmB/gB,SAC/C7C,KAAKkD,SAAS,CACVV,UAAU,IAEdxC,KAAKK,MAAMoK,QAAQC,KAAK,kBAExBzH,WAAW,WAAQG,EAAKF,SAAS,CAC7BV,UAAU,KACP,4CASnBxC,KAAKkD,SAAS,CACVuf,UAAU,EACVE,QAAQ,EACRD,eAAe,+CAInB1iB,KAAKkD,SAAS,CACVuf,UAAU,EACVE,QAAQ,EACRD,eAAe,wCAInB1iB,KAAKkD,SAAS,CACVyf,QAAQ,EACRF,UAAU,EACVC,eAAe,2CAKnB1iB,KAAKkD,SAAS,CACV6f,WAAW,EACXE,SAAS,EACTD,gBAAgB,gDAIpBhjB,KAAKkD,SAAS,CACV6f,WAAW,EACXE,SAAS,EACTD,gBAAgB,yCAIpBhjB,KAAKkD,SAAS,CACV+f,SAAS,EACTF,WAAW,EACXC,gBAAgB,2CAKpBhjB,KAAKkD,SAAS,CACV0f,WAAW,EACXE,SAAS,EACTD,gBAAgB,gDAIpB7iB,KAAKkD,SAAS,CACV0f,WAAW,EACXE,SAAS,EACTD,gBAAgB,yCAIpB7iB,KAAKkD,SAAS,CACV4f,SAAS,EACTF,WAAW,EACXC,gBAAgB,2CA+CpB,OACIvjB,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cACZL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,UAAUyiB,aAAW,SACvC9iB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,YAAYyiB,aAAW,WACzC9iB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAeyiB,aAAW,gDAI/C,IAAAlR,EAAAlR,KACGyiB,EAAaziB,KAAKI,MAAlBqiB,SACAC,EAAkB1iB,KAAKI,MAAvBsiB,cACAC,EAAW3iB,KAAKI,MAAhBuiB,OACAI,EAAc/iB,KAAKI,MAAnB2iB,UACAC,EAAmBhjB,KAAKI,MAAxB4iB,eACAC,EAAYjjB,KAAKI,MAAjB6iB,QACAL,EAAc5iB,KAAKI,MAAnBwiB,UACAC,EAAmB7iB,KAAKI,MAAxByiB,eACAC,EAAY9iB,KAAKI,MAAjB0iB,QAGFxR,GAFStR,KAAKqiB,eAEJ/iB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,gBAEV0D,EAAU/D,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,KAAWC,IAAI,MAd1C4N,GAeUvP,GAAS7B,KAAKI,OACkBJ,KAAKI,OAAhC4W,GAhBf5F,EAgBG7H,WAhBH6H,EAgBe4F,aAAa3I,EAhB5B+C,EAgB4B/C,UAG3BiJ,EAAqB,GAEvBN,GAAeA,EAAYvN,OAAS,GACpCuN,EAAYhE,IAAI,SAAC9G,GAEb,OADAoL,EAAmB5M,KAAK,CAAErP,MAAO6Q,EAAKqL,aAAcrY,MAAOgN,EAAKqL,aAAchB,SAAUrK,IAExF5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKqL,aAAc7P,GAAIwE,EAAKxE,GAAItM,IAAK8Q,EAAKxE,IACpDwE,EAAKqL,gBAKlB,IAAMmE,EAAkB,GAWxB,OAVIrN,GAAaA,EAAU5E,OAAS,GAChC4E,EAAU2E,IAAI,SAAC9G,GAEX,OADAwP,EAAgBhR,KAAK,CAAErP,MAAO6Q,EAAKjI,SAAU/E,MAAOgN,EAAKjI,SAAUsS,SAAUrK,IAE7E5M,EAAAC,EAAAC,cAAA,UAAQnE,MAAO6Q,EAAKjI,SAAUyD,GAAIwE,EAAKlC,QAAS5O,IAAK8Q,EAAKlC,SACrDkC,EAAKjI,YAMV3E,EAAAC,EAAAC,cAACmS,GAAD,CAAenN,MAAM,qBAAqBoN,OAAQN,GAC9ChS,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAQmE,KAAM1D,KAAKI,MAAMoC,SAAUmB,QAASN,GACxC/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gDACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BAAgC6H,QAASxH,KAAKmW,YACzD7W,EAAAC,EAAAC,cAAA,OAAK8D,IAAKuU,KAAUrU,IAAI,GAAG7D,UAAU,4BACrCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,qBAEJL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAhB,qBAGJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAeL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,sBAAzC,oBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKkjB,WAAW5jB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iBAAhE,WACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKmjB,aAAa7jB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAlE,UACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKojB,kBAAkB9jB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAvE,YAGJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbgjB,GACFrjB,EAAAC,EAAAC,cAACqkB,GAAA,OAAD,CAAQlkB,UAAU,aAAa0F,MAAO,CAACiC,OAAO,SAAUjM,MAAO2E,KAAKI,MAAM0jB,MAAOC,aAAc,SAACjT,GAAD,OAAKI,EAAKhO,SAAS,CAAC4gB,MAAMhT,EAAEkT,gBAG3H1kB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACT8iB,GAEFnjB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,6BACbL,EAAAC,EAAAC,cAACykB,GAAA1kB,EAAD,CACA4H,IAAI,oCACJ+c,oBAAkB,EAClBC,UAAU,EACVC,UAAW,SAAC7oB,GACJA,GACAqJ,QAAQpG,MAAMjD,QAM1B+D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACL+iB,GAEFpjB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,4BACbL,EAAAC,EAAAC,cAACykB,GAAA1kB,EAAD,CACA4H,IAAI,oCACJ+c,oBAAkB,EAClBC,UAAU,EACVC,UAAW,SAAC7oB,GACJA,GACAqJ,QAAQpG,MAAMjD,YAWtD+D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAeL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,sBAAzC,oBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAK0jB,YAAYpkB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iBAAjE,WACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKwjB,cAAclkB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAnE,UACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKyjB,mBAAmBnkB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAxE,YAGJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbmjB,GACFxjB,EAAAC,EAAAC,cAACqkB,GAAA,OAAD,CAAQlkB,UAAU,aAAa0F,MAAO,CAACiC,OAAO,SAAUjM,MAAO2E,KAAKI,MAAM0jB,MAAOC,aAAc,SAACjT,GAAD,OAAKI,EAAKhO,SAAS,CAAC4gB,MAAMhT,EAAEkT,iBAI3H1kB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACTijB,GAEFtjB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,6BACbL,EAAAC,EAAAC,cAACykB,GAAA1kB,EAAD,CACA4H,IAAI,oCACJ+c,oBAAkB,EAClBC,UAAU,EACVC,UAAW,SAAC7oB,GACJA,GACAqJ,QAAQpG,MAAMjD,SAO1B+D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACTkjB,GAEFvjB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,4BACbL,EAAAC,EAAAC,cAACykB,GAAA1kB,EAAD,CACA4H,IAAI,oCACJ+c,oBAAkB,EAClBC,UAAU,EACVC,UAAW,SAAC7oB,GACJA,GACAqJ,QAAQpG,MAAMjD,aAYtD+D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAeL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,sBAAzC,oBAEJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKujB,YAAYjkB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iBAAjE,WACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKqjB,cAAc/jB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAnE,UACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAa6H,QAASxH,KAAKsjB,mBAAmBhkB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAxE,YAGJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbsjB,GACF3jB,EAAAC,EAAAC,cAACqkB,GAAA,OAAD,CAAQlkB,UAAU,aAAa0F,MAAO,CAACiC,OAAO,SAAUjM,MAAO2E,KAAKI,MAAM0jB,MAAOC,aAAc,SAACjT,GAAD,OAAKI,EAAKhO,SAAS,CAAC4gB,MAAMhT,EAAEkT,iBAI3H1kB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACTojB,GAEFzjB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,6BACbL,EAAAC,EAAAC,cAACykB,GAAA1kB,EAAD,CACA4H,IAAI,oCACJ+c,oBAAkB,EAClBC,UAAU,EACVC,UAAW,SAAC7oB,GACJA,GACAqJ,QAAQpG,MAAMjD,SAO1B+D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACTqjB,GAEF1jB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,4BACbL,EAAAC,EAAAC,cAACykB,GAAA1kB,EAAD,CACA4H,IAAI,oCACJ+c,oBAAkB,EAClBC,UAAU,EACVC,UAAW,SAAC7oB,GACJA,GACAqJ,QAAQpG,MAAMjD,UAQ1C+D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgI,QAAS,kBAAK0J,EAAK1Q,gBAAgBb,UAAU,gCAArD,wBA3bN0B,IAAMC,gBAidtCC,GAAkBC,YAAyB,CAC7CmiB,cAAepB,GACflN,gBAAiBA,GACjBxG,YAAazI,GACbsU,mBAAoBA,KAWxB,IAAM5W,GAAc1B,YAAQb,GAR5B,SAA4Bc,GACxB,MAAO,CACH5B,iBAAkB,SAACnD,GAAD,OAAU+E,EF7d7B,SAA8B/E,GAGnC,GAFc9B,EAAQ,cAGpB,OAAO,SAAS6G,GACdigB,GAAkB+B,iBAAiB/mB,GAAMc,KAAK,SAAAd,GAE5C+E,EAASkgB,GAAoBjlB,IAC7B+E,EAASkgB,GAAoB,QACT,IAAjBjlB,EAAKuF,SACNyB,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,UACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,OAGS,IAAjBrH,EAAKuF,SACNyB,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,MAGRrH,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KEobyCme,CAAqBhnB,KAC1DgY,cAAe,kBAAMjT,EFpatB,WAGL,GAFc7G,EAAQ,cAGpB,OAAO,SAAS6G,GACdigB,GAAkB/M,kBAAkBnX,KAAK,SAAAd,GACvC+E,EAASgT,GAAgB/X,IACtBA,EAAKkB,OACN8F,IAAKC,KAAK,CACRC,MAAOlH,EAAKqG,QACZhF,KAAM,QACN8F,kBAAmB,KACnBC,mBAAmB,EACnBC,MAAO,QAGVpG,MAAM,SAAAC,GACP,OAAOA,KAIX2H,KE+YkCmP,KAC9BjP,YAAa,kBAAMhE,EAASgE,OAC5BgV,YAAa,SAACf,GAAD,OAAUjY,EAASsY,GAAcL,QAKvCvV,eAAQjB,GAARiB,CAAqByd,ICtbrB+B,oLA5CX,IAAMze,EAAQtK,EAAQ,cAEtB,OAAa,OAAVsK,EAECxG,EAAAC,EAAAC,cAACF,EAAAC,EAAMilB,SAAP,KACEllB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACilB,EAAA,EAAD,KACEnlB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,IAAI5jB,UAAWwB,KACxCjD,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,kBAAkB5jB,UAAWqE,KACzC9F,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,wBAAwB5jB,UAAW0d,KAC/Cnf,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOG,OAAQ,kBAAOtlB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAUtjB,GAAI,YAKzB,OAAV2E,EAEPxG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACF,EAAAC,EAAMilB,SAAP,KACEllB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACilB,EAAA,EAAD,KACEnlB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,SAAS5jB,UAAWsI,KAChC/J,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,cAAc5jB,UAAWmV,KACrC5W,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,cAAc5jB,UAAWyX,KACrClZ,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,gBAAgB5jB,UAAW6S,KACvCtU,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,sBAAsB5jB,UAAW8Z,KAC7Cvb,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,sBAAsB5jB,UAAWgb,KAC7Czc,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,gBAAgB5jB,UAAWic,KACvC1d,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,gBAAgB5jB,UAAWqe,KACvC9f,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,gBAAgB5jB,UAAWsf,KACvC/gB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,YAAY5jB,UAAW6f,KACnCthB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,mBAAmB5jB,UAAWohB,KAC1C7iB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,oBAAoB5jB,UAAWyhB,KAC3CljB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOG,OAAQ,kBAAOtlB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAUtjB,GAAG,uBAlBxC,SAlBOE,IAAMC,eCPJujB,QACW,cAA7B/hB,OAAOC,SAAS+hB,UAEe,UAA7BhiB,OAAOC,SAAS+hB,UAEhBhiB,OAAOC,SAAS+hB,SAASC,MACvB,yEClBSC,GAAA,CACXtmB,KAAM,IC0BKumB,eAAgB,CAC7BtjB,KAAMujB,KACNxmB,KC1Ba,WAA6C,IAAnC0B,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO1mB,KAChB,KAAKE,EACH,OAAOwmB,EAAO1mB,KAAKpB,KACrB,QACE,OAAO8C,IDoBX0O,QE3Ba,WAA6C,IAAnC1O,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IFuBXyR,WG5Ba,WAA6C,IAAnCzR,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IHwBX+J,WI7Ba,WAA6C,IAAnC/J,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IJyBXoK,WK9Ba,WAA6C,IAAnCpK,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IL0BXkJ,aM/Ba,WAA6C,IAAnClJ,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IN2BX4W,YOhCa,WAA6C,IAAnC5W,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IP4BX6W,UQjCa,WAA6C,IAAnC7W,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IR6BX8W,SSlCa,WAA6C,IAAnC9W,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IT8BXyL,gBUnCa,WAA6C,IAAnCzL,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IV+BXqb,kBWpCa,WAA6C,IAAnCrb,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IXgCXmc,kBYrCa,WAA6C,IAAnCnc,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IZiCX2U,kBatCa,WAA6C,IAAnC3U,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IbkCXua,ccvCa,WAA6C,IAAnCva,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IdmCXsd,mBexCa,WAA6C,IAAnCtd,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IfoCXod,WgBzCa,WAA6C,IAAnCpd,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IhBqCX4O,eiB1Ca,WAA6C,IAAnC5O,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IjBsCX0f,YkB3Ca,WAA6C,IAAnC1f,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IlBuCXwf,amB5Ca,WAA6C,IAAnCxf,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,InBwCXmf,YoB7Ca,WAA6C,IAAnCnf,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IpByCX8O,UqB9Ca,WAA6C,IAAnC9O,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,IrB0CXwhB,QsB/Ca,WAA6C,IAAnCxhB,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,ItB2CXilB,cuBhDa,WAA6C,IAAnCjlB,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,IpGoEiC,wBoGnE/B,OAAOymB,EAAO9nB,KAChB,QACE,OAAO8C,IvB4CXklB,ewBjDa,WAA6C,IAAnCllB,EAAmC+kB,UAAA1b,OAAA,QAAA/N,IAAAypB,UAAA,GAAAA,UAAA,GAA3BH,GAAatmB,KAAM0mB,EAAQD,UAAA1b,OAAA,EAAA0b,UAAA,QAAAzpB,EAC1D,OAAO0pB,EAAOzmB,MACZ,KAAKC,EACH,OAAOwmB,EAAO9nB,KAChB,QACE,OAAO8C,gBCWPmlB,4DAAQC,YAAYC,GAAU,GAAIC,YAAgBC,QAExDC,IAAShB,OACTtlB,EAAAC,EAAAC,cAACqmB,EAAA,EAAD,CAAUN,MAAOA,IAAOjmB,EAAAC,EAAAC,cAACsmB,GAAD,OACxBC,SAASC,eAAe,S3B0GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/nB,KAAK,SAAAgoB,GACjCA,EAAaC","file":"static/js/main.bf782a461.3.0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader-example.3886920c.gif\";","module.exports = __webpack_public_path__ + \"static/media/icon-left.0ea4be34.svg\";","module.exports = __webpack_public_path__ + \"static/media/novusone-logo.6b9fef02.png\";","export const setItem = (key, value) => {\r\n    try {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }catch(err){\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const getItem = (key) => {\r\n    try{\r\n        let serializedItem = localStorage.getItem(key); \r\n        if(serializedItem !== undefined || serializedItem !== null){\r\n            return serializedItem;\r\n        }else{\r\n            return false;\r\n        }\r\n    }catch(err){\r\n        return false;\r\n    }\r\n}","export const DO_LOGIN = 'DO_LOGIN';\r\nexport const DO_LOGIN_RES = 'DO_LOGIN_RES';\r\n\r\nexport const DO_FORGOTPASSWORD = 'DO_FORGOTPASSWORD';\r\nexport const DO_FORGOTPASSWORD_RES = 'DO_FORGOTPASSWORD_RES';\r\n\r\nexport const DO_ALL_USERS = 'DO_ALL_USERS';\r\nexport const DO_ALL_USERS_RES = 'DO_ALL_USERS_RES';\r\n\r\nexport const DO_CREATE_USER = 'DO_CREATE_USER';\r\nexport const DO_CREATE_USER_RES = 'DO_CREATE_USER_RES';\r\n\r\nexport const DO_DELETE_USER = 'DO_DELETE_USER';\r\nexport const DO_DELETE_USER_RES = 'DO_DELETE_USER_RES';\r\n\r\nexport const DO_UPDATE_USER = 'DO_UPDATE_USER';\r\nexport const DO_UPDATE_USER_RES = 'DO_UPDATE_USER_RES';\r\n\r\nexport const DO_USER_APPROVED = 'DO_USER_APPROVED';\r\nexport const DO_USER_APPROVED_RES = 'DO_USER_APPROVED_RES';\r\n\r\nexport const FETCH_All_COUNTRY = 'FETCH_All_COUNTRY';\r\nexport const FETCH_All_COUNTRY_RES = 'FETCH_All_COUNTRY_RES';\r\n\r\nexport const FETCH_All_STATE = 'FETCH_All_STATE';\r\nexport const FETCH_All_STATE_RES = 'FETCH_All_STATE_RES';\r\n\r\nexport const FETCH_All_CITY = 'FETCH_All_CITY';\r\nexport const FETCH_All_CITY_RES = 'FETCH_All_CITY_RES';\r\n\r\nexport const FETCH_All_APPLICATION = 'FETCH_All_APPLICATION';\r\nexport const FETCH_All_APPLICATION_RES = 'FETCH_All_APPLICATION_RES';\r\n\r\nexport const CREATE_APPLICATION = 'CREATE_APPLICATION';\r\nexport const CREATE_APPLICATION_RES = 'CREATE_APPLICATION_RES';\r\n\r\nexport const UPDATE_APPLICATION = 'UPDATE_APPLICATION';\r\nexport const UPDATE_APPLICATION_RES = 'UPDATE_APPLICATION_RES';\r\n\r\nexport const DELETE_APPLICATION = 'DELETE_APPLICATION';\r\nexport const DELETE_APPLICATION_RES = 'DELETE_APPLICATION_RES';\r\n\r\nexport const UPLOAD_APPLICATION_ICON = 'UPLOAD_APPLICATION_ICON';\r\nexport const UPLOAD_APPLICATION_ICON_RES = 'UPLOAD_APPLICATION_ICON_RES';\r\n\r\nexport const CREATE_NOTIFICATION = 'CREATE_NOTIFICATION';\r\nexport const CREATE_NOTIFICATION_RES = 'CREATE_NOTIFICATION_RES';\r\n\r\nexport const DO_ALL_SEARCH_USERS = 'DO_ALL_SEARCH_USERS';\r\nexport const DO_ALL_SEARCH_USERS_RES = 'DO_ALL_SEARCH_USERS_RES';\r\n\r\nexport const DO_USER_APPROVE_APP = 'DO_USER_APPROVE_APP';\r\nexport const DO_USER_APPROVE_APP_RES = 'DO_USER_APPROVE_APP_RES';\r\n\r\nexport const DO_RESETPASSWORD = 'DO_RESETPASSWORD';\r\nexport const DO_RESETPASSWORD_RES = 'DO_RESETPASSWORD_RES';\r\n\r\nexport const DO_CREATE_ADMIN = 'DO_CREATE_ADMIN';\r\nexport const DO_CREATE_ADMIN_RES = 'DO_CREATE_ADMIN_RES';\r\n\r\nexport const DO_APP_ADMIN = 'DO_APP_ADMIN';\r\nexport const DO_APP_ADMIN_RES = 'DO_APP_ADMIN_RES';\r\n\r\nexport const DELETE_ADMIN = 'DELETE_ADMIN';\r\nexport const DELETE_ADMIN_RES = 'DELETE_ADMIN_RES';\r\n\r\nexport const DO_CHECK_USER = 'DO_CHECK_USER';\r\nexport const DO_CHECK_USER_RES = 'DO_CHECK_USER_RES';\r\n\r\nexport const FETCH_NOVUSBI = 'FETCH_NOVUSBI';\r\nexport const FETCH_NOVUSBI_RES = 'FETCH_NOVUSBI_RES';\r\n\r\nexport const DO_NOVUSBI_CREATE = 'DO_NOVUSBI_CREATE';\r\nexport const DO_NOVUSBI_CREATE_RES = 'DO_NOVUSBI_CREATE_RES';\r\n\r\nexport const DO_NOVUSBI_ARTICLE = 'DO_NOVUSBI_ARTICLE';\r\nexport const DO_NOVUSBI_ARTICLE_RES = 'DO_NOVUSBI_ARTICLE_RES';\r\n\r\n","\r\nexport const BASE_URL = 'http://3.132.68.85:3000/api';\r\n","\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass loginApi {\r\n\r\n    static doLogin(data) {\r\n        let sendBody={\r\n            email:data.email,\r\n            password:data.encrypted_password\r\n        }\r\n\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            });\r\n            let body = {\r\n                method: 'post',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/superlogin', body).then(response => {\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default loginApi;\r\n","import * as types from './actionTypes';\r\nimport loginApi from '../api/loginApi';\r\nimport Swal from 'sweetalert2';\r\nimport { setItem } from '../utils/localStore';\r\n// import {logout} from '../helper/helper';\r\n\r\nexport function doLogin(data) {\r\n\r\n  return {\r\n    type: types.DO_LOGIN, \r\n    data\r\n  };\r\n}\r\n\r\nexport function doLoginRes(user) {  \r\n  return {\r\n    type: types.DO_LOGIN_RES,\r\n    user\r\n  };\r\n}\r\n\r\nexport function submit_login(data) {\r\n  return function(dispatch) {\r\n    loginApi.doLogin(data).then(user => {\r\n      if (user.success === true) {\r\n        let token = `Bearer `+user.token\r\n        setItem('auth_token', token);\r\n        setItem('userName', user.data.fullname);\r\n        setItem('userRoleId', user.data.role_id);\r\n        if (user.data.application_data) {\r\n          setItem('adminAppData', JSON.stringify(user.data.application_data));\r\n          setItem('adminAppId', user.data.application_data.app_id);\r\n          setItem('adminAppName', user.data.application_data.app_name);\r\n        }\r\n        dispatch(doLoginRes(user));\r\n        dispatch(doLoginRes(null));\r\n      } else {\r\n        Swal.fire({\r\n          title: user.message,\r\n          type: 'error',\r\n          confirmButtonText: 'OK',\r\n          allowOutsideClick: false,\r\n          timer: 3000\r\n        })\r\n      }\r\n\r\n      if(user.error){\r\n        Swal.fire({\r\n          title: user.message,\r\n          type: 'error',\r\n          confirmButtonText: 'OK',\r\n          allowOutsideClick: false,\r\n          timer: 3000\r\n        })\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n      return error\r\n    });\r\n  };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { doLoginRes } from '../../../action/loginActions';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst fields = ['email', 'encrypted_password'];\r\nconst lower = value => value && value.toLowerCase();\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    }\r\n    if (!values.encrypted_password) {\r\n        errors.encrypted_password = 'Required'\r\n    }\r\n    return errors\r\n}\r\n\r\n\r\nclass LoginForm extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps) {\r\n    //     if(nextProps){\r\n    //         console.log(nextProps);\r\n    //         if(nextProps.doLoginRes.user.form.ReduxLoginForm.submitSucceeded === true){\r\n    //             this.props.reset();\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const { handleSubmit, handleFormSubmit, pristine, submitting } = this.props\r\n        return (\r\n            <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                <div className=\"small-12 columns error_message form_field_wrapper email_feild_wrapper\">\r\n                    <Field\r\n                        name=\"email\"\r\n                        component={renderField}\r\n                        label=\"Enter Email\"\r\n                        autoComplete=\"off\"\r\n                        type=\"email\"\r\n                        normalize={lower}\r\n                    />\r\n                </div>\r\n                <div className=\"small-12 columns error_message form_field_wrapper password_feild_wrapper\">\r\n                    <Field\r\n                        name=\"encrypted_password\"\r\n                        component={renderField}\r\n                        label=\"Enter Password\"\r\n                        autoComplete=\"off\"\r\n                        type=\"password\"\r\n                    />\r\n                </div>\r\n                <div className=\"forget_password\">\r\n                    <Link to=\"/forgetpassword\">\r\n                        <span>Forgot Password?</span>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary login_button\" disabled={pristine || submitting}>Submit</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitting: PropTypes.bool,\r\n    handleFormSubmit: PropTypes.func,\r\n    doLoginRes: PropTypes.any\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n    doLoginRes: doLoginRes\r\n});\r\n  \r\nfunction mapDispatchToProps(dispatch,ownProps) {\r\n    return {\r\n        \r\n    };\r\n}\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'ReduxLoginForm',\r\n    fields,\r\n    validate,\r\n    destroyOnUnmount: false,\r\n    enableReinitialize: true,\r\n    keepDirtyOnReinitialize: true,\r\n    touchOnBlur: false,\r\n})(LoginForm)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxLoginForm);\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './login.scss';\r\nimport LoginForm from './Form/form';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\nimport { submit_login, doLoginRes } from '../../action/loginActions';\r\n// import { setItem, getItem } from '../../utils/localStore';\r\nimport Loader from 'react-loader-advanced';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\n\r\nclass LoginComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoader: false,\r\n            client_ip: null,\r\n            remainingDay: '',\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.loginRes.user.user) {\r\n            if (nextProps.loginRes.user.user && nextProps.loginRes.user.user.data) {\r\n                if (nextProps.loginRes.user.user.success === true) {\r\n                    window.location.href=\"/users\";\r\n                }\r\n            } else {\r\n                setTimeout(this.setState({\r\n                    isLoader: false,\r\n                }), 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit(data) {\r\n        let sendRequest = data;\r\n        this.setState({\r\n            isLoader: true,\r\n        })\r\n        this.props.handleFormSubmit(sendRequest);\r\n    };\r\n\r\n    render() {\r\n\t\tconst spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        return (\r\n            <Loader show={this.state.isLoader} message={spinner}>\r\n                <div className=\"login_content\">\r\n                    <div className=\"login_content_inner\">\r\n                        <div className=\"login_content_inner_head\">\r\n                            <div className=\"company_logo\">\r\n                                <img src={logoImg} alt=\"\"  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"login_content_inner_body\">\r\n                            <div className=\"login_content_inner_body_inner\">\r\n                                {/* <div className=\"user_icon\"><i className=\"fa fa-user-o\"></i></div> */}\r\n                                <div className=\"login_heading\">\r\n                                    Novus Login\r\n                                </div>\r\n                                <div className=\"form_content_login\">\r\n                                    <LoginForm handleFormSubmit={(data) => { this.handleSubmit(data) }} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Loader>\r\n        )\r\n    }\r\n}\r\n\r\nLoginComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    loginRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    loginRes: doLoginRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submit_login(data))\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(LoginComponent);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst fields = ['email'];\r\nconst lower = value => value && value.toLowerCase();\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nfunction validate(values) {\r\n    const errors = {}\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    }\r\n    return errors\r\n}\r\n\r\nclass ForgotpasswordForm extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, handleFormSubmit, pristine, submitting } = this.props\r\n        return (\r\n            <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                <div className=\"small-12 columns error_message form_field_wrapper email_feild_wrapper\">\r\n                    <Field\r\n                        name=\"email\"\r\n                        component={renderField}\r\n                        label=\"Enter Email\"\r\n                        autoComplete=\"off\"\r\n                        type=\"email\"\r\n                        normalize={lower}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary login_button\" disabled={pristine || submitting}>Submit</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nForgotpasswordForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitting: PropTypes.bool,\r\n    handleFormSubmit: PropTypes.func,\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'ReduxForgotpasswordForm',\r\n    fields,\r\n    validate,\r\n    destroyOnUnmount: false,\r\n    enableReinitialize: true,\r\n    keepDirtyOnReinitialize: true,\r\n    touchOnBlur: false,\r\n})(ForgotpasswordForm)","\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass forgotPasswordApi {\r\n    static doForgotpassword(data) {\r\n\r\n        let sendBody={\r\n            email:data.email\r\n        }\r\n\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/sendResetPasswordLink', body).then(response => {\r\n                if(response.ok === true){\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default forgotPasswordApi;","import * as types from './actionTypes';\r\nimport forgotPasswordApi from '../api/forgotPasswordApi';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport function doForgotpassword(data) {\r\n  return {\r\n    type: types.DO_FORGOTPASSWORD,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doForgotpasswordRes(user) {\r\n  return {\r\n    type: types.DO_FORGOTPASSWORD_RES,\r\n    user\r\n  };\r\n}\r\n\r\nexport function submitForgotpassword(data) {\r\n  return function(dispatch) {\r\n    forgotPasswordApi.doForgotpassword(data).then(user => {\r\n      dispatch(doForgotpasswordRes(user));\r\n      if(user.error){\r\n        Swal.fire({\r\n          title: user.message,\r\n          type: 'error',\r\n          confirmButtonText: 'OK',\r\n          allowOutsideClick: false,\r\n          timer: 3000\r\n        })\r\n      }\r\n    }).catch(error => {\r\n      return error\r\n    });\r\n  };\r\n}","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Link } from 'react-router-dom';\r\nimport './forgetPassword.scss';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\nimport ForgotpasswordForm from './forgetpasswordForm/forgetPasswordForm';\r\nimport { submitForgotpassword, doForgotpasswordRes } from '../../action/forgotPasswordActions';\r\n// import { ToastContainer } from 'react-toastify';\r\n\r\nclass ForgetPasswordComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    handleSubmit(data) {\r\n        let sendRequest = {\r\n            \"email\" : data.email\r\n        }\r\n        this.props.handleFormSubmit(sendRequest);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forgetpassword_content login_content\">\r\n                <div className=\"login_content_inner\">\r\n                    <div className=\"login_content_inner_head\">\r\n                        <div className=\"company_logo\">\r\n                            <img src={logoImg} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"login_content_inner_body\">\r\n                        <div className=\"login_content_inner_body_inner\">\r\n                            {/* <div className=\"user_icon\"><i className=\"fa fa-user-o\"></i></div> */}\r\n                            <div className=\"forgetpassword_heading login_heading\">\r\n                                Forgot Password\r\n                            </div>\r\n                            <div className=\"form_content_forgetpassword\">\r\n                                <p style={{ textAlign: 'center', fontSize: '15px', color: '#fff' }}>Submit your email and we'll send you a link to reset it.</p>\r\n                                <ForgotpasswordForm handleFormSubmit={(data) => { this.handleSubmit(data) }} />\r\n                            </div>\r\n                            <div className=\"row mt-35px\">\r\n                                <div className=\"col col-12 login_forgot\">\r\n                                    <Link to={\"/\"} className=\"text-decoration-none\">\r\n                                        <span>Login?</span>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <ToastContainer /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nForgetPasswordComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    forgotpasswordRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    forgotpasswordRes: doForgotpasswordRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitForgotpassword(data))\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ForgetPasswordComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass usersApi {  \r\n    static doUserAll() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/user_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default usersApi;","\r\nimport { getItem } from '../utils/localStore';\r\n\r\nexport const logout=() =>{\r\n    localStorage.clear();\r\n    window.location.href = '/';\r\n}\r\n\r\nexport const checkLogin=() =>{\r\n    const TOKEN = getItem('auth_token');\r\n    if(TOKEN !== undefined || TOKEN !== null){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function dollarAmountFormat (input) {\r\n    if(input) {\r\n        if(input.length>0){\r\n            return '$' +(input[0]).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        } else {\r\n            return '$' +(input).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        }\r\n    } else {\r\n        return '$0.00'\r\n    }\r\n}\r\n\r\nexport function numberWithCommas(number)  {\r\n    return String(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n}\r\nexport function numberWithCommasAndDollar(number)  {\r\n    if (number === null) {\r\n        return '$0'\r\n    } else {\r\n        return '$' +String(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n    }\r\n}\r\n\r\nexport function dateFormat(date){\r\n    if (!date) return null;\r\n    let dateNew = {date};\r\n    var monthNames = [\r\n        'Jun', 'Feb', 'Mar',\r\n        'Apr', 'May', 'Jun', 'Jul',\r\n        'Aug', 'Sep', 'Oct',\r\n        'Nov', 'Dec',\r\n    ];\r\n    let splitTimeDate = dateNew.date.split(' ')\r\n    let splitDate = splitTimeDate[0].split('-')\r\n    let day = splitDate[2];\r\n    let monthIndex = splitDate[1];\r\n    return  monthNames[monthIndex - 1] + ' ' + day;\r\n}\r\nexport function loadScript () {    \r\n    var tag = document.createElement('script');\r\n    tag.async = false;\r\n    tag.innerHTML = \"window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'UA-87376082-2');\";\r\n    document.head.appendChild(tag);\r\n}\r\n\r\nexport function dateTimeFormat(datetime) {\r\n    // eslint-disable-next-line no-unused-expressions\r\n    if (datetime !== null && datetime !== '' && datetime !== undefined) {\r\n      let d = datetime;\r\n      return d.getFullYear() + '-' +\r\n      ('00' + (d.getMonth() + 1)).slice(-2) + '-' +\r\n      ('00' + d.getDate()).slice(-2) + ' ' +\r\n      ('00' + d.getHours()).slice(-2) + ':' +\r\n      ('00' + d.getMinutes()).slice(-2) + ':' +\r\n      ('00' + d.getSeconds()).slice(-2);\r\n    } else {\r\n      return 'N/A';\r\n    }\r\n}\r\n","import * as types from './actionTypes';  \r\nimport UsersApi from '../api/userApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserAll() {\r\n\r\n  return {\r\n    type: types.DO_ALL_USERS,\r\n  };\r\n}\r\n\r\nexport function doUserAllRes(data) {  \r\n  return {\r\n    type: types.DO_ALL_USERS_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllUsers() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UsersApi.doUserAll().then(data => {\r\n        dispatch(doUserAllRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport Helmet from 'react-helmet';\r\nimport './layoutwrapper.css';\r\n// import Loader from 'react-loader-advanced';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getItem } from '../../utils/localStore';\r\n// import loaderImg from '../../assets/images/loader-example.gif';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\nimport { doUserAllRes } from '../../action/userActions';\r\n\r\nexport function logout() {\r\n    localStorage.clear();\r\n    window.location.href = '/';\r\n}\r\n\r\nlet page=\"\";\r\n\r\nclass LayoutWrapper extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoader: true,\r\n            leftSidebar: false,\r\n            fullName: '',\r\n            appName: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        page =window.location.pathname;\r\n        page =page.split('/');\r\n        const fullname = getItem('userName');\r\n        const adminApp = getItem('adminAppName');\r\n        this.setState({\r\n            fullName: fullname,\r\n            appName: adminApp,\r\n            isLoader: true,\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            isLoader: false\r\n        })\r\n    }\r\n\r\n    openurl(geturl) {\r\n        const url = geturl;\r\n        window.open(url, '_blank');\r\n    }\r\n\r\n    toggleLeftSidebar = () => {\r\n        this.setState({\r\n            leftSidebar: !this.state.leftSidebar\r\n        });\r\n    }\r\n\r\n    goCustomer = () => {\r\n        let data = {\r\n            data: []\r\n        }\r\n        this.props.doUserAllRes(data);\r\n    }\r\n    render() {\r\n        // const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        return (\r\n            <div style={{ width: '100%', height: '100vh' }} className={(this.state.isLoader ? 'position-fixed' : '')}>\r\n                {/* <Loader show={this.state.isLoader} message={spinner}> */}\r\n                    <Helmet title={this.props.title} />\r\n                    <div className=\"container-fluid header hidden_under_991px\">\r\n                        <div className=\"row ipo_icon header_inner\">\r\n                            <div className=\"col col-6 align-self-center\">\r\n                                <div className=\"logo\">\r\n                                    <img src={logoImg} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-fluid header visible_under_991px\">\r\n                        <div className=\"row ipo_icon header_inner\">\r\n                            <div className=\"col col-3 align-self-center\">\r\n                                <button className=\"sidebar_toggle_btn left_sidebar_toggle_btn\" onClick={this.toggleLeftSidebar}>\r\n                                    <i className=\"fa fa-navicon fa-lg\"></i>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col col-6 align-self-center\">\r\n                                <div className=\"logo\">\r\n                                    <img src={logoImg} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-fluid page_content main_content_wrappper\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-lg-2\" data-attr={this.state.leftSidebar ? 'active' : ''} id=\"left_sidebar\">\r\n                                <div className=\"left_sidebar\">\r\n                                    <div className=\"sidebar_widget left_sidebar_content right_sidebar_content\">\r\n                                        <div className=\"user-name\">\r\n                                            <div className=\"user-name-style\">{this.state.fullName}</div>\r\n                                            {\r\n                                                this.state.appName &&\r\n                                                <div>{this.state.appName} Application</div> \r\n                                            }\r\n                                        </div>\r\n                                        <div className={page[1]==='users' ? 'active' : 'no-class'} onClick={this.goCustomer}>\r\n                                            <NavLink to={\"/users\"} data-parent=\"#sidebar\" >\r\n                                            <i className=\"fa fa-users\" style={{fontSize: '16px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Users</span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div className={page[1]==='applications' ? 'active' : 'no-class'} onClick={this.goCustomer}>\r\n                                            <NavLink to={\"/applications\"} data-parent=\"#sidebar\" >\r\n                                            <i className=\"fa fa-mobile\" style={{fontSize: '32px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Applications</span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div className={page[1]==='notification' ? 'active' : 'no-class'}>\r\n                                            <NavLink to={\"/notification\"} data-parent=\"#sidebar\" >\r\n                                            <i className=\"fa fa-bell\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Notification</span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div className=\"nav-item dropdown pd-20 layout_left drop_down_cls\">\r\n                                            <a className=\"nav-link dropdown-toggle link_clr\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fa fa-dashboard\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                            <span className=\"content-name\">Novus Bi</span>\r\n                                            </a>\r\n                                            <div className=\"dropdown-menu menu_fontSze\" aria-labelledby=\"navbarDropdown\">\r\n                                                <div className={page[1]==='novus-bi' ? 'active' : 'no-class'}>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-newspaper\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">News</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-bar-chart\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">MARKET KPI's</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-pie-chart\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">IMPORTS STATS</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-trophy\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">COMPETITION</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-volume-up\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">PODCASTS</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                <div className={page[1]==='novus-bi-article' ? 'active' : 'no-class'}>\r\n                                                    <NavLink to={\"/novus-bi-article\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-volume-up\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">Novus Bi Article</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n                                                </div>                                                \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"no-class\">\r\n                                            <div onClick={logout} data-parent=\"#sidebar\" className=\"logout_link\">\r\n                                                <i className=\"fa fa-sign-out\" style={{fontSize: '18px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Sign Out</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"divider clearfix\"></div> */}\r\n                                        {/* <div onClick={logout} data-parent=\"#sidebar\" className=\"logout_link\">\r\n                                            <i className=\"fa fa-users\" style={{fontSize: '16px'}}  aria-hidden=\"true\"></i>\r\n                                            <span className=\"content-name\">Sign Out</span>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <main className=\"col-md-12 col-lg-10\">\r\n                                <div className=\"content main_content_box_inner\">\r\n                                    {this.props.children}\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n                    </div>\r\n                {/* </Loader> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLayoutWrapper.propTypes = {\r\n\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        doUserAllRes: (data) => dispatch(doUserAllRes(data)),\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(LayoutWrapper);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass userApprovedApi {  \r\n    static doUserApproved(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/user_approve', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default userApprovedApi;","import * as types from './actionTypes';  \r\nimport userApprovedApi from '../api/userApprovedApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserApproved(data) {\r\n\r\n  return {\r\n    type: types.DO_USER_APPROVED,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUserApprovedRes(data) {  \r\n  return {\r\n    type: types.DO_USER_APPROVED_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function updateUserStatus(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      userApprovedApi.doUserApproved(data).then(data => {\r\n        dispatch(doUserApprovedRes(data));\r\n        dispatch(doUserApprovedRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n","import { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\n\r\nclass deleteUserApi {  \r\n    static deleteUser(data) {\r\n        console.log(data)\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body:JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_delete_user', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default deleteUserApi;","import * as types from './actionTypes';  \r\nimport deleteUserApi from '../api/deleteUserApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport function deleteUser(data) {\r\n  return {\r\n    type: types.DO_DELETE_USER, \r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteUserRes(data) {\r\n  return {\r\n    type: types.DO_DELETE_USER_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteUserDetails(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      deleteUserApi.deleteUser(data).then(data => {\r\n        dispatch(doDeleteUserRes(data));\r\n        dispatch(doDeleteUserRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass ApplicationApi {  \r\n    static getAllApplication() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/application_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default ApplicationApi;","import * as types from './actionTypes';  \r\nimport ApplicationApi from '../api/applicationApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getAllApplication() {\r\n\r\n  return {\r\n    type: types.FETCH_All_APPLICATION,\r\n  };\r\n}\r\n\r\nexport function getAllApplicationRes(data) {  \r\n  return {\r\n    type: types.FETCH_All_APPLICATION_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchAllApplication() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      ApplicationApi.getAllApplication().then(data => {\r\n        dispatch(getAllApplicationRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass userApproveAppApi {  \r\n    static doUserApproveApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/AppUserApprove', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default userApproveAppApi;","import * as types from './actionTypes';  \r\nimport userApproveAppApi from '../api/userApproveAppApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserApproveApp(data) {\r\n\r\n  return {\r\n    type: types.DO_USER_APPROVE_APP,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUserApproveAppRes(data) {  \r\n  return {\r\n    type: types.DO_USER_APPROVE_APP_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function approveAppUser(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      userApproveAppApi.doUserApproveApp(data).then(data => {\r\n        dispatch(doUserApproveAppRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n        dispatch(doUserApproveAppRes(null));\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass checkUserApi {  \r\n    static doCheckUser(data) {\r\n        // let payload = {\r\n        //     UserName: data\r\n        // }\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body:JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/ValidateUser', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default checkUserApi;","import * as types from './actionTypes';  \r\nimport checkUserApi from '../api/checkUserApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doCheckUser(data) {\r\n\r\n  return {\r\n    type: types.DO_CHECK_USER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCheckUserRes(data) {  \r\n  return {\r\n    type: types.DO_CHECK_USER_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function checkUserName(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      checkUserApi.doCheckUser(data).then(data => {\r\n        dispatch(doCheckUserRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Loader from 'react-loader-advanced';\r\nimport Modal from \"react-responsive-modal\";\r\nimport './users.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { updateUserStatus, doUserApprovedRes } from '../../action/approvedUserActions';\r\nimport { deleteUserDetails, doDeleteUserRes } from '../../action/deleteUserActions';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport { approveAppUser, doUserApproveAppRes } from '../../action/approveUserAppActions';\r\nimport { checkUserName, doCheckUserRes } from '../../action/checkUserActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport { getItem } from '../../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nlet isApprove = false;\r\nlet isDelete = false;\r\nlet isApprovedApp = false;\r\nlet userRole = getItem('userRoleId');\r\nlet isUserAvailable = false;\r\n\r\nclass UsersComponent extends React.PureComponent {\r\n  constructor() { \r\n    super();\r\n    isApprove = false;\r\n    isDelete = false;\r\n    isApprovedApp = false;\r\n    isUserAvailable = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      usersList: [],\r\n      openDeleteUserModal: false,\r\n      isdisabled: false,\r\n      openApprovedModal: false,\r\n      applicationList: [],\r\n      isSubmitedUser: false,\r\n      isSubmited: false,\r\n      applicationId: '',\r\n      applicationName: '',\r\n      userName: '',\r\n      selectedUserList: [],\r\n      openErrorModal: false,\r\n      uiRender: false,\r\n      selectedUserId: '',\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n    this.approveDisapprove = this.approveDisapprove.bind(this);\r\n    this.createApproved = this.createApproved.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let userAppGroup = getItem('adminAppId');\r\n    if (userAppGroup !== null) {\r\n      this.setState({\r\n        isLoader: false,\r\n        applicationId: getItem('adminAppId'),\r\n        applicationName: getItem('adminAppName'),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoader: false,\r\n      });\r\n    }\r\n    this.props.getUsers();\r\n    this.props.fetchAllApplication();\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.allApplicationRes) {\r\n\t\t\tif (props.allApplicationRes.data && props.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (props.allApplicationRes.data.applicationList.success===true) {\r\n          this.setState({\r\n            applicationList: props.allApplicationRes.data.applicationList.data\r\n          },()=>{});\r\n        }\r\n      }\r\n    }\r\n    if (props.allUsersRes) {\r\n\t\t\tif (props.allUsersRes.data && props.allUsersRes.data.allUser) {\r\n\t\t\t\tif (props.allUsersRes.data.allUser.success===true) {\r\n          this.setState({\r\n            usersList: props.allUsersRes.data.allUser.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    \r\n    if (props.doUserApprovedRes) {\r\n      if (props.doUserApprovedRes.data && props.doUserApprovedRes.data.approvedUser) {\r\n        if (props.doUserApprovedRes.data.approvedUser.success === true && isApprove) {\r\n          isApprove = false;\r\n          this.props.getUsers();\r\n        }\r\n      }\r\n    }\r\n    if (props.userApproveAppRes) {\r\n      if (props.userApproveAppRes.data && props.userApproveAppRes.data.userApproveApp) {\r\n        if (props.userApproveAppRes.data.userApproveApp.success === true ) {\r\n          isApprovedApp = false;\r\n          this.props.getUsers();\r\n          this.setState({\r\n            openApprovedModal: false\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (props.doDeleteUserRes) {\r\n      if (props.doDeleteUserRes.data && props.doDeleteUserRes.data.deleteUser) {\r\n        if (props.doDeleteUserRes.data.deleteUser.success === true && isDelete) {\r\n          isDelete = false;\r\n          this.props.getUsers();\r\n          this.setState({\r\n            openDeleteUserModal: false,\r\n            isdisabled: false\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(props.checkUserRes){\r\n      if(props.checkUserRes.data.checkUser ){\r\n          if(props.checkUserRes.data.checkUser.success === true && isUserAvailable) {\r\n              isUserAvailable = false;\r\n              this.setState({\r\n                  isLoader: false\r\n              });\r\n              let localArray = this.state.selectedUserList;\r\n              if (localArray.length > 0) {\r\n                let isTrue = 0;\r\n                if (userRole == '1') {\r\n                  for (let items of this.state.selectedUserList) {\r\n                    if (items.application_id == this.state.applicationId) {\r\n                      isTrue = 1;\r\n                    }\r\n                  }\r\n                } else {\r\n                  for (let items of localArray) {\r\n                    if (items.user_name == this.state.userName) {\r\n                      isTrue = 1;\r\n                    }\r\n                  }\r\n                }\r\n                if (isTrue == 0) {\r\n                  let localArr = localArray;\r\n                  let appName = '';\r\n                  if (userRole == '1') {\r\n                    for (let item of this.state.applicationList) {\r\n                      if (Number(this.state.applicationId) == item.application_id) {\r\n                        appName = item.application_name;\r\n                      }\r\n                    }\r\n                  } else {\r\n                    appName = this.state.applicationName\r\n                  }\r\n                  localArr.push({\r\n                    application_id: this.state.applicationId,\r\n                    application_name: appName,\r\n                    user_name: this.state.userName,\r\n                  });\r\n                  this.setState({\r\n                    selectedUserList: localArr,\r\n                  }, () => {\r\n                    if (userRole == '1') {\r\n                      this.setState({\r\n                        applicationId: '',\r\n                        userName: '',\r\n                        isSubmitedUser: false\r\n                      })\r\n                    } else {\r\n                      this.setState({\r\n                        userName: '',\r\n                        isSubmitedUser: false\r\n                      })\r\n                    }\r\n                  });\r\n                } else {\r\n                  this.setState({\r\n                    openErrorModal: true\r\n                  });\r\n                }\r\n              } else {\r\n                let localArr = this.state.selectedUserList;\r\n                let appName = '';\r\n                // for (let item of this.state.applicationList) {\r\n                //   if (this.state.applicationId == item.application_id) {\r\n                //     appName = item.application_name;\r\n                //   }\r\n                // }\r\n                if (userRole == '1') {\r\n                  for (let item of this.state.applicationList) {\r\n                    if (Number(this.state.applicationId) == item.application_id) {\r\n                      appName = item.application_name;\r\n                    }\r\n                  }\r\n                } else {\r\n                  appName = this.state.applicationName\r\n                }\r\n                localArr.push({\r\n                  application_id: this.state.applicationId,\r\n                  application_name: appName,\r\n                  user_name: this.state.userName,\r\n                });\r\n                this.setState({\r\n                  selectedUserList: localArr,\r\n                }, () => {\r\n                  if (userRole == '1') {\r\n                    this.setState({\r\n                      applicationId: '',\r\n                      userName: '',\r\n                      isSubmitedUser: false\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      userName: '',\r\n                      isSubmitedUser: false\r\n                    })\r\n                  }\r\n                });\r\n              }\r\n          }\r\n          if(props.checkUserRes.data.checkUser.success === false && isUserAvailable) {\r\n              isUserAvailable = false;\r\n              this.setState({\r\n                  isLoader: false\r\n              });\r\n              Swal.fire({\r\n                  title: props.checkUserRes.data.checkUser.message,\r\n                  type: 'info',\r\n                  confirmButtonText: 'OK',\r\n                  allowOutsideClick: false,\r\n                  timer: 3000\r\n              });\r\n          }\r\n      } else {\r\n          setTimeout(() => { this.setState({\r\n              isLoader: false\r\n          }); }, 3000);\r\n      }\r\n    }\r\n  }\r\n\r\n  approvedUser = () => {\r\n    this.setState({\r\n      isSubmited: true,\r\n    }, () => { });\r\n    this.validate(this.state);\r\n    const errors = this.validate(this.state);\r\n    if (Object.keys(errors).length === 0) {\r\n      let selectedUsr = this.state.selectedUserList;\r\n\r\n      for (var i = 0; i < selectedUsr.length; i++) {\r\n        var o = selectedUsr[i];\r\n        delete o.application_name;\r\n      }\r\n      // for (let item of selectedUsr) {\r\n      //   delete item.application_name\r\n      // }\r\n      let payReq = {\r\n        create_user: selectedUsr,\r\n        user_id: this.state.selectedUserId\r\n      }\r\n      this.props.approveAppUser(payReq);\r\n    }\r\n  }\r\n\r\n  approveDisapprove(rowData, status){\r\n    let payloadReq = {\r\n      user_id: rowData.user_id,\r\n      status: status\r\n    }\r\n    this.props.updateUserStatus(payloadReq);\r\n    isApprove = true;\r\n  }\r\n\r\n  deleteUser = () => {\r\n    let payLoad = {\r\n      user_id: this.state.userId\r\n    }\r\n    this.props.deleteUserRecord(payLoad);\r\n    isDelete = true;\r\n    this.setState({\r\n      isdisabled: true\r\n    });\r\n  }\r\n\r\n  updateUser = (data) => {\r\n    this.props.history.push({\r\n      pathname: 'updateUser',\r\n      state: {userData: data}\r\n    });\r\n  }\r\n\r\n  createApproved(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    // console.log(rowData);\r\n    return (<div style={{textAlign: 'center'}}>\r\n      {\r\n        rowData.status === 1 &&\r\n        <div>\r\n          <button className=\"btn btn-edit-customer\" onClick={() => { this.openApproved(rowData) }}>Approve</button>\r\n          <button className=\"btn btn-delete-customer\" onClick={() => { this.approveDisapprove(rowData, '2') }}>\r\n            Disapprove\r\n          </button>\r\n        </div>\r\n      }\r\n      {\r\n        rowData.status === 0 &&\r\n        <div>\r\n          <button className=\"btn btn-delete-customer\" onClick={() => { this.approveDisapprove(rowData, '2') }}>\r\n            Disapprove\r\n          </button>\r\n        </div>\r\n      }\r\n      {\r\n        rowData.status === 2 &&\r\n        <div>\r\n          <button className=\"btn btn-edit-customer\" onClick={() => { this.openApproved(rowData) }}>\r\n            Approve\r\n          </button>\r\n        </div>\r\n      }\r\n    </div>);\r\n  }\r\n\r\n  actionUpdateTemplate = (rowData) => {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={() => { this.updateUser(rowData) }}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n        <button className=\"btn btn-delete-customer\" onClick={() => { this.openDeleteModal(rowData) }}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  actionAddressTemplate = (rowData) => {\r\n    return (\r\n      <div>\r\n        {rowData.address1} {rowData.address2}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  statusTemplate = (rowData) => {\r\n    return (<div style={{textAlign: 'center'}}>\r\n      {\r\n        rowData.status === 1 &&\r\n        <div className=\"pending-status\">Pending</div>\r\n      }\r\n      {\r\n        rowData.status === 0 &&\r\n        <div className=\"approve-status\">Approve</div>\r\n      }\r\n      {\r\n        rowData.status === 2 &&\r\n        <div className=\"disapprove-status\">Disapprove</div>\r\n      }\r\n    </div>);\r\n  }\r\n\r\n  createUser(){\r\n    this.props.history.push('/createUser')\r\n  }\r\n\r\n  openDeleteModal = (data) => {\r\n    this.setState({\r\n      userId: data.user_id,\r\n      openDeleteUserModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteUser = () => {\r\n    this.setState({\r\n      openDeleteUserModal: false,\r\n    });\r\n  }\r\n\r\n  openApproved = (data) => {\r\n    let appUserName = data.app_user;\r\n    if (appUserName.length > 0) {\r\n      if (userRole == '1') {\r\n        for (let item of this.state.applicationList) {\r\n          for(let app of appUserName) {\r\n            if (app.application_id == item.application_id) {\r\n              app.application_name = item.application_name;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for(let app of appUserName) {\r\n          app.application_name = this.state.applicationName;\r\n        }\r\n      }\r\n      \r\n      this.setState({\r\n        openApprovedModal: true,\r\n        selectedUserList: appUserName,\r\n        selectedUserId: data.user_id\r\n      });\r\n    } else {\r\n      this.setState({\r\n        openApprovedModal: true,\r\n        selectedUserList: appUserName,\r\n        selectedUserId: data.user_id\r\n      });\r\n    }\r\n  }\r\n\r\n  closeApproved = () => {\r\n    if (userRole == '1') {\r\n      this.setState({\r\n        openApprovedModal: false,\r\n        applicationId: '',\r\n        applicationName: '',\r\n        userName: '',\r\n        selectedUserList: [],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        openApprovedModal: false,\r\n        userName: '',\r\n        selectedUserList: [],\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  closeErrorModal = () => {\r\n    this.setState({\r\n        openErrorModal: false\r\n    });\r\n  } \r\n\r\n  validateUser(values) {\r\n    const errors = {};\r\n    if (values.applicationId == '') {\r\n      errors.applicationId = 'Please select application';\r\n    }\r\n    if (values.userName == '') {\r\n      errors.userName = 'Please enter username';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  validate(values) {\r\n    const errors = {};\r\n    if (values.selectedUserList.length === 0) {\r\n      errors.selectedUserList = 'Please select application and enter username';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  addApproved = () => {\r\n    this.setState({\r\n      isSubmitedUser: true,\r\n    }, () => {});\r\n    this.validateUser(this.state);\r\n    const errors = this.validateUser(this.state);\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      let requestData = {\r\n        UserName: this.state.userName\r\n      }\r\n      isUserAvailable = true;\r\n      this.props.checkUserName(requestData)\r\n      this.setState({\r\n        isLoader: true\r\n      });\r\n    }\r\n  }\r\n\r\n  removeApproved = (data) => {\r\n    if(this.state.selectedUserList.length == 1){\r\n      this.setState({ \r\n        selectedUserList: [],\r\n        uiRender: true\r\n      },()=>{ })\r\n    } else {\r\n      var index = this.state.selectedUserList.indexOf(data)\r\n      let removeData = this.state.selectedUserList.slice(0, index).concat(this.state.selectedUserList.slice(index + 1, this.state.selectedUserList.length));\r\n      this.setState({ \r\n        selectedUserList: removeData,\r\n        uiRender: true\r\n      },()=>{ })\r\n    }\r\n  }\r\n\r\n  actionApproveTemplate = (rowData) => {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn addmore-delete-btn\" onClick={() => this.removeApproved(rowData)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { usersList, isSubmitedUser, selectedUserList, isSubmited } = this.state;\r\n    const errorsUser = this.validateUser(this.state);\r\n    const errors = this.validate(this.state);\r\n    const Header = (<div className=\"offer_head\">Users</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Users\" header={Header} >\r\n            <div className=\"customer_content\">\r\n              <div className=\"customer_inner_content\">\r\n                <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                  <div className=\"col-md-12 customertabpanel\">\r\n                    <div className=\"administration_tab\">\r\n\r\n                      <div  className=\"row pl-pr-15px xs-pl-pr-2px\">\r\n                        <div className=\"col-sm-12 col-md-6\">\r\n                          <div className=\"heading_title\">All Users</div>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createUser()}>Create User</button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                        <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                          <DataTable value={usersList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                            <Column className=\"tableCols\" field=\"email\" header=\"Email\" sortable style={{width: '280px'}}/>\r\n                            <Column className=\"tableCols\" field=\"fullname\" header=\"Full Name\" sortable style={{width: '120px'}}/>\r\n                            <Column className=\"tableCols\" field=\"address\" header=\"Address\" body={this.actionAddressTemplate} sortable style={{width: '150px'}}/>\r\n                            <Column className=\"tableCols\" field=\"country\" header=\"Country\" sortable style={{width: '120px'}} />\r\n                            <Column className=\"tableCols\" field=\"status\"  body={this.statusTemplate} header=\"Status\" sortable style={{width: '120px'}}/>\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Approve/Disapprove\" body={this.actionTemplate} style={{width: '220px'}}/>\r\n                            <Column className=\"tableCols\" field=\"action1\" header=\"Action\" body={this.actionUpdateTemplate} style={{width: '130px'}}/>\r\n                          </DataTable>\r\n                        </div>\r\n                        <Modal open={this.state.openDeleteUserModal} onClose={this.cancelDeleteUser} center>\r\n                          <div className=\"delete-user-modal\">\r\n                            <div className=\"row\" >\r\n                                <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{width: 500}}>\r\n                                \r\n                            </div>\r\n                            <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                                <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                                    <button\r\n                                        className=\"btn delete-user-yes-btn\"\r\n                                        onClick={() => this.deleteUser() }\r\n                                        disabled={this.state.isdisabled}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col-6 col-md-6 col-sm-6\">\r\n                                    <button\r\n                                        className=\"btn delete-user-no-btn\"\r\n                                        onClick={() => this.cancelDeleteUser() }\r\n                                    >\r\n                                        No\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                          </div>\r\n                        </Modal>\r\n                        <Modal open={this.state.openApprovedModal} onClose={this.closeApproved} center>\r\n                          <div className=\"approve-user-modal\" style={{width: 600}}>\r\n                            <div className=\"row\" >\r\n                              <div className=\"approve-user-header\">Approve Users</div>\r\n                            </div>\r\n                            <div className=\"row\" >\r\n                                <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                  {\r\n                                    userRole == '1' ? \r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                            <option value=''>Select Application</option>\r\n                                            {\r\n                                                (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                    <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control\" name=\"applicationId\" value={this.state.applicationId} readOnly>\r\n                                            \r\n                                            <option value={this.state.applicationId} disabled={true}>{this.state.applicationName}</option>\r\n                                              \r\n                                        </select>\r\n                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                    </div>\r\n                                  }\r\n                                </div>\r\n                                <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"userName\" placeholder=\"Enter user name\" onChange={(e) => this.createApproved(e)} value={this.state.userName} />\r\n                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.userName}</span>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-2 col-md-2 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        {\r\n                                            <button\r\n                                            onClick={() => {\r\n                                                this.addApproved()\r\n                                            }}\r\n                                            className=\"btn addmore-btn mt0\">ADD</button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {errors && isSubmited && <span className=\"error-message\">{errors.selectedUserList}</span>}\r\n                            </div>\r\n\r\n                            {\r\n                              selectedUserList.length > 0 &&\r\n                              <div className=\"row mt-5\">\r\n                                <div className=\"col-md-12\">\r\n                                  <DataTable value={selectedUserList} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                                    <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '280px'}}/>\r\n                                    <Column className=\"tableCols\" field=\"user_name\" header=\"User Name\" sortable style={{width: '120px'}}/>\r\n                                    <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionApproveTemplate} style={{width: '130px'}}/>\r\n                                  </DataTable>\r\n                                </div>\r\n                              </div>\r\n                            }\r\n                            <Modal open={this.state.openErrorModal} onClose={this.closeErrorModal} center>\r\n                                <div className=\"error-message-user-modal\">\r\n                                    <div className=\"row\" >\r\n                                      {\r\n                                        userRole == '1' ?\r\n                                        <div className=\"error-message-user-header\"> This application already selected please choose other application </div>\r\n                                        :\r\n                                        <div className=\"error-message-user-header\"> This user already added please enter other user </div>\r\n                                      }\r\n                                    </div>\r\n                                    <div className=\"row\" style={{width: 500}}>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </Modal>\r\n                            <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                                <div className=\"col-12 col-md-12 col-sm-12\" style={{textAlign: 'center'}}>\r\n                                    <button\r\n                                      className=\"btn delete-user-yes-btn\"\r\n                                      onClick={() => this.approvedUser() }\r\n                                      disabled={this.state.isdisabled}\r\n                                    >\r\n                                      Approve\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                          </div>\r\n                        </Modal>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nUsersComponent.propTypes = {\r\n\tallUsersRes: PropTypes.any,\r\n  doUserApprovedRes: PropTypes.any,\r\n  doDeleteUserRes: PropTypes.any,\r\n  allApplicationRes: PropTypes.any,\r\n  userApproveAppRes: PropTypes.any,\r\n  checkUserRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tallUsersRes: doUserAllRes,\r\n  doUserApprovedRes: doUserApprovedRes,\r\n  doDeleteUserRes: doDeleteUserRes,\r\n\tallApplicationRes: getAllApplicationRes,\r\n\tuserApproveAppRes: doUserApproveAppRes,\r\n  checkUserRes: doCheckUserRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tgetUsers: () => dispatch(getAllUsers()),\r\n\t\tupdateUserStatus: (date) => dispatch(updateUserStatus(date)),\r\n\t\tdeleteUserRecord: (date) => dispatch(deleteUserDetails(date)),\r\n\t\tapproveAppUser: (date) => dispatch(approveAppUser(date)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n    checkUserName: (data) => dispatch(checkUserName(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UsersComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass DeleteApplicationApi {\r\n    static doDeleteApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_delete_application', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteApplicationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteApplicationApi from '../api/deleteApplicationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doDeleteApp(data) {\r\n  return {\r\n    type: types.DELETE_APPLICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteAppRes(data) {\r\n  return {\r\n    type: types.DELETE_APPLICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteApplicationRecord(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteApplicationApi.doDeleteApp(data).then(data => {\r\n        dispatch(doDeleteAppRes(data));\r\n        dispatch(doDeleteAppRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './applications.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport { deleteApplicationRecord, doDeleteAppRes } from '../../action/deleteApplicationActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\n\r\nlet isDelete = false;\r\n\r\nclass ApplicationsComponent extends React.PureComponent {\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      applicationList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        applicationList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetchAllApplication();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.allApplicationRes) {\r\n\t\t\tif (props.allApplicationRes.data && props.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (props.allApplicationRes.data.applicationList.success===true) {\r\n          this.setState({\r\n            applicationList: props.allApplicationRes.data.applicationList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteApplication) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteApplication.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchAllApplication();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goUpdateApplication = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/update-application',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n\r\n  createApp(){\r\n    this.props.history.push('/create-application')\r\n  }\r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      app_id: this.state.appId\r\n    }\r\n    this.props.deleteApplicationRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      appId: rowData.application_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        <img src={data.icon} alt='' style={{width: 50, height: 50}} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goToAdmin(rowData)}>\r\n          <span>Admin</span>\r\n        </button>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    this.props.history.push('/adminDetails',{\r\n      applicationData: data\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { applicationList } = this.state;\r\n    console.log(applicationList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Applications</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Applications\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">All Applications</div>\r\n                      </div>\r\n                      {\r\n                        userRole == '1' &&\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createApp()}>Create Application</button>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={applicationList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"Icon\" body={this.actionIconTemplate} sortable style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Admin\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nApplicationsComponent.propTypes = {\r\n\tallApplicationRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tallApplicationRes: getAllApplicationRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n\t\tdeleteApplicationRecord: (data) => dispatch(deleteApplicationRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ApplicationsComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nclass createUserApi {\r\n    static doCreateUser(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createUser', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    static fetchAllCountry() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/country_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllState(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            countryid: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/state_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllCity(data) {\r\n        console.log('state id', data);\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            stateId: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/city_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default createUserApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport createUserApi from '../api/createUserApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doCreateUser(data) {\r\n  return {\r\n    type: types.DO_CREATE_USER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateUserRes(data) {\r\n  return {\r\n    type: types.DO_CREATE_USER_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateUser(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.doCreateUser(data).then(data => {\r\n        \r\n        dispatch(doCreateUserRes(data));\r\n        dispatch(doCreateUserRes(null));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.success === false){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCountry() {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY,\r\n  };\r\n}\r\n\r\nexport function doAllCountryRes(data) {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCountry() {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.fetchAllCountry().then(data => {\r\n        dispatch(doAllCountryRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllState(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllStateRes(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllState(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.fetchAllState(data).then(data => {\r\n        dispatch(doAllStateRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCity(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllCityRes(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCity(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.fetchAllCity(data).then(data => {\r\n        dispatch(doAllCityRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.email === '') {\r\n    errors.email = 'Please enter email';\r\n  }\r\n  if (values.password === '') {\r\n    errors.password = 'Please enter password';\r\n  }\r\n  if (values.fullname === '') {\r\n    errors.fullname = 'Please enter fullname';\r\n  }\r\n  if (values.company === '') {\r\n    errors.company = 'Please enter company';\r\n  }\r\n  if (values.address1 === '') {\r\n    errors.address1 = 'Please enter address 1';\r\n  }\r\n  if (values.address2 === '') {\r\n    errors.address2 = 'Please enter address 2';\r\n  }\r\n  if (values.country === '') {\r\n    errors.country = 'Please select country';\r\n  }\r\n  if (values.state === '') {\r\n    errors.state = 'Please select state';\r\n  }\r\n  if (values.city === '') {\r\n    errors.city = 'Please select city';\r\n  }\r\n  if (values.zipcode === '') {\r\n    errors.zipcode = 'Please enter zip code';\r\n  }\r\n  // if (values.selectedUserList.length === 0) {\r\n  //   errors.selectedUserList = 'Please select application and enter username';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './createUser.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { submitCreateUser, doCreateUserRes, getAllCountry, getAllState, getAllCity, doAllCountryRes, doAllCityRes, doAllStateRes } from '../../action/createUserActions';\r\nimport { checkUserName, doCheckUserRes } from '../../action/checkUserActions';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nlet userRole = getItem('userRoleId');\r\nlet isUserAvailable = false;\r\nclass CreateUserComponent extends React.PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        isUserAvailable = false;\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            isSubmitedUser: false,\r\n            fullname: '',\r\n            email: '',\r\n            password: '',\r\n            company: '',\r\n            address1: '',\r\n            address2: '',\r\n            country: '',\r\n            state: '',\r\n            city: '',\r\n            zipcode: '',\r\n            countryList: [],\r\n            stateList: [],\r\n            cityList: [],\r\n            selectedCountry: null,\r\n            selectedState: null,\r\n            selectedCity: null,\r\n            applicationList: [],\r\n            applicationId: '',\r\n            applicationName: '',\r\n            userName: '',\r\n            selectedUserList: [],\r\n            openErrorModal: false,\r\n            showPasshword: false, \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userAppGroup = getItem('adminAppId');\r\n        if (userAppGroup !== null) {\r\n            this.setState({\r\n                isLoader: false,\r\n                applicationId: getItem('adminAppId'),\r\n                applicationName: getItem('adminAppName'),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isLoader: false,\r\n            });\r\n        }\r\n        this.props.getAllCountry();\r\n        this.props.fetchAllApplication();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.allApplicationRes) {\r\n\t\t\tif (nextProps.allApplicationRes.data && nextProps.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (nextProps.allApplicationRes.data.applicationList.success===true) {\r\n                    this.setState({\r\n                        applicationList: nextProps.allApplicationRes.data.applicationList.data\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllStateRes){\r\n            if(nextProps.doAllStateRes.data.stateList ){\r\n                if(nextProps.doAllStateRes.data.stateList.success === true){\r\n                    this.setState({\r\n                        stateList: nextProps.doAllStateRes.data.stateList.stateList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCityRes){\r\n            if(nextProps.doAllCityRes.data.cityList ){\r\n                if(nextProps.doAllCityRes.data.cityList.success === true){\r\n                    this.setState({\r\n                        cityList: nextProps.doAllCityRes.data.cityList.citylist\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.createUserRes){\r\n            if(nextProps.createUserRes.data.createUser ){\r\n                if(nextProps.createUserRes.data.createUser.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/users');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.checkUserRes){\r\n            if(nextProps.checkUserRes.data.checkUser ){\r\n                if(nextProps.checkUserRes.data.checkUser.success === true && isUserAvailable) {\r\n                    isUserAvailable = false;\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    if (this.state.selectedUserList.length > 0) {\r\n                        let isTrue = 0;\r\n                        if (userRole == '1') {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.application_id == this.state.applicationId) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.user_name == this.state.userName) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (isTrue == 0) {\r\n                            let localArr = this.state.selectedUserList;\r\n                            let appName = '';\r\n                            if (userRole == '1') {\r\n                                for (let item of this.state.applicationList) {\r\n                                    if (Number(this.state.applicationId) == item.application_id) {\r\n                                        appName = item.application_name;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                appName = this.state.applicationName\r\n                            }\r\n                            localArr.push({\r\n                                application_id: this.state.applicationId,\r\n                                application_name: appName,\r\n                                user_name: this.state.userName,\r\n                            });\r\n                            this.setState({\r\n                                selectedUserList: localArr,\r\n                            }, () => {\r\n                                if (userRole == '1') {\r\n                                    this.setState({\r\n                                        applicationId: '',\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                } else {\r\n                                    this.setState({\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                }\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                openErrorModal: true\r\n                            });\r\n                        }\r\n                    } else {\r\n                        let localArr = this.state.selectedUserList;\r\n                        let appName = '';\r\n                        if (userRole == '1') {\r\n                            for (let item of this.state.applicationList) {\r\n                                if (Number(this.state.applicationId) == item.application_id) {\r\n                                    appName = item.application_name;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            appName = this.state.applicationName\r\n                        }\r\n                        \r\n                        localArr.push({\r\n                            application_id: this.state.applicationId,\r\n                            application_name: appName,\r\n                            user_name: this.state.userName,\r\n                        });\r\n                        this.setState({\r\n                            selectedUserList: localArr,\r\n                        }, () => {\r\n                            if (userRole == '1') {\r\n                                this.setState({\r\n                                    applicationId: '',\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            } else {\r\n                                this.setState({\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if(nextProps.checkUserRes.data.checkUser.success === false && isUserAvailable) {\r\n                    isUserAvailable = false;\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    Swal.fire({\r\n                        title: nextProps.checkUserRes.data.checkUser.message,\r\n                        type: 'info',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    });\r\n                }\r\n            } else {\r\n                setTimeout(() => { this.setState({\r\n                    isLoader: false\r\n                }); }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    closeErrorModal = () => {\r\n        this.setState({\r\n            openErrorModal: false\r\n        });\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.push('/users');\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        let selectedUsr = this.state.selectedUserList;\r\n        for (var i = 0; i < selectedUsr.length; i++) {\r\n            var o = selectedUsr[i];\r\n            delete o.application_name;\r\n          }\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                fullname: this.state.fullname,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                company: this.state.company,\r\n                address1: this.state.address1,\r\n                address2: this.state.address2,\r\n                country: this.state.country,\r\n                state: this.state.state,\r\n                city: this.state.city,\r\n                zipcode: this.state.zipcode,\r\n                create_user: selectedUsr\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n        this.props.getAllState(item.original.id)\r\n    }\r\n\r\n    stateChange = (item) => {\r\n        this.setState({\r\n            selectedState: item,\r\n            state: item.value\r\n        });\r\n        this.props.getAllCity(item.original.state_id)\r\n\r\n    }\r\n\r\n    cityChange = (item) => {\r\n        this.setState({\r\n            selectedCity: item,\r\n            city: item.value\r\n        });\r\n    }\r\n\r\n    createApproved(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    validateUser(values) {\r\n        const errors = {};\r\n        if (values.applicationId == '') {\r\n            errors.applicationId = 'Please select application';\r\n        }\r\n        if (values.userName == '') {\r\n            errors.userName = 'Please enter username';\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    addApproved = () => {\r\n        this.setState({\r\n            isSubmitedUser: true,\r\n        }, () => { });\r\n        this.validateUser(this.state);\r\n        const errors = this.validateUser(this.state);\r\n          \r\n        if (Object.keys(errors).length === 0) {\r\n            let requestData = {\r\n                UserName: this.state.userName\r\n            }\r\n            isUserAvailable = true;\r\n            this.props.checkUserName(requestData)\r\n            this.setState({\r\n                isLoader: true\r\n            });\r\n            \r\n        }\r\n    }\r\n\r\n    removeApproved = (data) => {\r\n        if(this.state.selectedUserList.length == 1){\r\n            this.setState({ \r\n                selectedUserList: []\r\n            },()=>{ })\r\n        }else{\r\n            var index = this.state.selectedUserList.indexOf(data);\r\n            let filteredItems = this.state.selectedUserList.slice(0, index).concat(this.state.selectedUserList.slice(index + 1, this.state.selectedUserList.length));\r\n            this.setState({ \r\n                selectedUserList: filteredItems\r\n            },()=>{ });\r\n        }\r\n    }\r\n\r\n    actionTemplate = (rowData) => {\r\n        return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <button className=\"btn btn-delete-create-user\" onClick={() => this.removeApproved(rowData)}>\r\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showHidePass = () => {\r\n        this.setState({\r\n            showPasshword: !this.state.showPasshword\r\n        },()=>{ })\r\n    }\r\n\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const errorsUser = this.validateUser(this.state);\r\n        const { isSubmited, countryList, stateList, cityList, isSubmitedUser } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const stateListOptions = [];\r\n        if (stateList && stateList.length > 0) {\r\n            stateList.map((item) => {\r\n                stateListOptions.push({ value: item.state_name, label: item.state_name, original: item });\r\n                return (\r\n                <option value={item.state_name} id={item.state_id} key={item.state_id}>\r\n                    {item.state_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const cityListOptions = [];\r\n        if (cityList && cityList.length > 0) {\r\n            cityList.map((item) => {\r\n                cityListOptions.push({ value: item.city_name, label: item.city_name, original: item });\r\n                return (\r\n                <option value={item.city_name} id={item.city_id} key={item.city_id}>\r\n                    {item.city_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n            <LayoutWrapper title=\"Create User\" header={Header} >\r\n                <Loader show={this.state.isLoader} message={spinner}>\r\n                    <div className=\"edit_profile_content_wrapper\">\r\n                        <div className=\"createprofile_heading\">\r\n                            <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                <span className=\"createprofile_go_back\">Back to Users</span>\r\n                            </div>\r\n                            <span className=\"offering_detail_title\">Create User</span>\r\n                        </div>\r\n                        <div className=\"editprofile_content\">\r\n                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter full name\" name=\"fullname\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.fullname}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.email}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type={this.state.showPasshword ? \"text\" : \"password\"} className=\"form-control\" placeholder=\"Enter password\" name=\"password\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {\r\n                                                        this.state.showPasshword &&\r\n                                                        <p onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </p>\r\n                                                    }\r\n                                                    {\r\n                                                        !this.state.showPasshword &&\r\n                                                        <span onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye-slash eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </span>\r\n                                                    }\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.password}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter company name\" name=\"company\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.company}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 1\" name=\"address1\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address1}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 2 (Optional)\" name=\"address2\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address2}</span>}\r\n                                                </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Enter ZipCode\" name=\"zipcode\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.zipcode}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCountry}\r\n                                                        onChange={this.countryChange}\r\n                                                        options={countryListOptions}\r\n                                                        name=\"country\"\r\n                                                        placeholder=\"Select Country\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.country}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedState}\r\n                                                        onChange={this.stateChange}\r\n                                                        options={stateListOptions}\r\n                                                        name=\"state\"\r\n                                                        placeholder=\"Select State\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.state}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCity}\r\n                                                        onChange={this.cityChange}\r\n                                                        options={cityListOptions}\r\n                                                        name=\"city\"\r\n                                                        placeholder=\"Select City\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.city}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-md-6 col-sm-12\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                \r\n                                                {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                                            <option value=''>Select Application</option>\r\n                                                            {\r\n                                                                (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                                    <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                                )\r\n                                                            }\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" value={this.state.applicationId} readOnly>\r\n                                                            <option value={this.state.applicationId} disabled={true}>{this.state.applicationName}</option>\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"userName\" placeholder=\"Enter user name\" onChange={(e) => this.createApproved(e)} value={this.state.userName} />\r\n                                                    {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.userName}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-2 col-md-2 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    {\r\n                                                        <button\r\n                                                        onClick={() => {\r\n                                                            this.addApproved()\r\n                                                        }}\r\n                                                        className=\"btn addmore-btn mt0\">ADD</button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.selectedUserList.length > 0 &&\r\n                                        <div className=\"row mt-5\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <DataTable value={this.state.selectedUserList} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                                                    <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '280px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"user_name\" header=\"User Name\" sortable style={{width: '120px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '130px'}}/>\r\n                                                </DataTable>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    \r\n                                    <Modal open={this.state.openErrorModal} onClose={this.closeErrorModal} center>\r\n                                        <div className=\"error-message-user-modal\">\r\n                                            <div className=\"row\" >\r\n                                                {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"error-message-user-header\"> This application already selected please choose other application </div>\r\n                                                    :\r\n                                                    <div className=\"error-message-user-header\"> This user already added please enter other user </div>\r\n\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"row\" style={{width: 500}}>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal>\r\n                                    <div>\r\n                                        <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Loader>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateUserComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createUserRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    doAllCityRes: PropTypes.any,\r\n    doAllStateRes: PropTypes.any,\r\n    allApplicationRes: PropTypes.any,\r\n    checkUserRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createUserRes: doCreateUserRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    doAllCityRes: doAllCityRes,\r\n    doAllStateRes: doAllStateRes,\r\n    allApplicationRes: getAllApplicationRes,\r\n    checkUserRes: doCheckUserRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateUser(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllState: (data) => dispatch(getAllState(data)),\r\n        getAllCity: (data) => dispatch(getAllCity(data)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n        checkUserName: (data) => dispatch(checkUserName(data)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateUserComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nclass editUserApi {\r\n    static doEditUser(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_update_userProfile', body).then(response => {\r\n                if(response.ok === true){\r\n                    Swal.fire({\r\n                        title: 'User update successful',\r\n                        type: 'success',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    })\r\n                }\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default editUserApi;","import * as types from './actionTypes';\r\nimport editUserApi from '../api/editUserApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doEditUser(data) {\r\n  return {\r\n    type: types.DO_UPDATE_USER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doEditUserRes(data) {\r\n  return {\r\n    type: types.DO_UPDATE_USER_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateUser(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      editUserApi.doEditUser(data).then(data => {\r\n        dispatch(doEditUserRes(data));\r\n        dispatch(doEditUserRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.email === '') {\r\n    errors.email = 'Please enter email';\r\n  }\r\n  if (values.fullname === '') {\r\n    errors.fullname = 'Please enter fullname';\r\n  }\r\n  if (values.company === '') {\r\n    errors.company = 'Please enter company';\r\n  }\r\n  if (values.address1 === '') {\r\n    errors.address1 = 'Please enter address 1';\r\n  }\r\n  if (values.address2 === '') {\r\n    errors.address2 = 'Please enter address 2';\r\n  }\r\n  if (values.country === '') {\r\n    errors.country = 'Please select country';\r\n  }\r\n  if (values.state === '') {\r\n    errors.state = 'Please select state';\r\n  }\r\n  if (values.city === '') {\r\n    errors.city = 'Please select city';\r\n  }\r\n  if (values.zipcode === '') {\r\n    errors.zipcode = 'Please enter zip code';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './editUser.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { submitUpdateUser, doEditUserRes } from '../../action/editUserActions';\r\nimport { getAllCountry, getAllState, getAllCity, doAllCountryRes, doAllCityRes, doAllStateRes } from '../../action/createUserActions';\r\nimport { checkUserName, doCheckUserRes } from '../../action/checkUserActions';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nlet isCountry = false;\r\nlet isState = false;\r\nlet isCity = false;\r\nlet isApplication = false;\r\nlet userRole = getItem('userRoleId');\r\nlet isUserAvailable = false;\r\n\r\nclass EditUserComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        isCountry = false;\r\n        isState = false;\r\n        isCity = false;\r\n        isApplication = false;\r\n        isUserAvailable = false;\r\n        this.state = {\r\n            isLoader: true,\r\n            userData: null,\r\n            isSubmited: false,\r\n            fullname: '',\r\n            email: '',\r\n            company: '',\r\n            address1: '',\r\n            address2: '',\r\n            country: '',\r\n            state: '',\r\n            city: '',\r\n            zipcode: '',\r\n            countryList: [],\r\n            stateList: [],\r\n            cityList: [],\r\n            selectedCountry: null,\r\n            selectedState: null,\r\n            selectedCity: null,\r\n            applicationList: [],\r\n            applicationId: '',\r\n            applicationName: '',\r\n            userName: '',\r\n            selectedUserList: [],\r\n            openErrorModal: false,\r\n            isSubmitedUser: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userAppGroup = getItem('adminAppId');\r\n        if (userAppGroup !== null) {\r\n            this.setState({\r\n                applicationId: getItem('adminAppId'),\r\n                applicationName: getItem('adminAppName'),\r\n            });\r\n        }\r\n        this.props.getAllCountry();\r\n        this.props.fetchAllApplication();\r\n        isCountry = true;\r\n        isApplication = true;\r\n        const userDetails = this.props.location.state.userData;\r\n        this.setState({\r\n            userData: userDetails,\r\n        }, () => {\r\n            if (userRole == '2') {\r\n                if (this.state.userData.app_user.length > 0) {\r\n                    for (let item of this.state.userData.app_user) {\r\n                        item.application_name =  getItem('adminAppName');\r\n                    }\r\n                }\r\n            }\r\n            this.setState({\r\n                fullname: this.state.userData.fullname,\r\n                email: this.state.userData.email,\r\n                company: this.state.userData.company,\r\n                address1: this.state.userData.address1,\r\n                address2: this.state.userData.address2,\r\n                country: this.state.userData.country,\r\n                state: this.state.userData.state,\r\n                city: this.state.userData.city,\r\n                zipcode: this.state.userData.zipcode,\r\n                selectedUserList: this.state.userData.app_user,\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.allApplicationRes) {\r\n\t\t\tif (nextProps.allApplicationRes.data && nextProps.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (nextProps.allApplicationRes.data.applicationList.success===true  && isApplication) {\r\n                    isApplication = false;\r\n                    this.setState({\r\n                        applicationList: nextProps.allApplicationRes.data.applicationList.data\r\n                    }, () => {\r\n                        if (this.state.userData.app_user.length > 0) {\r\n                            let appUser = this.state.selectedUserList;\r\n                            for (let item of this.state.applicationList) {\r\n                                for (let items of appUser) {\r\n                                    if (Number(items.application_id) === item.application_id) {\r\n                                        items.application_name = item.application_name\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.setState({\r\n                                selectedUserList: appUser,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true && isCountry){\r\n                    isCountry = false;\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    }, () => {\r\n                        // this.state.countryList\r\n                        if (this.state.country !== '') {\r\n                            for (let item of this.state.countryList) {\r\n                                if (this.state.userData.country.toLowerCase() === item.country_name.toLowerCase()) {\r\n                                    const selectedCountryObject = {\r\n                                        value: item.id,\r\n                                        label: this.state.country,\r\n                                    };\r\n                                    this.setState({\r\n                                        selectedCountry: selectedCountryObject,\r\n                                    }, () => {});\r\n                                    this.props.getAllState(item.id);\r\n                                    isState = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllStateRes){\r\n            if(nextProps.doAllStateRes.data.stateList ){\r\n                if(nextProps.doAllStateRes.data.stateList.success === true && isState){\r\n                    isState = false;\r\n                    this.setState({\r\n                        stateList: nextProps.doAllStateRes.data.stateList.stateList\r\n                    }, () => {\r\n                        if (this.state.state !== '') {\r\n                            for (let item of this.state.stateList) {\r\n                                if (this.state.state.toLowerCase() === item.state_name.toLowerCase()) {\r\n                                    const selectedStateObject = {\r\n                                        value: item.state_id,\r\n                                        label: this.state.state,\r\n                                    };\r\n                                    this.setState({\r\n                                        selectedState: selectedStateObject,\r\n                                    }, () => {});\r\n                                    this.props.getAllCity(item.state_id)\r\n                                    isCity = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCityRes){\r\n            if(nextProps.doAllCityRes.data.cityList ){\r\n                if(nextProps.doAllCityRes.data.cityList.success === true && isCity){\r\n                    isCity = false;\r\n                    this.setState({\r\n                        cityList: nextProps.doAllCityRes.data.cityList.citylist\r\n                    }, () => {\r\n                        if (this.state.city !== '') {\r\n                            for (let item of this.state.cityList) {\r\n                                if (this.state.city.toLowerCase() === item.city_name.toLowerCase()) {\r\n                                    const selectedCityObject = {\r\n                                        value: item.city_id,\r\n                                        label: this.state.city,\r\n                                    };\r\n                                    this.setState({\r\n                                        selectedCity: selectedCityObject,\r\n                                    }, () => {});\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (nextProps.doEditUserRes) {\r\n\t\t\tif (nextProps.doEditUserRes.data && nextProps.doEditUserRes.data.updateUser) {\r\n\t\t\t\tif (nextProps.doEditUserRes.data.updateUser.success === true) {\r\n                    this.setState({\r\n                        isLoader: false,\r\n                    });\r\n                    this.props.history.push('/users');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(nextProps.checkUserRes){\r\n            if(nextProps.checkUserRes.data.checkUser ){\r\n                if(nextProps.checkUserRes.data.checkUser.success === true && isUserAvailable) {\r\n                    isUserAvailable = false;\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    if (this.state.selectedUserList.length > 0) {\r\n                        let isTrue = 0;\r\n                        if (userRole == '1') {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.application_id == this.state.applicationId) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.user_name == this.state.userName) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (isTrue === 0) {\r\n                            let localArr = this.state.selectedUserList;\r\n                            let appName = '';\r\n                            if (userRole == '1') {\r\n                                for (let item of this.state.applicationList) {\r\n                                    if (Number(this.state.applicationId) == item.application_id) {\r\n                                        appName = item.application_name;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                appName = this.state.applicationName\r\n                            }\r\n                            localArr.push({\r\n                                application_id: this.state.applicationId,\r\n                                application_name: appName,\r\n                                user_name: this.state.userName,\r\n                            });\r\n                            this.setState({\r\n                                selectedUserList: localArr,\r\n                            }, () => {\r\n                                if (userRole == '1') {\r\n                                    this.setState({\r\n                                        applicationId: '',\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                } else {\r\n                                    this.setState({\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                }\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                openErrorModal: true\r\n                            });\r\n                        }\r\n                    } else {\r\n                        let localArr = this.state.selectedUserList;\r\n                        let appName = '';\r\n                        if (userRole == '1') {\r\n                            for (let item of this.state.applicationList) {\r\n                                if (Number(this.state.applicationId) == item.application_id) {\r\n                                    appName = item.application_name;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            appName = this.state.applicationName\r\n                        }\r\n                        localArr.push({\r\n                            application_id: this.state.applicationId,\r\n                            application_name: appName,\r\n                            user_name: this.state.userName,\r\n                        });\r\n                        this.setState({\r\n                            selectedUserList: localArr,\r\n                        }, () => {\r\n                            if (userRole == '1') {\r\n                                this.setState({\r\n                                    applicationId: '',\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            } else {\r\n                                this.setState({\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if(nextProps.checkUserRes.data.checkUser.success === false && isUserAvailable) {\r\n                    isUserAvailable = false;\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    Swal.fire({\r\n                        title: nextProps.checkUserRes.data.checkUser.message,\r\n                        type: 'info',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    });\r\n                }\r\n            } else {\r\n                setTimeout(() => { this.setState({\r\n                    isLoader: false\r\n                }); }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    closeErrorModal = () => {\r\n        this.setState({\r\n            openErrorModal: false\r\n        });\r\n    }\r\n\r\n    handleFormSubmit = () => {\r\n        this.setState({\r\n            isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedUsr = this.state.selectedUserList;\r\n            for (var i = 0; i < selectedUsr.length; i++) {\r\n                var o = selectedUsr[i];\r\n                delete o.application_name;\r\n            }\r\n            let payloadReq = {\r\n                user_id: this.state.userData.user_id,\r\n                fullname: this.state.fullname,\r\n                company: this.state.company,\r\n                address1: this.state.address1,\r\n                address2: this.state.address2,\r\n                country: this.state.country,\r\n                state: this.state.state,\r\n                city: this.state.city,\r\n                zipcode: this.state.zipcode,\r\n                create_user: selectedUsr,\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n        this.props.getAllState(item.original.id)\r\n        isState = true; \r\n    }\r\n\r\n    stateChange = (item) => {\r\n        this.setState({\r\n            selectedState: item,\r\n            state: item.value\r\n        });\r\n        this.props.getAllCity(item.original.state_id)\r\n        isCity = true;\r\n    }\r\n\r\n    cityChange = (item) => {\r\n        this.setState({\r\n            selectedCity: item,\r\n            city: item.value\r\n        });\r\n    }\r\n\r\n    createApproved(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    validateUser(values) {\r\n        const errors = {};\r\n        if (values.applicationId === '') {\r\n            errors.applicationId = 'Please select application';\r\n        }\r\n        if (values.userName === '') {\r\n            errors.userName = 'Please enter username';\r\n        }\r\n        return errors;\r\n     }     \r\n\r\n    addApproved = () => {\r\n        this.setState({\r\n            isSubmitedUser: true,\r\n        }, () => { });\r\n        this.validateUser(this.state);\r\n        const errors = this.validateUser(this.state);\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            let requestData = {\r\n                UserName: this.state.userName\r\n            }\r\n            isUserAvailable = true;\r\n            this.props.checkUserName(requestData)\r\n            this.setState({\r\n                isLoader: true\r\n            });\r\n            \r\n        }        \r\n    }\r\n\r\n    removeApproved = (data) => {\r\n        if(this.state.selectedUserList.length == 1){\r\n            this.setState({ \r\n                selectedUserList: []\r\n            },()=>{ })\r\n        } else {\r\n            var index = this.state.selectedUserList.indexOf(data)\r\n            let removeData = this.state.selectedUserList.slice(0, index).concat(this.state.selectedUserList.slice(index + 1, this.state.selectedUserList.length));\r\n            \r\n            this.setState({ \r\n                selectedUserList: removeData\r\n            },()=>{ })\r\n        }\r\n    }\r\n\r\n    actionTemplate = (rowData) => {\r\n        return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <button className=\"btn btn-delete-update-user\" onClick={() => this.removeApproved(rowData)}>\r\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Edit Customer</div>);        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const errorsUser = this.validateUser(this.state);\r\n        const { isSubmited, countryList, stateList, cityList, isSubmitedUser } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const stateListOptions = [];\r\n        if (stateList && stateList.length > 0) {\r\n            stateList.map((item) => {\r\n                stateListOptions.push({ value: item.state_name, label: item.state_name, original: item });\r\n                return (\r\n                <option value={item.state_name} id={item.state_id} key={item.state_id}>\r\n                    {item.state_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const cityListOptions = [];\r\n        if (cityList && cityList.length > 0) {\r\n            cityList.map((item) => {\r\n                cityListOptions.push({ value: item.city_name, label: item.city_name, original: item });\r\n                return (\r\n                <option value={item.city_name} id={item.city_id} key={item.city_id}>\r\n                    {item.city_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <LayoutWrapper title=\"Update User\" header={Header} >\r\n                <Loader show={this.state.isLoader} message={spinner}>\r\n                    <div className=\"edit_profile_content_wrapper\">\r\n                        <div className=\"createprofile_heading\">\r\n                            <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                <span className=\"createprofile_go_back\">Back to Users</span>\r\n                            </div>\r\n                            <span className=\"offering_detail_title\">Update User</span>\r\n                        </div>\r\n                        <div className=\"editprofile_content\">\r\n                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Full Name</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter full name\" name=\"fullname\" onChange={(e) => this.handleChange(e)} value={this.state.fullname} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.fullname}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email</label>\r\n                                                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={(e) => this.handleChange(e)} value={this.state.email} disabled/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.email}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Company Name</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter company name\" name=\"company\" onChange={(e) => this.handleChange(e)} value={this.state.company} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.company}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address 1</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 1\" name=\"address1\" onChange={(e) => this.handleChange(e)} value={this.state.address1}/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address1}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address 2</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 2\" name=\"address2\" onChange={(e) => this.handleChange(e)}  value={this.state.address2}/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address2}</span>}\r\n                                                </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Zip Code</label>\r\n                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Enter ZipCode\" name=\"zipcode\" onChange={(e) => this.handleChange(e)} value={this.state.zipcode}/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.zipcode}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Country</label>\r\n                                                    <Select\r\n                                                        value={this.state.selectedCountry}\r\n                                                        onChange={this.countryChange}\r\n                                                        options={countryListOptions}\r\n                                                        name=\"country\"\r\n                                                        placeholder=\"Select Country\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.country}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>State</label>\r\n                                                    <Select\r\n                                                        value={this.state.selectedState}\r\n                                                        onChange={this.stateChange}\r\n                                                        options={stateListOptions}\r\n                                                        name=\"state\"\r\n                                                        placeholder=\"Select State\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.state}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>City</label>\r\n                                                    <Select\r\n                                                        value={this.state.selectedCity}\r\n                                                        onChange={this.cityChange}\r\n                                                        options={cityListOptions}\r\n                                                        name=\"city\"\r\n                                                        placeholder=\"Select City\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.city}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-md-6 col-sm-12\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                {/* <div className=\"form-group\">\r\n                                                    <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                                        <option value=''>Select Application</option>\r\n                                                        {\r\n                                                            (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                                <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                            )\r\n                                                        }\r\n                                                    </select>\r\n                                                    {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                </div> */}\r\n                                                {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                                            <option value=''>Select Application</option>\r\n                                                            {\r\n                                                                (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                                    <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                                )\r\n                                                            }\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" value={this.state.applicationId} readOnly>\r\n                                                            <option value={this.state.applicationId} disabled={true}>{this.state.applicationName}</option>\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"userName\" placeholder=\"Enter user name\" onChange={(e) => this.createApproved(e)} value={this.state.userName} />\r\n                                                    {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.userName}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-2 col-md-2 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    {\r\n                                                        <button\r\n                                                        onClick={() => {\r\n                                                            this.addApproved()\r\n                                                        }}\r\n                                                        className=\"btn addmore-btn mt0\">ADD</button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.selectedUserList.length > 0 &&\r\n                                        <div className=\"row mt-5\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <DataTable value={this.state.selectedUserList} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                                                    <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '280px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"user_name\" header=\"User Name\" sortable style={{width: '120px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '130px'}}/>\r\n                                                </DataTable>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    \r\n                                    <Modal open={this.state.openErrorModal} onClose={this.closeErrorModal} center>\r\n                                        <div className=\"error-message-user-modal\">\r\n                                            <div className=\"row\" >\r\n                                            {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"error-message-user-header\"> This application already selected please choose other application </div>\r\n                                                    :\r\n                                                    <div className=\"error-message-user-header\"> This user already added please enter other user </div>\r\n\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"row\" style={{width: 500}}>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal>\r\n                                    <div>\r\n                                        <button onClick={() => this.handleFormSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Loader>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nEditUserComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    doEditUserRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    doAllCityRes: PropTypes.any,\r\n    doAllStateRes: PropTypes.any,\r\n    allApplicationRes: PropTypes.any,\r\n    checkUserRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    doEditUserRes: doEditUserRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    doAllCityRes: doAllCityRes,\r\n    doAllStateRes: doAllStateRes,\r\n\tallApplicationRes: getAllApplicationRes,\r\n    checkUserRes: doCheckUserRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateUser(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllState: (data) => dispatch(getAllState(data)),\r\n        getAllCity: (data) => dispatch(getAllCity(data)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n        checkUserName: (data) => dispatch(checkUserName(data)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(EditUserComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass CreateApplicationApi {\r\n    static doCreateApplication(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/application_management', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateApplicationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport CreateApplicationApi from '../api/createApplicationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doCreateApplication(data) {\r\n  return {\r\n    type: types.CREATE_APPLICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateApplicationRes(data) {\r\n  return {\r\n    type: types.CREATE_APPLICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateApplication(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      CreateApplicationApi.doCreateApplication(data).then(data => {\r\n        dispatch(doCreateApplicationRes(data));\r\n        dispatch(doCreateApplicationRes(null));\r\n        if (data.success === true) {\r\n          Swal.fire({\r\n            title: 'Application created successfully',\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if (data.success === false) {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UploadAppIconApi {\r\n    static doUploadAppIcon(file) {\r\n        console.log('file', file[0]);\r\n        const TOKEN = getItem('auth_token');\r\n        const data = new FormData();\r\n        data.append('file', file[0]);\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                mimeType: 'multipart/form-data',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: data\r\n            }\r\n            return fetch(BASE_URL + '/file_upload', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UploadAppIconApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UploadAppIconApi from '../api/uploadAppIconApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUploadAppIcon(data) {\r\n  return {\r\n    type: types.UPLOAD_APPLICATION_ICON,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUploadAppIconRes(data) {\r\n  return {\r\n    type: types.UPLOAD_APPLICATION_ICON_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function uploadAppIcon(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UploadAppIconApi.doUploadAppIcon(data).then(data => {\r\n        dispatch(doUploadAppIconRes(data));\r\n        dispatch(doUploadAppIconRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === null) {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './createApplication.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitCreateApplication, doCreateApplicationRes } from '../../action/createApplicationActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nclass CreateApplicationComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getAllCountry();\r\n        // this.props.getAllUsers();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createAppRes){\r\n            if(nextProps.createAppRes.data.createApplication ){\r\n                if(nextProps.createAppRes.data.createApplication.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/applications');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/applications');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedCon = [];\r\n            for (let item of this.state.selectedCountry) {\r\n                selectedCon.push(item.value)\r\n            }\r\n            let payloadReq = {\r\n                applicationName: this.state.applicationName,\r\n                icon: this.state.icon,\r\n                selectedCountries: selectedCon.join(),\r\n                selectedUser: '',\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item\r\n        });\r\n    }\r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Application</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Create Application</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter application name\" name=\"applicationName\" onChange={(e) => this.handleChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.applicationName}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"file\" className=\"form-control\" name=\"icon\" accept=\"image/*\" onChange={(e) => this.handleFileChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedUser}\r\n                                                            onChange={this.userChange}\r\n                                                            options={userListOptions}\r\n                                                            name=\"selectedUser\"\r\n                                                            placeholder=\"Select users\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateApplicationComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createAppRes: doCreateApplicationRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateApplication(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateApplicationComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UpdateApplicationApi {\r\n    static doUpdateApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_update_app', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateApplicationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UpdateApplicationApi from '../api/updateApplicationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUpdateApp(data) {\r\n  return {\r\n    type: types.UPDATE_APPLICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUpdateAppRes(data) {\r\n  return {\r\n    type: types.UPDATE_APPLICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateApplication(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UpdateApplicationApi.doUpdateApp(data).then(data => {\r\n        dispatch(doUpdateAppRes(data));\r\n        dispatch(doUpdateAppRes(null));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n              title: 'Application updated successfully',\r\n              type: 'success',\r\n              confirmButtonText: 'OK',\r\n              allowOutsideClick: false,\r\n              timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === '') {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  if (values.selectedUser === '') {\r\n    errors.selectedUser = 'Please select Users';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// import { reduxForm } from 'redux-form';\r\nimport './updateApplication.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitUpdateApplication, doUpdateAppRes } from '../../action/updateApplicationActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nclass UpdateApplicationComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countries: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            file: null,\r\n            appData: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // Get country list //\r\n        this.props.getAllCountry();\r\n        const appDetails = this.props.location.state.appData;\r\n        this.setState({\r\n            appData: appDetails,\r\n        }, () => {\r\n            this.setState({\r\n                applicationName: this.state.appData.application_name,\r\n                icon: this.state.appData.icon,\r\n                countries: this.state.appData.selected_countries\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    }, () => {\r\n                        if (this.state.countries !== '') {\r\n                            let selectedcn = [];\r\n                            let countryD = this.state.countries.split(',');\r\n                            for (let item of this.state.countryList) {\r\n                                for (let cn of countryD) {\r\n                                    if (cn === item.country_name) {\r\n                                        selectedcn.push({\r\n                                            value: item.country_name,\r\n                                            label: item.country_name,\r\n                                            original: item\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.setState({\r\n                                selectedCountry: selectedcn,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.updateAppRes){\r\n            if(nextProps.updateAppRes.data.uploadApplication ){\r\n                if(nextProps.updateAppRes.data.uploadApplication.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/applications');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/applications');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedCou = [];\r\n            for (let item of this.state.selectedCountry) {\r\n                selectedCou.push(item.value)\r\n            }\r\n            let payloadReq = {\r\n                app_id: this.state.appData.application_id,\r\n                applicationName: this.state.applicationName,\r\n                icon: this.state.icon,\r\n                selectedCountries: selectedCou.join(),\r\n                selectedUser: '',\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Update Application</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Application</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Update Application</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter application name\" name=\"applicationName\" onChange={(e) => this.handleChange(e)} value={this.state.applicationName} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.applicationName}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <input type=\"file\" className=\"form-control\" name=\"icon\" accept=\"image/*\" onChange={(e) => this.handleFileChange(e)} />\r\n                                                                {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateApplicationComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    updateAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    updateAppRes: doUpdateAppRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateApplication(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UpdateApplicationComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass usersSearchApi {  \r\n    static doUserSearchAll(data) {\r\n        let payload = {\r\n            user_name: data\r\n        }\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body:JSON.stringify(payload)\r\n            }\r\n            return fetch(BASE_URL + '/admin_search_user', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default usersSearchApi;","import * as types from './actionTypes';  \r\nimport usersSearchApi from '../api/userSearchApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserSearchAll(data) {\r\n\r\n  return {\r\n    type: types.DO_ALL_SEARCH_USERS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUserAllSearchRes(data) {  \r\n  return {\r\n    type: types.DO_ALL_SEARCH_USERS_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllSearchUsers(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      usersSearchApi.doUserSearchAll(data).then(data => {\r\n        dispatch(doUserAllSearchRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass CreateNotificationApi {\r\n    static doCreateNotification(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/send_notification', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateNotificationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport CreateNotificationApi from '../api/createNotificationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doCreateNotification(data) {\r\n  return {\r\n    type: types.CREATE_NOTIFICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateNotificationRes(data) {\r\n  return {\r\n    type: types.CREATE_NOTIFICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateNotification(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      CreateNotificationApi.doCreateNotification(data).then(data => {\r\n        dispatch(doCreateNotificationRes(data));\r\n        if (data.success === true) {\r\n          Swal.fire({\r\n            title: 'Notification send successfully',\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if (data.success === false) {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        dispatch(doCreateNotificationRes(null));\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.groupValue === '') {\r\n    errors.groupValue = 'Please select group';\r\n  }\r\n  if (values.groupValue === 'user') {\r\n    if (values.selectedUser === null) {\r\n      errors.selectedUser = 'Please select users';\r\n    }\r\n  }\r\n  if (values.title === '') {\r\n    errors.title = 'Please enter title';\r\n  }\r\n  if (values.body === '') {\r\n    errors.body = 'Please enter message';\r\n  }\r\n  // if (values.icon === '') {\r\n  //   errors.icon = 'Please choose application icon';\r\n  // }\r\n  // if (values.selectedCountry === '') {\r\n  //   errors.selectedCountry = 'Please select countries';\r\n  // }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './createNotification.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\n// import { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { getAllSearchUsers, doUserAllSearchRes } from '../../action/userSearchActions';\r\nimport { submitCreateNotification, doCreateNotificationRes } from '../../action/createNotificationActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport { getItem } from '../../utils/localStore';\r\nlet isSend = false;\r\nclass CreateNotificationComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        isSend = false;\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            title: '',\r\n            body: '',\r\n            usersList: [],\r\n            selectedUser: null,\r\n            file: null,\r\n            isSearchLoading: false,\r\n            applicationList: [],\r\n            groupValue: '',\r\n            showUserList: false,\r\n            appName: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let userAppGroup = getItem('adminAppId');\r\n        if (userAppGroup !== null) {\r\n            this.setState({\r\n                isLoader: false,\r\n                groupValue: getItem('adminAppId'),\r\n                appName: getItem('adminAppName'),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isLoader: false,\r\n            });\r\n        }\r\n        \r\n        this.props.fetchAllApplication();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.allApplicationRes) {\r\n\t\t\tif (nextProps.allApplicationRes.data && nextProps.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (nextProps.allApplicationRes.data.applicationList.success===true) {\r\n                    this.setState({\r\n                        applicationList: nextProps.allApplicationRes.data.applicationList.data\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doUserAllSearchRes){\r\n            if (nextProps.doUserAllSearchRes.data && nextProps.doUserAllSearchRes.data.userSearch) {\r\n\t\t\t\tif (nextProps.doUserAllSearchRes.data.userSearch.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.doUserAllSearchRes.data.userSearch.data,\r\n                        isSearchLoading: false,\r\n                    });\r\n                    setTimeout(() => { this.setState({\r\n                        isSearchLoading: false\r\n                    }); }, 3000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createNotificationRes){\r\n            if(nextProps.createNotificationRes.data.createNotification ){\r\n                if(nextProps.createNotificationRes.data.createNotification.success === true && isSend){\r\n                    isSend = false;\r\n                    this.setState({\r\n                        isLoader: false,\r\n                        title: '',\r\n                        body: '',\r\n                        selectedUser: null,\r\n                        isSubmited: false,\r\n                    });\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.push('/applications');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedUsr = [];\r\n            if (this.state.selectedUser !== null) {\r\n                for (let item of this.state.selectedUser) {\r\n                    selectedUsr.push(item.original.user_id)\r\n                }\r\n            }\r\n            let payloadReq = {\r\n                application_id: this.state.groupValue !== 'user' ? this.state.groupValue : '',\r\n                selected_user: this.state.selectedUser !== null ? selectedUsr.join() : '',\r\n                title: this.state.title,\r\n                type_message: this.state.body,\r\n            }\r\n            isSend = true;\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleInputChange = (value) => {\r\n        if (value !== '') {\r\n            this.setState({\r\n                isSearchLoading: true\r\n            });\r\n\r\n        }\r\n        this.props.getAllSearchUsers(value);\r\n    }\r\n    \r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n    }\r\n    changeGroup = (value) => {\r\n        this.setState({\r\n            groupValue: value.target.value\r\n        }, () => {\r\n            if (this.state.groupValue === 'user') {\r\n                this.setState({\r\n                    showUserList: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    showUserList: false\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create Notification</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        let userRole = getItem('userRoleId');\r\n        console.log(this.state.groupValue);\r\n        return (\r\n                <LayoutWrapper title=\"Create Notification\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                {/* <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Application</span>\r\n                                </div> */}\r\n                                <span className=\"offering_detail_title\">Create Notification</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    {\r\n                                                        userRole == '1' ?\r\n                                                        <div className=\"form-group select-loader\">\r\n                                                            <label>Select Group</label>\r\n                                                            <select className=\"form-control\" name=\"groupValue\" onChange={(e) => this.changeGroup(e)} value={this.state.groupValue}>\r\n                                                                <option value=''>Select Group</option>\r\n                                                                <option value=\"user\">Individual User</option>\r\n                                                                {\r\n                                                                    (this.state.applicationList) && this.state.applicationList.map((op, i) => {\r\n                                                                        return (\r\n                                                                            <option key={i} value={op.application_id}>{op.application_name}</option>\r\n                                                                        );\r\n                                                                        \r\n                                                                    })\r\n                                                                }\r\n                                                            </select>\r\n                                                            {errors && isSubmited && <span className=\"error-message\">{errors.groupValue}</span>}\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div className=\"form-group select-loader\">\r\n                                                            <label>Selected Group</label>\r\n                                                            <select className=\"form-control\" name=\"groupValue\" value={this.state.groupValue} readOnly>\r\n                                                                <option value={this.state.groupValue} disabled={true}>{this.state.appName}</option>\r\n                                                            </select>\r\n                                                            {errors && isSubmited && <span className=\"error-message\">{errors.groupValue}</span>}\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                (this.state.showUserList) && \r\n                                                <div className=\"col-6\">\r\n                                                    <div className=\"mt-2\">\r\n                                                        <div className=\"form-group select-loader\">\r\n                                                            <label>Select Users</label>\r\n                                                            <Select\r\n                                                                value={this.state.selectedUser}\r\n                                                                onChange={this.userChange}\r\n                                                                options={userListOptions}\r\n                                                                name=\"selectedUser\"\r\n                                                                placeholder=\"Select Users\"\r\n                                                                isMulti={true}\r\n                                                                onInputChange={this.handleInputChange}\r\n                                                            />\r\n                                                            {\r\n                                                                (this.state.isSearchLoading) &&\r\n                                                                <img className=\"loading-img\" src={loaderImg} alt=\"\" />\r\n                                                            }\r\n                                                            {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            }\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label>Title</label>\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter notification title\" name=\"title\" onChange={(e) => this.handleChange(e)} value={this.state.title} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.title}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label>Message</label>\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter notification message\" name=\"body\" onChange={(e) => this.handleChange(e)} value={this.state.body} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.body}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateNotificationComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createNotificationRes: PropTypes.any,\r\n    doUserAllSearchRes: PropTypes.any,\r\n    allApplicationRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createNotificationRes: doCreateNotificationRes,\r\n    doUserAllSearchRes: doUserAllSearchRes,\r\n\tallApplicationRes: getAllApplicationRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateNotification(data)),\r\n        getAllSearchUsers: (data) => dispatch(getAllSearchUsers(data)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateNotificationComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass resetPasswordApi {\r\n    static doResetpassword(data) {\r\n\r\n        let sendBody={\r\n            token: data.reset_password_token,\r\n            password: data.encrypted_password\r\n        }\r\n\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json'\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/dasda', body).then(response => {\r\n                if(response.ok === true){\r\n                    Swal.fire({\r\n                        title: 'Password reset successfully',\r\n                        type: 'success',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    })\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}\r\n\r\nexport default resetPasswordApi;\r\n","import * as types from './actionTypes';\r\nimport resetPasswordApi from '../api/resetPasswordApi';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport function doResetpassword(data) {\r\n  return {\r\n    type: types.DO_RESETPASSWORD,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doResetpasswordRes(user) {\r\n  return {\r\n    type: types.DO_RESETPASSWORD_RES,\r\n    user\r\n  };\r\n}\r\n\r\nexport function reset_password(data) {\r\n    return function(dispatch) {\r\n      resetPasswordApi.doResetpassword(data).then(user => {\r\n        dispatch(doResetpasswordRes(user));\r\n        if(user.error){\r\n          Swal.fire({\r\n            title: user.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { doResetpasswordRes } from '../../../action/resetPasswordActions';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst fields = ['encrypted_password'];\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n        {touched && error && <span>{error}</span>}\r\n    </div>\r\n)\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n\r\n    if (!values.encrypted_password) {\r\n        errors.encrypted_password = 'Required'\r\n    }\r\n    // if (values.encrypted_password) {\r\n    //     if (values.encrypted_password.search(/^\\S+$/)) {\r\n    //         errors.encrypted_password = 'Your password must not contain any space.'\r\n    //     }\r\n    //     if (values.encrypted_password.length < 10) {\r\n    //         errors.encrypted_password = 'Your password must be at least 10 characters'\r\n    //     }\r\n    //     if (values.encrypted_password.search(/[a-z]/i) < 0) {\r\n    //         errors.encrypted_password = 'Your password must contain at least one letter.'\r\n    //     }\r\n    //     if (values.encrypted_password.search(/[0-9]/) < 0) {\r\n    //         errors.encrypted_password = 'Your password must contain at least one digit.'\r\n    //     }\r\n    //     if (values.encrypted_password.search(/[!@#$%^&*]/) < 0) {\r\n    //         errors.encrypted_password = 'Your password must contain at least one special character.'\r\n    //     }\r\n    // }\r\n    return errors\r\n}\r\n\r\nclass ResetPasswordForm extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            changeTextPass: false,\r\n        }\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     this.props.reset();\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps){\r\n            if(nextProps.doResetpasswordRes.user.form.ReduxResetPasswordForm.submitSucceeded === true){\r\n                this.props.reset();\r\n            }\r\n        }\r\n    }\r\n    changePasswordButton = () => {\r\n        this.setState({\r\n            changeTextPass: !this.state.changeTextPass,\r\n        });\r\n    }\r\n    render() {\r\n        const { handleSubmit, handleFormSubmit, pristine, submitting } = this.props\r\n        return (\r\n            <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                <div className=\"small-12 columns error_message form_field_wrapper password_feild_wrapper\" style={{ marginTop: 50, marginBottom: 50 }}>\r\n                    <Field\r\n                        name=\"encrypted_password\"\r\n                        component={renderField}\r\n                        label=\"New Password\"\r\n                        autoComplete=\"off\"\r\n                        type={this.state.changeTextPass ? \"text\" : \"password\"}\r\n                    />\r\n                    {\r\n                        (this.state.changeTextPass) &&\r\n                        <div className=\"showhidepasswordbtnReset\" onClick={()=> this.changePasswordButton()}><i className=\"fa fa-eye\"></i></div>\r\n                    }\r\n                    {\r\n                        (!this.state.changeTextPass) &&\r\n                        <div className=\"showhidepasswordbtnReset\" onClick={()=> this.changePasswordButton()}><i className=\"fa fa-eye-slash\"></i></div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary login_button\" disabled={pristine || submitting}>Submit</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nResetPasswordForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitting: PropTypes.bool,\r\n    handleFormSubmit: PropTypes.func,\r\n    doResetpasswordRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    doResetpasswordRes: doResetpasswordRes\r\n});\r\n  \r\nfunction mapDispatchToProps(dispatch,ownProps) {\r\n    return {\r\n        \r\n    };\r\n}\r\n\r\nconst ReduxResetPasswordForm = reduxForm({\r\n    form: 'ReduxResetPasswordForm',\r\n    validate,\r\n    fields,\r\n    destroyOnUnmount: false,\r\n    enableReinitialize: true,\r\n    keepDirtyOnReinitialize: true,\r\n    touchOnBlur: false,\r\n})(ResetPasswordForm)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxResetPasswordForm);\r\n","\r\nimport React from 'react';\r\nimport { compose } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './passwordReset.css';\r\nimport { reset_password, doResetpasswordRes } from '../../action/resetPasswordActions';\r\nimport ResetPasswordForm from './resetpasswordForm/resetpasswordForm';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\n\r\nclass ResetPasswordComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            value:'',\r\n            resetpasswordtoken:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pathArray = this.props.location.pathname.split('/');\r\n        this.setState({\r\n            resetpasswordtoken : pathArray[2],\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) { }\r\n\r\n    handleSubmit(data){\r\n        let sendRequest = data;\r\n        sendRequest.reset_password_token = this.state.resetpasswordtoken;\r\n        this.props.handleFormSubmit(sendRequest);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forgetpassword_content login_content\">\r\n                <div className=\"login_content_inner\">\r\n                    <div className=\"login_content_inner_head\">\r\n                        <div className=\"company_logo\">\r\n                            <img src={logoImg} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"login_content_inner_body\">\r\n                        <div className=\"login_content_inner_body_inner\">\r\n                            {/* <div className=\"user_icon\"><i className=\"fa fa-user-o\"></i></div> */}\r\n                            <div className=\"forgetpassword_heading login_heading\">\r\n                                Reset Password\r\n                            </div>\r\n                            <div className=\"form_content_resetpassword\">\r\n                                <ResetPasswordForm handleFormSubmit={(data) => { this.handleSubmit(data) }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nResetPasswordComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    resetpasswordRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    resetpasswordRes: doResetpasswordRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(reset_password(data))\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ResetPasswordComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass AdminApi { \r\n\r\n    static doAppAdmin(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/adminlist', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default AdminApi;","import * as types from './actionTypes';  \r\nimport AdminApi from '../api/adminDetailsApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doAppAdmin(data) {\r\n  return {\r\n    type: types.DO_APP_ADMIN,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAppAdminRes(data) {  \r\n  return {\r\n    type: types.DO_APP_ADMIN_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function get_app_admin(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      AdminApi.doAppAdmin(data).then(data => {\r\n        dispatch(doAppAdminRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\n\r\nclass DeleteAdminApi {\r\n\r\n    static doDeleteAdmin(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/deleteAdmin', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteAdminApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteAdminApi from '../api/deleteAdminApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doDeleteAdmin(data) {\r\n  return {\r\n    type: types.DELETE_ADMIN,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteAdminRes(data) {\r\n  return {\r\n    type: types.DELETE_ADMIN_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function delete_admin(data) {\r\n\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteAdminApi.doDeleteAdmin(data).then(data => {\r\n        dispatch(doDeleteAdminRes(data));\r\n        dispatch(doDeleteAdminRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Loader from 'react-loader-advanced';\r\nimport Modal from \"react-responsive-modal\";\r\nimport './adminDetails.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { get_app_admin, doAppAdminRes } from '../../action/adminDetailsActions';\r\nimport { delete_admin, doDeleteAdminRes } from '../../action/deleteAdminActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\n\r\nlet isDelete = false;\r\n\r\nclass AdminDetailsComponent extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n      adminList: [],\r\n      selectAdminData: {},\r\n      adminId: ''\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let appData = this.props.location.state.applicationData;\r\n    this.setState({\r\n      selectAdminData: appData\r\n    });\r\n    let payLoad = {\r\n      application_id: appData.application_id\r\n    }\r\n    this.props.getAppAdminList(payLoad);\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.appAdminRes) {\r\n\t\t\tif (props.appAdminRes.data && props.appAdminRes.data.adminDetails) {\r\n\t\t\t\tif (props.appAdminRes.data.adminDetails.success===true) {\r\n          this.setState({\r\n            adminList: props.appAdminRes.data.adminDetails.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAdminRes) {\r\n\t\t\tif (props.doDeleteAdminRes.data && props.doDeleteAdminRes.data.deleteAdmin) {\r\n\t\t\t\tif (props.doDeleteAdminRes.data.deleteAdmin.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          let payLoadData = {\r\n            application_id: this.state.selectAdminData.application_id\r\n          }\r\n          this.props.getAppAdminList(payLoadData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  createAdmin(){\r\n    this.props.history.push('/create-admin',{\r\n      applicationData: this.state.selectAdminData\r\n    })\r\n  }\r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      admin_id: this.state.adminId\r\n    }\r\n    this.props.deleteAdmin(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      adminId: rowData.user_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/applications');\r\n  }\r\n\r\n  actionAddressTemplate = (rowData) => {\r\n    return (\r\n      <div>\r\n        {rowData.address1} {rowData.address2}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { selectAdminData } = this.state;\r\n    const { adminList } = this.state;\r\n    const Header = (<div className=\"offer_head\">Applications</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                      </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Applications\" header={Header} >\r\n          <div className=\"admin-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"createprofile_heading\">\r\n                          <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                            <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                            <span className=\"createprofile_go_back\">Back to Admin</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"admin-list-title\">{selectAdminData.application_name} Application</div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-create-admin\" onClick={() => this.createAdmin()}>Create Admin</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={adminList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                          <Column className=\"tableCols\" field=\"email\" header=\"Email\" sortable style={{width: '280px'}}/>\r\n                          <Column className=\"tableCols\" field=\"fullname\" header=\"Full Name\" sortable style={{width: '120px'}}/>\r\n                          <Column className=\"tableCols\" field=\"address\" header=\"Address\" body={this.actionAddressTemplate} sortable style={{width: '150px'}}/>\r\n                          <Column className=\"tableCols\" field=\"country\" header=\"Country\" sortable style={{width: '120px'}} />\r\n                          <Column className=\"tableCols\" field=\"state\" header=\"State\" sortable style={{width: '120px'}} />\r\n                          <Column className=\"tableCols\" field=\"city\" header=\"City\" sortable style={{width: '120px'}} />\r\n                          <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '130px'}}/>\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button className=\"btn delete-user-yes-btn\" onClick={() => this.deleteApp()} disabled={this.state.isDisabled}>\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button className=\"btn delete-user-no-btn\" onClick={() => this.cancelDeleteApp()}>\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nAdminDetailsComponent.propTypes = {\r\n  appAdminRes: PropTypes.any,\r\n\tdoDeleteAdminRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  appAdminRes: doAppAdminRes,\r\n\tdoDeleteAdminRes: doDeleteAdminRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getAppAdminList: (data) => dispatch(get_app_admin(data)),\r\n\t\tdeleteAdmin: (data) => dispatch(delete_admin(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(AdminDetailsComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass createAdminApi {\r\n\r\n    static doCreateAdmin(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createAdmin', body).then(response => {\r\n                if(response.ok === true){\r\n                    Swal.fire({\r\n                        title: 'Admin created successfully',\r\n                        type: 'success',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    })\r\n                }\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}\r\n\r\nexport default createAdminApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport createAdminApi from '../api/createAdminApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doCreateAdmin(data) {\r\n  return {\r\n    type: types.DO_CREATE_ADMIN,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateAdminRes(data) {\r\n  return {\r\n    type: types.DO_CREATE_ADMIN_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function create_admin(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createAdminApi.doCreateAdmin(data).then(data => {\r\n        dispatch(doCreateAdminRes(data));\r\n        dispatch(doCreateAdminRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.email === '') {\r\n    errors.email = 'Please enter email';\r\n  }\r\n  if (values.password === '') {\r\n    errors.password = 'Please enter password';\r\n  }\r\n  if (values.fullname === '') {\r\n    errors.fullname = 'Please enter fullname';\r\n  }\r\n  if (values.company === '') {\r\n    errors.company = 'Please enter company';\r\n  }\r\n  if (values.address1 === '') {\r\n    errors.address1 = 'Please enter address 1';\r\n  }\r\n  if (values.address2 === '') {\r\n    errors.address2 = 'Please enter address 2';\r\n  }\r\n  if (values.country === '') {\r\n    errors.country = 'Please select country';\r\n  }\r\n  if (values.state === '') {\r\n    errors.state = 'Please select state';\r\n  }\r\n  if (values.city === '') {\r\n    errors.city = 'Please select city';\r\n  }\r\n  if (values.zipcode === '') {\r\n    errors.zipcode = 'Please enter zip code';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport Select from 'react-select';\r\nimport './createAdmin.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { create_admin, doCreateAdminRes } from '../../action/createAdminActions';\r\nimport { getAllCountry, getAllState, getAllCity, doAllCountryRes, doAllCityRes, doAllStateRes } from '../../action/createUserActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\n\r\nclass CreateAdminComponent extends React.PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            fullname: '',\r\n            email: '',\r\n            password: '',\r\n            company: '',\r\n            address1: '',\r\n            address2: '',\r\n            country: '',\r\n            state: '',\r\n            city: '',\r\n            zipcode: '',\r\n            countryList: [],\r\n            stateList: [],\r\n            cityList: [],\r\n            selectedCountry: null,\r\n            selectedState: null,\r\n            selectedCity: null,\r\n            showPasshword: false,\r\n            applicationData: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let appData = this.props.location.state.applicationData;\r\n        this.setState({\r\n            applicationData: appData\r\n        });\r\n        this.props.getAllCountry();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllStateRes){\r\n            if(nextProps.doAllStateRes.data.stateList ){\r\n                if(nextProps.doAllStateRes.data.stateList.success === true){\r\n                    this.setState({\r\n                        stateList: nextProps.doAllStateRes.data.stateList.stateList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCityRes){\r\n            if(nextProps.doAllCityRes.data.cityList ){\r\n                if(nextProps.doAllCityRes.data.cityList.success === true){\r\n                    this.setState({\r\n                        cityList: nextProps.doAllCityRes.data.cityList.citylist\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.createAdminRes){\r\n            if(nextProps.createAdminRes.data.createAdmin ){\r\n                if(nextProps.createAdminRes.data.createAdmin.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/adminDetails',{\r\n                        applicationData: this.state.applicationData\r\n                      })\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        \r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                fullname: this.state.fullname,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                company: this.state.company,\r\n                address1: this.state.address1,\r\n                address2: this.state.address2,\r\n                country: this.state.country,\r\n                state: this.state.state,\r\n                city: this.state.city,\r\n                zipcode: this.state.zipcode,\r\n                access_application_id: this.state.applicationData.application_id\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n            this.setState({\r\n                isLoader: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n        this.props.getAllState(item.original.id)\r\n    }\r\n\r\n    stateChange = (item) => {\r\n        this.setState({\r\n            selectedState: item,\r\n            state: item.value\r\n        });\r\n        this.props.getAllCity(item.original.state_id)\r\n    }\r\n\r\n    cityChange = (item) => {\r\n        this.setState({\r\n            selectedCity: item,\r\n            city: item.value\r\n        });\r\n    }\r\n\r\n    createApproved(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    showHidePass = () => {\r\n        this.setState({\r\n            showPasshword: !this.state.showPasshword\r\n        },()=>{ })\r\n    }\r\n\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create Admin</div>);\r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, stateList, cityList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const stateListOptions = [];\r\n        if (stateList && stateList.length > 0) {\r\n            stateList.map((item) => {\r\n                stateListOptions.push({ value: item.state_name, label: item.state_name, original: item });\r\n                return (\r\n                <option value={item.state_name} id={item.state_id} key={item.state_id}>\r\n                    {item.state_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const cityListOptions = [];\r\n        if (cityList && cityList.length > 0) {\r\n            cityList.map((item) => {\r\n                cityListOptions.push({ value: item.city_name, label: item.city_name, original: item });\r\n                return (\r\n                <option value={item.city_name} id={item.city_id} key={item.city_id}>\r\n                    {item.city_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <LayoutWrapper title=\"Create User\" header={Header} >\r\n                <Loader show={this.state.isLoader} message={spinner}>\r\n                    <div className=\"edit_profile_content_wrapper\">\r\n                        <div className=\"createprofile_heading\">\r\n                            <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                <span className=\"createprofile_go_back\">Back to Admin</span>\r\n                            </div>\r\n                            <span className=\"offering_detail_title\">Create Admin</span>\r\n                        </div>\r\n                        <div className=\"editprofile_content\">\r\n                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter full name\" name=\"fullname\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.fullname}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.email}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type={this.state.showPasshword ? \"text\" : \"password\"} className=\"form-control\" placeholder=\"Enter password\" name=\"password\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {\r\n                                                        this.state.showPasshword &&\r\n                                                        <p onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </p>\r\n                                                    }\r\n                                                    {\r\n                                                        !this.state.showPasshword &&\r\n                                                        <span onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye-slash eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </span>\r\n                                                    }\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.password}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter company name\" name=\"company\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.company}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 1\" name=\"address1\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address1}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 2 (Optional)\" name=\"address2\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address2}</span>}\r\n                                                </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Enter ZipCode\" name=\"zipcode\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.zipcode}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCountry}\r\n                                                        onChange={this.countryChange}\r\n                                                        options={countryListOptions}\r\n                                                        name=\"country\"\r\n                                                        placeholder=\"Select Country\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.country}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedState}\r\n                                                        onChange={this.stateChange}\r\n                                                        options={stateListOptions}\r\n                                                        name=\"state\"\r\n                                                        placeholder=\"Select State\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.state}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCity}\r\n                                                        onChange={this.cityChange}\r\n                                                        options={cityListOptions}\r\n                                                        name=\"city\"\r\n                                                        placeholder=\"Select City\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.city}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Loader>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateAdminComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createAdminRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    doAllCityRes: PropTypes.any,\r\n    doAllStateRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createAdminRes: doCreateAdminRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    doAllCityRes: doAllCityRes,\r\n    doAllStateRes: doAllStateRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(create_admin(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllState: (data) => dispatch(getAllState(data)),\r\n        getAllCity: (data) => dispatch(getAllCity(data)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateAdminComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass NovusBiApi {  \r\n    static getnovusBi() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/application_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default NovusBiApi;","import * as types from './actionTypes';  \r\nimport novusBiApi from '../api/novusBiApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getnovusBi() {\r\n\r\n  return {\r\n    type: types.FETCH_NOVUSBI,\r\n  };\r\n}\r\n\r\nexport function getnovusBiRes(data) {  \r\n  return {\r\n    type: types.FETCH_NOVUSBI_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchnovusBi() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiApi.getnovusBi().then(data => {\r\n        dispatch(getnovusBiRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './novusBi.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchnovusBi, getnovusBiRes } from '../../action/novusBiActions';\r\nimport { deleteApplicationRecord, doDeleteAppRes } from '../../action/deleteApplicationActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Button} from 'primereact/button';\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass NovusBiComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      wmsList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      novusBiList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n      opened: false,\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n    this.toggleBox = this.toggleBox.bind(this);\r\n    this.toggleBtn1 = this.toggleBtn1.bind(this);\r\n    this.toggleBtn2 = this.toggleBtn2.bind(this);\r\n    this.toggleBtn3 = this.toggleBtn3.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        novusBiList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetchnovusBi();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props)\r\n    if (props.novusBiRes) {\r\n\t\t\tif (props.novusBiRes.data && props.novusBiRes.data.novusBi) {\r\n\t\t\t\tif (props.novusBiRes.data.novusBi.success===true) {\r\n          this.setState({\r\n            novusBiList: props.novusBiRes.data.novusBi.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteApplication) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteApplication.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchAllApplication();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goUpdateApplication = (rowData) => {\r\n    // this.props.history.push({\r\n    //   pathname: '/novus-bi-create',\r\n    //   state: {appData: rowData}\r\n    // })\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-create')\r\n  }\r\n\r\n  \r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      app_id: this.state.appId\r\n    }\r\n    this.props.deleteApplicationRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      appId: rowData.application_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src='http://localhost:3000/static/media/novusone-logo.6b9fef02.png' alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleBox() {\t\t\r\n\t\tthis.setState({\r\n      opened: true,\r\n    });    \r\n  }\r\n  toggleBtn1() {\t\r\n\t\tthis.setState({\r\n      opened: false,\r\n    });    \r\n  }\r\n  toggleBtn2() {\t\r\n\t\tthis.setState({\r\n      opened: false,\r\n    });    \r\n  }\r\n  toggleBtn3() {\t\r\n\t\tthis.setState({\r\n      opened: false,\r\n    });    \r\n\t}\r\n  actionStatusTemplate = (data) => {\r\n    const { opened } = this.state;\r\n    return (\r\n      <div className=\"status_main_bx\">\r\n        <button className=\"btn pending-status\" onClick={this.toggleBox}>\r\n          Draft\r\n        </button> \r\n        { opened && (\r\n          <div className=\"status_bx\">\r\n          <Button label=\"Draft\" icon=\"pi pi-pencil\" className=\"btn pending-status\" iconPos=\"left\" onClick={this.toggleBtn1} />\r\n          <Button label=\"Not published\" className=\"btn btn-delete-customer\" icon=\"pi pi-clock\" className=\"btn pending-status\" iconPos=\"left\" onClick={this.toggleBtn2} />\r\n          <Button label=\"Published\" className=\"btn approve-status\" icon=\"pi pi-check\" className=\"btn pending-status\" iconPos=\"left\" onClick={this.toggleBtn3\r\n          } />\r\n          </div>  \r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    return (\r\n      <div className=\"date_field\" style={{textAlign: 'center'}}>\r\n        <p onClick={()=> this.goToAdmin(rowData)}>\r\n          19/02/2020 11:15  \r\n        </p>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    // this.props.history.push('/adminDetails',{\r\n    //   applicationData: data\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { novusBiList } = this.state;\r\n    console.log(novusBiList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Applications</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Applications\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">News</div>\r\n                      </div>\r\n                      {\r\n                        userRole == '1' &&\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createApp()}>Create List</button>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={novusBiList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.wmsList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                        <Column selectionMode=\"multiple\" style={{width:'2em'}}/>\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"application_name\" header=\"Title\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Date\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          <Column className=\"tableCols\" field=\"\" header=\"Status\" style={{width: '120px'}} body={this.actionStatusTemplate} />\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nNovusBiComponent.propTypes = {\r\n\tnovusBiRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  novusBiRes: getnovusBiRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchnovusBi: () => dispatch(fetchnovusBi()),\r\n\t\tdeleteApplicationRecord: (data) => dispatch(deleteApplicationRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(NovusBiComponent);","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === null) {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './novusBiCreate.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitCreateApplication, doCreateApplicationRes } from '../../action/createApplicationActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\n\r\nclass NovusBiCreateComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getAllCountry();\r\n        // this.props.getAllUsers();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createAppRes){\r\n            if(nextProps.createAppRes.data.createApplication ){\r\n                if(nextProps.createAppRes.data.createApplication.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/applications');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/novus-bi');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedCon = [];\r\n            for (let item of this.state.selectedCountry) {\r\n                selectedCon.push(item.value)\r\n            }\r\n            let payloadReq = {\r\n                applicationName: this.state.applicationName,\r\n                icon: this.state.icon,\r\n                selectedCountries: selectedCon.join(),\r\n                selectedUser: '',\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item\r\n        });\r\n    }\r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    renderHeader() {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n    render() {\r\n        const header = this.renderHeader();\r\n\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Novus Bi</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Create Category</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Title\" name=\"applicationName\" onChange={(e) => this.handleChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.applicationName}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"file\" className=\"form-control\" name=\"icon\" accept=\"image/*\" onChange={(e) => this.handleFileChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedUser}\r\n                                                            onChange={this.userChange}\r\n                                                            options={userListOptions}\r\n                                                            name=\"selectedUser\"\r\n                                                            placeholder=\"Select users\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nNovusBiCreateComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createAppRes: doCreateApplicationRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateApplication(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(NovusBiCreateComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nclass novusBiArticleApi {\r\n    static donovusBiArticle(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createUser', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    static fetchAllCountry() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/country_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllState(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            countryid: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/state_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllCity(data) {\r\n        console.log('state id', data);\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            stateId: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/city_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default novusBiArticleApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport novusBiArticleApi from '../api/novusBiArticleApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function donovusBiArticle(data) {\r\n  return {\r\n    type: types.DO_NOVUSBI_ARTICLE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function donovusBiArticleRes(data) {\r\n  return {\r\n    type: types.DO_NOVUSBI_ARTICLE_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitnovusBiArticle(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.donovusBiArticle(data).then(data => {\r\n        \r\n        dispatch(donovusBiArticleRes(data));\r\n        dispatch(donovusBiArticleRes(null));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.success === false){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCountry() {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY,\r\n  };\r\n}\r\n\r\nexport function doAllCountryRes(data) {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCountry() {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.fetchAllCountry().then(data => {\r\n        dispatch(doAllCountryRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllState(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllStateRes(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllState(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.fetchAllState(data).then(data => {\r\n        dispatch(doAllStateRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCity(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllCityRes(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCity(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.fetchAllCity(data).then(data => {\r\n        dispatch(doAllCityRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === null) {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './novusBiArticle.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/novusBiArticleActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitnovusBiArticle, donovusBiArticleRes } from '../../action/novusBiArticleActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport {Editor} from \"primereact/editor\";\r\nimport {Button} from \"primereact/button\";\r\nimport ImagesUploader from 'react-images-uploader';\r\nimport 'react-images-uploader/styles.css';\r\nimport 'react-images-uploader/font.css';\r\n\r\nclass NovusBiArticleComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null,\r\n            uploader: false,\r\n            Videouploader: false,\r\n            editor: true,\r\n            uploader1: true,\r\n            Videouploader1: false,\r\n            editor1: false,\r\n            uploader2: false,\r\n            Videouploader2: true,\r\n            editor2: false,\r\n            // text1 : '<div>Type Here !!!</div><div><br></div>',\r\n            // text2 : ''\r\n        }\r\n        this.editorBtn = this.editorBtn.bind(this);\r\n        this.uploaderBtn = this.uploaderBtn.bind(this);\r\n        this.VideouploaderBtn = this.VideouploaderBtn.bind(this);\r\n        this.uploaderBtn2 = this.uploaderBtn2.bind(this);\r\n        this.VideouploaderBtn2 = this.VideouploaderBtn2.bind(this);\r\n        this.editorBtn2 = this.editorBtn2.bind(this);\r\n        this.uploaderBtn1 = this.uploaderBtn1.bind(this);\r\n        this.VideouploaderBtn1 = this.VideouploaderBtn1.bind(this);\r\n        this.editorBtn1 = this.editorBtn1.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.getAllCountry();\r\n        // this.props.getAllUsers();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.ArticleAppRes){\r\n            if(nextProps.ArticleAppRes.data.ArticleApplication ){\r\n                if(nextProps.ArticleAppRes.data.ArticleApplication.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/applications');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/novus-bi');\r\n    }\r\n    uploaderBtn() {\t\t\r\n        this.setState({\r\n            uploader: true,\r\n            editor: false,\r\n            Videouploader: false,\r\n        });    \r\n    }\r\n    VideouploaderBtn() {\t\t\r\n        this.setState({\r\n            uploader: false,\r\n            editor: false,\r\n            Videouploader: true,\r\n        });    \r\n    }\r\n    editorBtn() {\t\t\r\n        this.setState({\r\n            editor: true,\r\n            uploader: false,\r\n            Videouploader: false,\r\n        });    \r\n    }\r\n\r\n    uploaderBtn2() {\t\t\r\n        this.setState({\r\n            uploader2: true,\r\n            editor2: false,\r\n            Videouploader2: false,\r\n        });    \r\n    }\r\n    VideouploaderBtn2() {\t\t\r\n        this.setState({\r\n            uploader2: false,\r\n            editor2: false,\r\n            Videouploader2: true,\r\n        });    \r\n    }\r\n    editorBtn2() {\t\t\r\n        this.setState({\r\n            editor2: true,\r\n            uploader2: false,\r\n            Videouploader2: false,\r\n        });    \r\n    }\r\n\r\n    uploaderBtn1() {\t\t\r\n        this.setState({\r\n            uploader1: true,\r\n            editor1: false,\r\n            Videouploader1: false,\r\n        });    \r\n    }\r\n    VideouploaderBtn1() {\t\t\r\n        this.setState({\r\n            uploader1: false,\r\n            editor1: false,\r\n            Videouploader1: true,\r\n        });    \r\n    }\r\n    editorBtn1() {\t\t\r\n        this.setState({\r\n            editor1: true,\r\n            uploader1: false,\r\n            Videouploader1: false,\r\n        });    \r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedCon = [];\r\n            for (let item of this.state.selectedCountry) {\r\n                selectedCon.push(item.value)\r\n            }\r\n            let payloadReq = {\r\n                applicationName: this.state.applicationName,\r\n                icon: this.state.icon,\r\n                selectedCountries: selectedCon.join(),\r\n                selectedUser: '',\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item\r\n        });\r\n    }\r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    renderHeader() {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n    render() {\r\n        const { uploader } = this.state;\r\n        const { Videouploader } = this.state;        \r\n        const { editor } = this.state;\r\n        const { uploader2 } = this.state;\r\n        const { Videouploader2 } = this.state;        \r\n        const { editor2 } = this.state;\r\n        const { uploader1 } = this.state;\r\n        const { Videouploader1 } = this.state;        \r\n        const { editor1 } = this.state;\r\n        const header = this.renderHeader();\r\n\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper main_content_bx\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Novus Bi</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Novus Bi Article</span>\r\n                            </div>\r\n                            \r\n                            <div className=\"editprofile_content \">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div className=\"btn_box_main\">\r\n                                    <div>\r\n                                        <p className=\"ever_element\"><i className=\"fa fa-plus-circle\"></i> Add An element</p>\r\n                                    </div>\r\n                                    <div className=\"box_for_tabs\">\r\n                                        <p className=\"tabs_icons\" onClick={this.editorBtn}><i className=\"fa fa-pencil\"></i> Editor</p>\r\n                                        <p className=\"tabs_icons\" onClick={this.uploaderBtn}><i className=\"fa fa-image\"></i> Image</p>\r\n                                        <p className=\"tabs_icons\" onClick={this.VideouploaderBtn}><i className=\"fa fa-video\"></i> Video</p>\r\n                                    </div>  \r\n                                </div>\r\n                                    <div>\r\n                                        <div className=\"row\">                                                                                       \r\n                                            <div className=\"col-12\">\r\n                                            { editor && (\r\n                                            <Editor className=\"editor_cls\" style={{height:'320px'}} value={this.state.text1} onTextChange={(e)=>this.setState({text1:e.htmlValue})}/>\r\n                                            )}\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                                { uploader && (\r\n                                                \r\n                                                <div className=\"image_uploader_main\">\r\n                                                    <i className=\"fa fa-camera upload_icon\"></i>\r\n                                                    <ImagesUploader\r\n                                                    url=\"http://localhost:3000/notmultiple\"\r\n                                                    optimisticPreviews\r\n                                                    multiple={false}\r\n                                                    onLoadEnd={(err) => {\r\n                                                        if (err) {\r\n                                                            console.error(err);\r\n                                                        }\r\n                                                    }} />\r\n                                                </div>\r\n                                                )}\r\n                                                </div> \r\n                                                <div className=\"col-12\">\r\n                                                        { Videouploader && (\r\n                                                \r\n                                                        <div className=\"image_uploader_main\">\r\n                                                            <i className=\"fa fa-video upload_icon\"></i>\r\n                                                            <ImagesUploader\r\n                                                            url=\"http://localhost:3000/notmultiple\"\r\n                                                            optimisticPreviews\r\n                                                            multiple={false}\r\n                                                            onLoadEnd={(err) => {\r\n                                                                if (err) {\r\n                                                                    console.error(err);\r\n                                                                }\r\n                                                            }} />\r\n                                                        </div>\r\n                                                        )}\r\n                                                </div>                                             \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div className=\"btn_box_main\">\r\n                                    <div>\r\n                                        <p className=\"ever_element\"><i className=\"fa fa-plus-circle\"></i> Add An element</p>\r\n                                    </div>\r\n                                    <div className=\"box_for_tabs\">\r\n                                        <p className=\"tabs_icons\" onClick={this.editorBtn1}><i className=\"fa fa-pencil\"></i> Editor</p>\r\n                                        <p className=\"tabs_icons\" onClick={this.uploaderBtn1}><i className=\"fa fa-image\"></i> Image</p>\r\n                                        <p className=\"tabs_icons\" onClick={this.VideouploaderBtn1}><i className=\"fa fa-video\"></i> Video</p>\r\n                                    </div>  \r\n                                </div>\r\n                                    <div>\r\n                                        <div className=\"row\">                                                                                       \r\n                                            <div className=\"col-12\">\r\n                                            <div className=\"mt-2\">\r\n                                            { editor1 && (\r\n                                            <Editor className=\"editor_cls\" style={{height:'320px'}} value={this.state.text1} onTextChange={(e)=>this.setState({text1:e.htmlValue})}/>\r\n                                            )}\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                            <div className=\"mt-2\">\r\n                                                { uploader1 && (\r\n                                                \r\n                                                <div className=\"image_uploader_main\">\r\n                                                    <i className=\"fa fa-camera upload_icon\"></i>\r\n                                                    <ImagesUploader\r\n                                                    url=\"http://localhost:3000/notmultiple\"\r\n                                                    optimisticPreviews\r\n                                                    multiple={false}\r\n                                                    onLoadEnd={(err) => {\r\n                                                        if (err) {\r\n                                                            console.error(err);\r\n                                                        }\r\n                                                    }} />\r\n                                                </div>\r\n                                                )}\r\n                                                </div>\r\n                                                </div> \r\n                                                <div className=\"col-12\">\r\n                                                    <div className=\"mt-2\">\r\n                                                        { Videouploader1 && (\r\n                                                        \r\n                                                        <div className=\"image_uploader_main\">\r\n                                                            <i className=\"fa fa-video upload_icon\"></i>\r\n                                                            <ImagesUploader\r\n                                                            url=\"http://localhost:3000/notmultiple\"\r\n                                                            optimisticPreviews\r\n                                                            multiple={false}\r\n                                                            onLoadEnd={(err) => {\r\n                                                                if (err) {\r\n                                                                    console.error(err);\r\n                                                                }\r\n                                                            }} />\r\n                                                        </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>                                             \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div className=\"btn_box_main\">\r\n                                    <div>\r\n                                        <p className=\"ever_element\"><i className=\"fa fa-plus-circle\"></i> Add An element</p>\r\n                                    </div>\r\n                                    <div className=\"box_for_tabs\">\r\n                                        <p className=\"tabs_icons\" onClick={this.editorBtn2}><i className=\"fa fa-pencil\"></i> Editor</p>\r\n                                        <p className=\"tabs_icons\" onClick={this.uploaderBtn2}><i className=\"fa fa-image\"></i> Image</p>\r\n                                        <p className=\"tabs_icons\" onClick={this.VideouploaderBtn2}><i className=\"fa fa-video\"></i> Video</p>\r\n                                    </div>  \r\n                                </div>\r\n                                    <div>\r\n                                        <div className=\"row\">                                                                                       \r\n                                            <div className=\"col-12\">\r\n                                            <div className=\"mt-2\">\r\n                                            { editor2 && (\r\n                                            <Editor className=\"editor_cls\" style={{height:'320px'}} value={this.state.text1} onTextChange={(e)=>this.setState({text1:e.htmlValue})}/>\r\n                                            )}\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                            <div className=\"mt-2\">\r\n                                                { uploader2 && (\r\n                                                \r\n                                                <div className=\"image_uploader_main\">\r\n                                                    <i className=\"fa fa-camera upload_icon\"></i>\r\n                                                    <ImagesUploader\r\n                                                    url=\"http://localhost:3000/notmultiple\"\r\n                                                    optimisticPreviews\r\n                                                    multiple={false}\r\n                                                    onLoadEnd={(err) => {\r\n                                                        if (err) {\r\n                                                            console.error(err);\r\n                                                        }\r\n                                                    }} />\r\n                                                </div>\r\n                                                )}\r\n                                                </div>\r\n                                                </div> \r\n                                                <div className=\"col-12\">\r\n                                                    <div className=\"mt-2\">\r\n                                                        { Videouploader2 && (\r\n                                                        \r\n                                                        <div className=\"image_uploader_main\">\r\n                                                            <i className=\"fa fa-video upload_icon\"></i>\r\n                                                            <ImagesUploader\r\n                                                            url=\"http://localhost:3000/notmultiple\"\r\n                                                            optimisticPreviews\r\n                                                            multiple={false}\r\n                                                            onLoadEnd={(err) => {\r\n                                                                if (err) {\r\n                                                                    console.error(err);\r\n                                                                }\r\n                                                            }} />\r\n                                                        </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>                                             \r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nNovusBiArticleComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    ArticleAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    ArticleAppRes: donovusBiArticleRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitnovusBiArticle(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(NovusBiArticleComponent);\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { getItem } from './utils/localStore';\r\nimport LoginComponent from './container/login/login';\r\nimport ForgetPasswordComponent from './container/forgetpassword/forgetPassword';\r\nimport UsersComponent from './container/users/users';\r\nimport ApplicationsComponent from './container/applications/applications';\r\nimport CreateUserComponent from './container/createUser/createUser';\r\nimport EditUserComponent from './container/editUser/editUser';\r\nimport CreateApplicationComponent from './container/createApplication/createApplication';\r\nimport UpdateApplicationComponent from './container/updateApplication/updateApplication';\r\nimport CreateNotificationComponent from './container/createNotification/createNotification';\r\nimport ResetPasswordComponent from './container/passwordreset/reset-password';\r\nimport AdminDetailsComponent from './container/adminDetails/adminDetails';\r\nimport CreateAdminComponent from './container/createAdmin/createAdmin';\r\nimport NovusBiComponent from './container/novusBi/novusBi';\r\nimport NovusBiCreateComponent from './container/novusBiCreate/novusBiCreate';\r\nimport NovusBiArticleComponent from './container/novusBiArticle/novusBiArticle';\r\n\r\nclass App extends React.PureComponent {\r\n  \r\n  render() {\r\n    const TOKEN = getItem('auth_token');\r\n\r\n    if(TOKEN === null) {\r\n      return(\r\n        <React.Fragment>\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact={true} path=\"/\" component={LoginComponent} />\r\n              <Route path=\"/forgetpassword\" component={ForgetPasswordComponent} />\r\n              <Route path=\"/resetpassword/:token\" component={ResetPasswordComponent} />\r\n              <Route render={() => (<Redirect to={'/'} />)} />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </React.Fragment>       \r\n      )\r\n    } else if (TOKEN !== null) {\r\n      return(\r\n        <div>\r\n          <React.Fragment>\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route path=\"/users\" component={UsersComponent} />\r\n                <Route path=\"/createUser\" component={CreateUserComponent} />\r\n                <Route path=\"/updateUser\" component={EditUserComponent} />\r\n                <Route path=\"/applications\" component={ApplicationsComponent} />\r\n                <Route path=\"/create-application\" component={CreateApplicationComponent} />\r\n                <Route path=\"/update-application\" component={UpdateApplicationComponent} />\r\n                <Route path=\"/notification\" component={CreateNotificationComponent} />\r\n                <Route path=\"/adminDetails\" component={AdminDetailsComponent} />\r\n                <Route path=\"/create-admin\" component={CreateAdminComponent} />\r\n                <Route path=\"/novus-bi\" component={NovusBiComponent} />\r\n                <Route path=\"/novus-bi-create\" component={NovusBiCreateComponent} />\r\n                <Route path=\"/novus-bi-article\" component={NovusBiArticleComponent} />\r\n                <Route render={() => (<Redirect to=\"/users\" />)} />\r\n                \r\n              </Switch>\r\n            </BrowserRouter>\r\n          </React.Fragment>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {  \r\n    user: [],\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport userReducer from './userReducer';\r\nimport createUserReducer from './createUserReducer';\r\nimport deleteUserReducer from './deleteUserReducer';\r\nimport editUserReducer from './editUserReducer';\r\nimport userListReducer from './userListReducer';\r\nimport userApprovedReducer from './userApprovedReducer';\r\nimport countryListReducer from './countryListReducer';\r\nimport stateListReducer from './stateListReducer';\r\nimport cityListReducer from './cityListReducer';\r\nimport applicationListReducer from './applicationListReducer';\r\nimport createApplicationReducer from './createApplicationReducer';\r\nimport updateApplicationReducer from './updateApplicationReducer';\r\nimport deleteApplicationReducer from './deleteApplicationReducer';\r\nimport uploadAppIconReducer from './uploadAppIconReducer';\r\nimport createNotificationReducer from './createNotificationReducer';\r\nimport userSearchReducer from './userSearchReducer';\r\nimport userApproveAppReducer from './userApproveAppReducer';\r\nimport createAdminReducer from './createAdminReducer';\r\nimport adminDetailsReducer from './adminDetailsReducer';\r\nimport deleteAdminReducer from './deleteAdminReducer';\r\nimport checkUserReducer from './checkUserReducer';\r\nimport novusBiReducer from './novusBiReducer';\r\nimport novusBiCreateReducer from './novusBiCreateReducer';\r\nimport novusBiArticleReducer from './novusBiArticleReducer';\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  user: userReducer,\r\n  allUser: userListReducer,\r\n  createUser: createUserReducer,\r\n  deleteUser: deleteUserReducer,\r\n  updateUser: editUserReducer,\r\n  approvedUser: userApprovedReducer,\r\n  countryList: countryListReducer,\r\n  stateList: stateListReducer,\r\n  cityList: cityListReducer,\r\n  applicationList: applicationListReducer,\r\n  createApplication: createApplicationReducer,\r\n  uploadApplication: updateApplicationReducer,\r\n  deleteApplication: deleteApplicationReducer,\r\n  uploadAppIcon: uploadAppIconReducer,\r\n  createNotification: createNotificationReducer,\r\n  userSearch: userSearchReducer,\r\n  userApproveApp: userApproveAppReducer,\r\n  createAdmin: createAdminReducer,\r\n  adminDetails: adminDetailsReducer,\r\n  deleteAdmin: deleteAdminReducer,\r\n  checkUser: checkUserReducer,\r\n  novusBi: novusBiReducer,\r\n  novusBiCreate: novusBiCreateReducer,\r\n  novusBiArticle: novusBiArticleReducer,\r\n});","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_LOGIN_RES:\r\n      return action.user\r\n    case types.DO_FORGOTPASSWORD_RES:\r\n      return action.user.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_ALL_USERS_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_CREATE_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_DELETE_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_UPDATE_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_USER_APPROVED_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.FETCH_All_COUNTRY_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.FETCH_All_STATE_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.FETCH_All_CITY_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_All_APPLICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.CREATE_APPLICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPDATE_APPLICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DELETE_APPLICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPLOAD_APPLICATION_ICON_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.CREATE_NOTIFICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_ALL_SEARCH_USERS_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_USER_APPROVE_APP_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_CREATE_ADMIN_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_APP_ADMIN_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DELETE_ADMIN_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_CHECK_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_NOVUSBI_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_NOVUSBI_CREATE_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_NOVUSBI_ARTICLE_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\nimport 'primereact/components/common/Common.css';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport 'react-orgchart/index.css';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n<Provider store={store}><App /></Provider>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
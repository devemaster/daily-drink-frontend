{"version":3,"sources":["assets/images/loader-example.gif","assets/images/icon-left.svg","assets/images/novusone-logo.png","assets/images/subimg1.PNG","utils/localStore.js","action/actionTypes.js","constants.js","api/loginApi.js","action/loginActions.js","container/login/Form/form.js","container/login/login.js","container/forgetpassword/forgetpasswordForm/forgetPasswordForm.js","api/forgotPasswordApi.js","action/forgotPasswordActions.js","container/forgetpassword/forgetPassword.js","api/userApi.js","helper/helper.js","action/userActions.js","component/LayoutWrapper/index.js","api/userApprovedApi.js","action/approvedUserActions.js","api/deleteUserApi.js","action/deleteUserActions.js","api/applicationApi.js","action/applicationActions.js","api/userApproveAppApi.js","action/approveUserAppActions.js","api/checkUserApi.js","action/checkUserActions.js","container/users/users.js","api/deleteApplicationApi.js","action/deleteApplicationActions.js","container/applications/applications.js","api/createUserApi.js","action/createUserActions.js","container/createUser/formValidation.js","container/createUser/createUser.js","api/editUserApi.js","action/editUserActions.js","container/editUser/formValidation.js","container/editUser/editUser.js","api/createApplicationApi.js","action/createApplicationActions.js","api/uploadAppIconApi.js","action/uploadAppIconActions.js","container/createApplication/formValidation.js","container/createApplication/createApplication.js","api/updateApplicationApi.js","action/updateApplicationActions.js","container/updateApplication/formValidation.js","container/updateApplication/updateApplication.js","api/userSearchApi.js","action/userSearchActions.js","api/createNotificationApi.js","action/createNotificationActions.js","container/createNotification/formValidation.js","container/createNotification/createNotification.js","api/resetPasswordApi.js","action/resetPasswordActions.js","container/passwordreset/resetpasswordForm/resetpasswordForm.js","container/passwordreset/reset-password.js","api/adminDetailsApi.js","action/adminDetailsActions.js","api/deleteAdminApi.js","action/deleteAdminActions.js","container/adminDetails/adminDetails.js","api/createAdminApi.js","action/createAdminActions.js","container/createAdmin/formValidation.js","container/createAdmin/createAdmin.js","api/novusBiApi.js","action/novusBiActions.js","container/novusBi/novusBi.js","api/createCategoryApi.js","action/createCategoryActions.js","container/novusBiCreate/formValidation.js","container/novusBiCreate/novusBiCreate.js","api/novusBiArticleApi.js","action/novusBiArticleActions.js","api/allCategoryListApi.js","action/allCategoryListActions.js","container/novusBiArticle/formValidation.js","container/novusBiArticle/novusBiArticle.js","api/contentListApi.js","action/contentListActions.js","api/deleteContentListApi.js","action/deleteContentListActions.js","api/statusContentListApi.js","action/statusContentListActions.js","container/contentList/contentList.js","api/categoryListApi.js","action/categoryListActions.js","api/deleteCategoryListApi.js","action/deleteCategoryListActions.js","container/categoryList/categoryList.js","api/commentListApi.js","action/commentListActions.js","container/commentList/commentList.js","api/trashListApi.js","action/trashListActions.js","container/trashList/trashList.js","api/subCategoryListApi.js","action/subCategoryListActions.js","api/deleteSubCategoryListApi.js","action/deleteSubCategoryListActions.js","container/subCategoryList/subCategoryList.js","api/articleListApi.js","action/articleListActions.js","container/articleList/articleList.js","api/updateContentApi.js","action/updateContentActions.js","container/updateContent/formValidation.js","container/updateContent/updateContent.js","api/updateCategoryApi.js","action/updateCategoryActions.js","container/updateCategory/formValidation.js","container/updateCategory/updateCategory.js","api/updateSubCategoryApi.js","action/updateSubCategoryActions.js","container/updateSubCategory/formValidation.js","container/updateSubCategory/updateSubCategory.js","container/createCategory/formValidation.js","container/createCategory/createCategory.js","api/novusBiArticleUpdateApi.js","action/novusBiArticleUpdateActions.js","container/novusBiArticleUpdate/formValidation.js","container/novusBiArticleUpdate/novusBiArticleUpdate.js","api/bannerListApi.js","action/bannerListActions.js","api/deleteBannerListApi.js","action/deleteBannerListActions.js","container/bannerList/bannerList.js","api/createBannerApi.js","action/createBannerActions.js","container/bannerCreate/formValidation.js","container/bannerCreate/bannerCreate.js","api/updateBannerApi.js","action/updateBannerActions.js","container/updateBanner/formValidation.js","container/updateBanner/updateBanner.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/index.js","reducers/userReducer.js","reducers/userListReducer.js","reducers/createUserReducer.js","reducers/deleteUserReducer.js","reducers/editUserReducer.js","reducers/userApprovedReducer.js","reducers/countryListReducer.js","reducers/stateListReducer.js","reducers/cityListReducer.js","reducers/applicationListReducer.js","reducers/createApplicationReducer.js","reducers/updateApplicationReducer.js","reducers/deleteApplicationReducer.js","reducers/uploadAppIconReducer.js","reducers/createNotificationReducer.js","reducers/userSearchReducer.js","reducers/userApproveAppReducer.js","reducers/createAdminReducer.js","reducers/adminDetailsReducer.js","reducers/deleteAdminReducer.js","reducers/checkUserReducer.js","reducers/novusBiReducer.js","reducers/novusBiCreateReducer.js","reducers/novusBiArticleReducer.js","reducers/novusBiArticleUpdateReducer.js","reducers/contentListReducer.js","reducers/categoryListReducer.js","reducers/commentListReducer.js","reducers/trashListReducer.js","reducers/subCategoryListReducer.js","reducers/articleListReducer.js","reducers/updateContentReducer.js","reducers/updateCategoryReducer.js","reducers/updateSubCategoryReducer.js","reducers/createCategoryReducer.js","reducers/deleteCategoryListReducer.js","reducers/allCategoryListReducer.js","reducers/deleteContentReducer.js","reducers/statusContentReducer.js","reducers/bannerListReducer.js","reducers/deleteBannerListReducer.js","reducers/createBannerReducer.js","reducers/updateBannerReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","setItem","key","value","localStorage","err","getItem","serializedItem","undefined","DO_LOGIN_RES","DO_FORGOTPASSWORD_RES","DO_ALL_USERS_RES","DO_CREATE_USER_RES","DO_DELETE_USER_RES","DO_UPDATE_USER_RES","DO_USER_APPROVED_RES","FETCH_All_COUNTRY_RES","FETCH_All_STATE_RES","FETCH_All_CITY_RES","FETCH_All_APPLICATION_RES","CREATE_APPLICATION_RES","UPDATE_APPLICATION_RES","DELETE_APPLICATION_RES","UPLOAD_APPLICATION_ICON_RES","CREATE_NOTIFICATION_RES","DO_ALL_SEARCH_USERS_RES","DO_USER_APPROVE_APP_RES","DO_RESETPASSWORD_RES","DO_CREATE_ADMIN_RES","DO_APP_ADMIN_RES","DELETE_ADMIN_RES","DO_CHECK_USER_RES","FETCH_NOVUSBI_RES","DO_NOVUSBI_ARTICLE_RES","DO_NOVUSBI_ARTICLE_UPDATE_RES","FETCH_CONTENTLIST_RES","FETCH_CATEGORYLIST_RES","FETCH_ALLCATEGORYLIST_RES","FETCH_COMMENTLIST_RES","FETCH_TRASHLIST_RES","FETCH_SUBCATEGORYLIST_RES","FETCH_ARTICLELIST_RES","UPDATE_CONTENT_RES","UPDATE_CATEGORY_RES","UPDATE_SUBCATEGORY_RES","DELETE_CATEGORYLIST_RES","DELETE_CONTENTLIST_RES","STATUS_CONTENTLIST_RES","CREATE_CATEGORY_RES","BANNER_LIST_RES","DELETE_BANNERLIST_RES","CREATE_BANNER_RES","UPDATE_BANNER_RES","BASE_URL","loginApi","data","sendBody","email","password","encrypted_password","body","method","headers","Headers","Content-Type","Accept","JSON","stringify","fetch","then","response","json","catch","error","doLoginRes","user","type","types","lower","toLowerCase","renderField","_ref","input","label","_ref$meta","meta","touched","react_default","a","createElement","Object","assign","className","placeholder","LoginForm","_this","classCallCheck","this","_super","call","showHidePass","setState","showPasshword","state","props","reset","_this$props","handleSubmit","handleFormSubmit","pristine","submitting","onSubmit","Field","name","component","autoComplete","normalize","onClick","aria-hidden","react_router_dom","to","disabled","React","PureComponent","mapStateToProps","createStructuredSelector","ReduxLoginForm","reduxForm","form","fields","validate","values","errors","destroyOnUnmount","enableReinitialize","keepDirtyOnReinitialize","touchOnBlur","connect","dispatch","ownProps","LoginComponent","isLoader","client_ip","remainingDay","nextProps","loginRes","success","window","location","href","setTimeout","sendRequest","_this2","spinner","src","loaderImg","alt","react_loader_advanced_default","show","message","logoImg","login_Form_form","withConnect","doLogin","token","fullname","role_id","application_data","app_id","app_name","Swal","fire","title","confirmButtonText","allowOutsideClick","timer","console","log","submit_login","compose","ForgotpasswordForm","forgotPasswordApi","ok","doForgotpasswordRes","ForgetPasswordComponent","style","textAlign","fontSize","color","forgetPasswordForm","forgotpasswordRes","doForgotpassword","submitForgotpassword","usersApi","TOKEN","ajaxRequestHeaders","Authorization","status","clear","logout","doUserAllRes","getAllUsers","UsersApi","doUserAll","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","result","page","LayoutWrapper","toggleLeftSidebar","leftSidebar","goCustomer","fullName","appName","pathname","split","adminApp","geturl","url","open","width","height","Helmet_default","data-attr","id","data-parent","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","children","userApprovedApi","doUserApprovedRes","deleteUserApi","doDeleteUserRes","ApplicationApi","getAllApplicationRes","fetchAllApplication","getAllApplication","userApproveAppApi","doUserApproveAppRes","checkUserApi","doCheckUserRes","checkUserName","doCheckUser","isApprove","isDelete","userRole","isUserAvailable","UsersComponent","approvedUser","isSubmited","keys","length","selectedUsr","selectedUserList","i","application_name","payReq","create_user","user_id","selectedUserId","approveAppUser","deleteUser","payLoad","userId","deleteUserRecord","isdisabled","updateUser","history","push","userData","actionUpdateTemplate","rowData","openDeleteModal","actionAddressTemplate","address1","address2","statusTemplate","openDeleteUserModal","cancelDeleteUser","openApproved","appUserName","app_user","_step","_iterator","createForOfIteratorHelper","applicationList","s","n","done","_step2","item","_iterator2","app","application_id","e","f","_step3","_iterator3","applicationName","openApprovedModal","closeApproved","applicationId","userName","closeErrorModal","openErrorModal","addApproved","isSubmitedUser","validateUser","requestData","UserName","removeApproved","uiRender","index","indexOf","removeData","slice","concat","actionApproveTemplate","globalFilter","usersList","actionTemplate","bind","assertThisInitialized","approveDisapprove","createApproved","getUsers","allApplicationRes","allUsersRes","allUser","userApproveAppRes","userApproveApp","checkUserRes","checkUser","localArray","isTrue","_step4","_iterator4","_step5","_iterator5","user_name","localArr","_step6","_iterator6","Number","_step7","_iterator7","payloadReq","updateUserStatus","defineProperty","target","column","_this3","_this4","_this$state","errorsUser","Header","tableHeader","margin","onInput","size","component_LayoutWrapper","header","createUser","paddingLeft","paddingRight","paddingTop","paddingBottom","DataTable","global","Filter","paginator","rows","responsive","scrollable","emptyMessage","Column","field","sortable","index_es","onClose","center","marginTop","onChange","map","opp","j","readOnly","date","doUserApproved","deleteUserDetails","doUserApproveApp","DeleteApplicationApi","doDeleteAppRes","deleteApplicationRecord","doDeleteApp","ApplicationsComponent","goUpdateApplication","appData","deleteApp","isDisabled","payload","appId","openDeleteApp","openDeleteAppModal","cancelDeleteApp","actionIconTemplate","adminActionTemplate","goToAdmin","applicationData","renderUI","parse","app_icon","itemArr","deleteApplication","createApp","createUserApi","countryid","stateId","doCreateUserRes","doAllCountryRes","getAllCountry","fetchAllCountry","doAllStateRes","getAllState","fetchAllState","doAllCityRes","getAllCity","fetchAllCity","company","country","city","zipcode","CreateUserComponent","handleBack","handleChange","countryChange","selectedCountry","original","stateChange","selectedState","state_id","cityChange","selectedCity","remData","notifydelete","notify","toast","position","POSITION","BOTTOM_RIGHT","countryList","stateList","cityList","handleKeypress","characterCode","characterNumber","currentTarget","preventDefault","countriesList","citylist","createUserRes","countryListOptions","country_name","stateListOptions","state_name","cityListOptions","city_name","city_id","BackIcon","min","step","onKeyDown","onkeydown","react_select_browser_esm","options","react_toastify","doCreateUser","submitCreateUser","editUserApi","doEditUserRes","isCountry","isState","isCity","isApplication","EditUserComponent","goBack","userDetails","appUser","items","selectedCountryObject","selectedStateObject","selectedCityObject","_step8","_iterator8","_step9","_iterator9","_step10","_iterator10","doEditUser","submitUpdateUser","CreateApplicationApi","doCreateApplicationRes","UploadAppIconApi","file","FormData","append","mimeType","doUploadAppIconRes","uploadAppIcon","doUploadAppIcon","CreateApplicationComponent","_isMounted","selectedCon","selectedCountries","join","selectedUser","handleFileChange","files","uploadImage","userChange","imageurl","createAppRes","createApplication","userListOptions","accept","isMulti","doCreateApplication","submitCreateApplication","UpdateApplicationApi","doUpdateAppRes","UpdateApplicationComponent","selectedCou","countries","appDetails","selected_countries","selectedcn","countryD","updateAppRes","uploadApplication","doUpdateApp","submitUpdateApplication","usersSearchApi","doUserAllSearchRes","CreateNotificationApi","doCreateNotificationRes","groupValue","isSend","CreateNotificationComponent","selected_user","type_message","handleInputChange","isSearchLoading","getAllSearchUsers","changeGroup","showUserList","userSearch","createNotificationRes","createNotification","op","onInputChange","doCreateNotification","submitCreateNotification","doUserSearchAll","resetPasswordApi","reset_password_token","doResetpasswordRes","ResetPasswordForm","changePasswordButton","changeTextPass","ReduxResetPasswordForm","submitSucceeded","marginBottom","ResetPasswordComponent","resetpasswordtoken","pathArray","resetpasswordForm","resetpasswordRes","doResetpassword","reset_password","AdminApi","doAppAdminRes","DeleteAdminApi","doDeleteAdminRes","AdminDetailsComponent","admin_id","adminId","deleteAdmin","adminList","selectAdminData","getAppAdminList","appAdminRes","adminDetails","payLoadData","createAdmin","doAppAdmin","get_app_admin","doDeleteAdmin","delete_admin","createAdminApi","doCreateAdminRes","CreateAdminComponent","createAdminRes","access_application_id","doCreateAdmin","create_admin","NovusBiApi","getnovusBiRes","NovusBiComponent","onSelectionChange","wmsList","actionStatusTemplate","_React$createElement","_React$createElement2","opened","toggleBox","primereact_button","iconPos","toggleBtn1","toggleBtn2","toggleBtn3","novusBiList","fetchnovusBi","novusBiRes","novusBi","sortMode","editable","selection","selectionMode","novusBiApi","getnovusBi","CreateCategoryApi","doCreateCategoryRes","submitCreateCategory","doCreateCategory","category_name","NovusBiCreateComponent","parent_id","cat_id","fileUploadProcess","onBasicUploadAuto","event","xhr","iconName","path","iconError","categoryTitle","createCategory","fileupload","onProgress","mode","maxFileSize","onUpload","auto","chooseLabel","novusBiArticleApi","donovusBiArticleRes","AllCategoryListApi","getallcategoryListRes","fetchallcategoryList","getAllcategoryList","editorArray","NovusBiArticleComponent","selectAuthor","authorInput","authorSelect","author","authorVal","onBasicUploadThumb","thumbname","thumbnail","thumbnailError","editorBtn","splice","quote","categories","catName","category","vals","valsName","mainTitle","content","categories_name","heighlight","resume","comment","pdf","contentUploadAudio","uploadName","titleChange","typeSelect","cats","categoryList","backCat","soundShow","articleShow","remove","uploader","editor","embed","showMenu","showMenuSection","Date","pdfName","pdfError","uploadUrl","UploaderError","authorShow","closeMenu","closeMenuSection","document","addEventListener","dropdownMenu","contains","removeEventListener","_this5","dropdownMenusec","_this6","contant_id","contant","higlight","parseInt","_this7","allCategoryListRes","allCategoryList","cat","subitem","ArticleAppRes","novusBiArticle","sidx","htmlValue","aria-label","_this8","renderHeader","inputtext","editorVal","onTextChange","handleEditorChange","maxWidth","contentUploadImage","inputtextarea","handleEmbadeChange","controls","dropdown","optionLabel","multiselect","optionValue","minWidth","filter","filterPlaceholder","calendar","touchUI","showIcon","showTime","showSeconds","primereact_checkbox","checked","htmlFor","tooltip","tooltipoptions","cols","inputswitch","donovusBiArticle","submitnovusBiArticle","ContentList","getcontentListRes","DeleteContentListApi","doDeleteContentRes","deleteContentListRecord","StatusContentListApi","doStatusContentRes","isUpdate","ContentListComponent","ChangeStatus","statusContentListRecord","actionTypeTemplate","selectCatButton","catTemplate","option","float","fontWeight","child","moment","format","contentList","backupContentList","includes","selectCatChange","showSubCat","selectCategory","allSection","selectContentType","cont","backupCat","typeContent","dumCat","fetchcontentList","mats","c","_i","_cats","dts","k","contentListRes","click","hideCats","sub","skey","contentListApi","getcontentList","doStatusApp","CategoryListApi","getcategoryListRes","DeleteCategoryListApi","CategoryListComponent","categorysList","deleteCategoryListRecord","getSubCategory","goAddSubCategory","viewTemplate","fetchcategoryList","categoryListRes","deleteCategoryList","data-placement","rowsPerPageOptions","categoryListApi","getcategoryList","CommentListApi","getcommentListRes","CommentListComponent","commentListList","fetchcommentList","commentListRes","commentList","commentListApi","getcommentList","TrashListApi","gettrashListRes","TrashListComponent","trashListList","fetchtrashList","trashListRes","trashList","class","trashListApi","gettrashList","SubCategoryListApi","getsubCategoryListRes","DeleteSubCategoryListApi","SubCategoryListComponent","scategoryList","deleteSubCategoryListRecord","subcat_id","columns","CategoryName","subCategoryList","fetchsubCategoryList","subCategoryListRes","subCategoryListApi","getsubCategoryList","ArticleListApi","getarticleListRes","ArticleListComponent","articleList","fetcharticleList","articleListRes","articleListApi","getarticleList","UpdateContentApi","UpdateContentComponent","uploadContent","submitUpdateContent","UpdateCategoryApi","UpdateCategoryComponent","iconNameArr","updateCategory","submitUpdateCategory","UpdateSubCategoryApi","doUpdateSubAppRes","UpdateSubCategoryComponent","subcategory_name","updateSubCategory","submitUpdateSubCategory","CreateCategoryComponent","novusBiUpdateArticleApi","donovusBiUpdateArticleRes","NovusBiArticleUpdateComponent","ArticleUpdateAppRes","novusBiArticleUpdate","donovusBiUpdateArticle","submitnovusBiUpdateArticle","BannerListApi","getBannerListRes","DeleteBannerListApi","doDeleteBannerRes","BannerListComponent","BannersList","banner_id","deleteBannerListRecord","banner_image","goAddSubBanner","BannerList","Banner_name","fetchBannerList","BannerListRes","bannerList","deleteBannerList","getSubBanner","bannerListApi","getbannerList","doDeleteBanner","CreateBannerApi","doCreateBannerRes","description","BannerCreateComponent","createBannerRes","createBanner","doCreateBanner","submitCreateBanner","UpdateBannerApi","doUpdateBannerRes","descripiton","isDone","UpdateBannerComponent","updateBanner","doUpdateBanner","submitUpdateBanner","App","Fragment","react_router","exact","render","SubCategoryList","ArticleList","UpdateContent","UpdateCategory","UpdateSubCategory","CreateCategory","bannerCreate","Boolean","hostname","match","initialState","combineReducers","formReducer","arguments","action","novusBiCreate","updateContent","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdcdc2201.3.0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader-example.3886920c.gif\";","module.exports = __webpack_public_path__ + \"static/media/icon-left.0ea4be34.svg\";","module.exports = __webpack_public_path__ + \"static/media/novusone-logo.6b9fef02.png\";","module.exports = __webpack_public_path__ + \"static/media/subimg1.c3137dfc.PNG\";","export const setItem = (key, value) => {\r\n    try {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }catch(err){\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const getItem = (key) => {\r\n    try{\r\n        let serializedItem = localStorage.getItem(key); \r\n        if(serializedItem !== undefined || serializedItem !== null){\r\n            return serializedItem;\r\n        }else{\r\n            return false;\r\n        }\r\n    }catch(err){\r\n        return false;\r\n    }\r\n}","export const DO_LOGIN = 'DO_LOGIN';\r\nexport const DO_LOGIN_RES = 'DO_LOGIN_RES';\r\n\r\nexport const DO_FORGOTPASSWORD = 'DO_FORGOTPASSWORD';\r\nexport const DO_FORGOTPASSWORD_RES = 'DO_FORGOTPASSWORD_RES';\r\n\r\nexport const DO_ALL_USERS = 'DO_ALL_USERS';\r\nexport const DO_ALL_USERS_RES = 'DO_ALL_USERS_RES';\r\n\r\nexport const DO_CREATE_USER = 'DO_CREATE_USER';\r\nexport const DO_CREATE_USER_RES = 'DO_CREATE_USER_RES';\r\n\r\nexport const DO_DELETE_USER = 'DO_DELETE_USER';\r\nexport const DO_DELETE_USER_RES = 'DO_DELETE_USER_RES';\r\n\r\nexport const DO_UPDATE_USER = 'DO_UPDATE_USER';\r\nexport const DO_UPDATE_USER_RES = 'DO_UPDATE_USER_RES';\r\n\r\nexport const DO_USER_APPROVED = 'DO_USER_APPROVED';\r\nexport const DO_USER_APPROVED_RES = 'DO_USER_APPROVED_RES';\r\n\r\nexport const FETCH_All_COUNTRY = 'FETCH_All_COUNTRY';\r\nexport const FETCH_All_COUNTRY_RES = 'FETCH_All_COUNTRY_RES';\r\n\r\nexport const FETCH_All_STATE = 'FETCH_All_STATE';\r\nexport const FETCH_All_STATE_RES = 'FETCH_All_STATE_RES';\r\n\r\nexport const FETCH_All_CITY = 'FETCH_All_CITY';\r\nexport const FETCH_All_CITY_RES = 'FETCH_All_CITY_RES';\r\n\r\nexport const FETCH_All_APPLICATION = 'FETCH_All_APPLICATION';\r\nexport const FETCH_All_APPLICATION_RES = 'FETCH_All_APPLICATION_RES';\r\n\r\nexport const CREATE_APPLICATION = 'CREATE_APPLICATION';\r\nexport const CREATE_APPLICATION_RES = 'CREATE_APPLICATION_RES';\r\n\r\nexport const UPDATE_APPLICATION = 'UPDATE_APPLICATION';\r\nexport const UPDATE_APPLICATION_RES = 'UPDATE_APPLICATION_RES';\r\n\r\nexport const DELETE_APPLICATION = 'DELETE_APPLICATION';\r\nexport const DELETE_APPLICATION_RES = 'DELETE_APPLICATION_RES';\r\n\r\nexport const UPLOAD_APPLICATION_ICON = 'UPLOAD_APPLICATION_ICON';\r\nexport const UPLOAD_APPLICATION_ICON_RES = 'UPLOAD_APPLICATION_ICON_RES';\r\n\r\nexport const CREATE_NOTIFICATION = 'CREATE_NOTIFICATION';\r\nexport const CREATE_NOTIFICATION_RES = 'CREATE_NOTIFICATION_RES';\r\n\r\nexport const DO_ALL_SEARCH_USERS = 'DO_ALL_SEARCH_USERS';\r\nexport const DO_ALL_SEARCH_USERS_RES = 'DO_ALL_SEARCH_USERS_RES';\r\n\r\nexport const DO_USER_APPROVE_APP = 'DO_USER_APPROVE_APP';\r\nexport const DO_USER_APPROVE_APP_RES = 'DO_USER_APPROVE_APP_RES';\r\n\r\nexport const DO_RESETPASSWORD = 'DO_RESETPASSWORD';\r\nexport const DO_RESETPASSWORD_RES = 'DO_RESETPASSWORD_RES';\r\n\r\nexport const DO_CREATE_ADMIN = 'DO_CREATE_ADMIN';\r\nexport const DO_CREATE_ADMIN_RES = 'DO_CREATE_ADMIN_RES';\r\n\r\nexport const DO_APP_ADMIN = 'DO_APP_ADMIN';\r\nexport const DO_APP_ADMIN_RES = 'DO_APP_ADMIN_RES';\r\n\r\nexport const DELETE_ADMIN = 'DELETE_ADMIN';\r\nexport const DELETE_ADMIN_RES = 'DELETE_ADMIN_RES';\r\n\r\nexport const DO_CHECK_USER = 'DO_CHECK_USER';\r\nexport const DO_CHECK_USER_RES = 'DO_CHECK_USER_RES';\r\n\r\nexport const FETCH_NOVUSBI = 'FETCH_NOVUSBI';\r\nexport const FETCH_NOVUSBI_RES = 'FETCH_NOVUSBI_RES';\r\n\r\nexport const DO_NOVUSBI_CREATE = 'DO_NOVUSBI_CREATE';\r\nexport const DO_NOVUSBI_CREATE_RES = 'DO_NOVUSBI_CREATE_RES';\r\n\r\nexport const DO_NOVUSBI_ARTICLE = 'DO_NOVUSBI_ARTICLE';\r\nexport const DO_NOVUSBI_ARTICLE_RES = 'DO_NOVUSBI_ARTICLE_RES';\r\n\r\nexport const DO_NOVUSBI_ARTICLE_UPDATE = 'DO_NOVUSBI_ARTICLE_UPDATE';\r\nexport const DO_NOVUSBI_ARTICLE_UPDATE_RES = 'DO_NOVUSBI_ARTICLE_UPDATE_RES';\r\n\r\nexport const FETCH_CONTENTLIST = 'FETCH_CONTENTLIST';\r\nexport const FETCH_CONTENTLIST_RES = 'FETCH_CONTENTLIST_RES';\r\n\r\nexport const FETCH_CATEGORYLIST = 'FETCH_CATEGORYLIST';\r\nexport const FETCH_CATEGORYLIST_RES = 'FETCH_CATEGORYLIST_RES';\r\n\r\nexport const FETCH_ALLCATEGORYLIST = 'FETCH_ALLCATEGORYLIST';\r\nexport const FETCH_ALLCATEGORYLIST_RES = 'FETCH_ALLCATEGORYLIST_RES';\r\n\r\nexport const FETCH_COMMENTLIST = 'FETCH_COMMENTLIST';\r\nexport const FETCH_COMMENTLIST_RES = 'FETCH_COMMENTLIST_RES';\r\n\r\nexport const FETCH_TRASHLIST = 'FETCH_TRASHLIST';\r\nexport const FETCH_TRASHLIST_RES = 'FETCH_TRASHLIST_RES';\r\n\r\nexport const FETCH_SUBCATEGORYLIST = 'FETCH_SUBCATEGORYLIST';\r\nexport const FETCH_SUBCATEGORYLIST_RES = 'FETCH_SUBCATEGORYLIST_RES';\r\n\r\nexport const FETCH_ARTICLELIST = 'FETCH_ARTICLELIST';\r\nexport const FETCH_ARTICLELIST_RES = 'FETCH_ARTICLELIST_RES';\r\n\r\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\r\nexport const UPDATE_CONTENT_RES = 'UPDATE_CONTENT_RES';\r\n\r\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nexport const UPDATE_CATEGORY_RES = 'UPDATE_CATEGORY_RES';\r\n\r\nexport const UPDATE_SUBCATEGORY = 'UPDATE_SUBCATEGORY';\r\nexport const UPDATE_SUBCATEGORY_RES = 'UPDATE_SUBCATEGORY_RES';\r\n\r\nexport const DELETE_CATEGORYLIST = 'DELETE_CATEGORYLIST';\r\nexport const DELETE_CATEGORYLIST_RES = 'DELETE_CATEGORYLIST_RES';\r\n\r\nexport const DELETE_SUBCATEGORYLIST = 'DELETE_SUBCATEGORYLIST';\r\nexport const DELETE_SUBCATEGORYLIST_RES = 'DELETE_SUBCATEGORYLIST_RES';\r\n\r\nexport const DELETE_CONTENTLIST = 'DELETE_CONTENTLIST';\r\nexport const DELETE_CONTENTLIST_RES = 'DELETE_CONTENTLIST_RES';\r\n\r\nexport const STATUS_CONTENTLIST = 'STATUS_CONTENTLIST';\r\nexport const STATUS_CONTENTLIST_RES = 'STATUS_CONTENTLIST_RES';\r\n\r\nexport const CREATE_CATEGORY = 'CREATE_CATEGORY';\r\nexport const CREATE_CATEGORY_RES = 'CREATE_CATEGORY_RES';\r\n\r\nexport const BANNER_LIST = 'BANNER_LIST';\r\nexport const BANNER_LIST_RES = 'BANNER_LIST_RES';\r\n\r\nexport const DELETE_BANNERLIST = 'DELETE_BANNERLIST';\r\nexport const DELETE_BANNERLIST_RES = 'DELETE_BANNERLIST_RES';\r\n\r\nexport const CREATE_BANNER = 'CREATE_BANNER';\r\nexport const CREATE_BANNER_RES = 'CREATE_BANNER_RES';\r\n\r\nexport const UPDATE_BANNER = 'UPDATE_BANNER';\r\nexport const UPDATE_BANNER_RES = 'UPDATE_BANNER_RES';\r\n\r\n\r\n","\r\nexport const BASE_URL = 'http://3.132.68.85:3000/api';\r\n \r\n \r\n \r\n \r\n","\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass loginApi {\r\n\r\n    static doLogin(data) {\r\n        let sendBody={\r\n            email:data.email,\r\n            password:data.encrypted_password\r\n        }\r\n\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            });\r\n            let body = {\r\n                method: 'post',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/superlogin', body).then(response => {\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default loginApi;\r\n","import * as types from './actionTypes';\r\nimport loginApi from '../api/loginApi';\r\nimport Swal from 'sweetalert2';\r\nimport { setItem } from '../utils/localStore';\r\n// import {logout} from '../helper/helper';\r\n\r\nexport function doLogin(data) {\r\n\r\n  return {\r\n    type: types.DO_LOGIN, \r\n    data\r\n  };\r\n}\r\n\r\nexport function doLoginRes(user) {  \r\n  return {\r\n    type: types.DO_LOGIN_RES,\r\n    user\r\n  };\r\n}\r\n\r\nexport function submit_login(data) {\r\n  return function(dispatch) {\r\n    loginApi.doLogin(data).then(user => {\r\n      if (user.success === true) {\r\n        let token = `Bearer `+user.token\r\n        setItem('auth_token', token);\r\n        setItem('userName', user.data.fullname);\r\n        setItem('userRoleId', user.data.role_id);\r\n        if (user.data.application_data) {\r\n          setItem('adminAppData', JSON.stringify(user.data.application_data));\r\n          setItem('adminAppId', user.data.application_data.app_id);\r\n          setItem('adminAppName', user.data.application_data.app_name);\r\n        }\r\n        dispatch(doLoginRes(user));\r\n        dispatch(doLoginRes(null));\r\n      } else {\r\n        Swal.fire({\r\n          title: user.message,\r\n          type: 'error',\r\n          confirmButtonText: 'OK',\r\n          allowOutsideClick: false,\r\n          timer: 3000\r\n        })\r\n      }\r\n\r\n      if(user.error){\r\n        Swal.fire({\r\n          title: user.message,\r\n          type: 'error',\r\n          confirmButtonText: 'OK',\r\n          allowOutsideClick: false,\r\n          timer: 3000\r\n        })\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n      return error\r\n    });\r\n  };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { doLoginRes } from '../../../action/loginActions';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './form.scss';\r\n\r\nconst fields = ['email', 'encrypted_password'];\r\nconst lower = value => value && value.toLowerCase();\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n    if (!values.email) {\r\n        errors.email = 'Please enter email'\r\n    }\r\n    if (!values.encrypted_password) {\r\n        errors.encrypted_password = 'Please enter password'\r\n    }\r\n    return errors\r\n}\r\n\r\n\r\nclass LoginForm extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showPasshword: false,\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps) {\r\n    //     if(nextProps){\r\n    //         console.log(nextProps);\r\n    //         if(nextProps.doLoginRes.user.form.ReduxLoginForm.submitSucceeded === true){\r\n    //             this.props.reset();\r\n    //         }\r\n    //     }\r\n    // }\r\n    showHidePass = () => {\r\n        this.setState({\r\n            showPasshword: !this.state.showPasshword\r\n        },()=>{ })\r\n    }\r\n    render() {\r\n        const { handleSubmit, handleFormSubmit, pristine, submitting } = this.props\r\n        return (\r\n            <form onSubmit={handleSubmit(handleFormSubmit)} className=\"form-content\">\r\n                <div className=\"small-12 columns error_message form_field_wrapper email_feild_wrapper\">\r\n                    <Field\r\n                        name=\"email\"\r\n                        component={renderField}\r\n                        label=\"Enter Email\"\r\n                        autoComplete=\"off\"\r\n                        type=\"email\"\r\n                        normalize={lower}\r\n                    />\r\n                </div>\r\n                <div className=\"small-12 columns error_message form_field_wrapper password_feild_wrapper\">\r\n                    <Field\r\n                        name=\"encrypted_password\"\r\n                        component={renderField}\r\n                        label=\"Enter Password\"\r\n                        autoComplete=\"off\"\r\n                        type={this.state.showPasshword ? \"text\" : \"password\"}\r\n                    />\r\n                    {\r\n                        this.state.showPasshword &&\r\n                        <p onClick={this.showHidePass}>\r\n                            <i className=\"fa fa-eye eye_icon\" aria-hidden=\"true\"></i>\r\n                        </p>\r\n                    }\r\n                    {\r\n                        !this.state.showPasshword &&\r\n                        <span onClick={this.showHidePass}>\r\n                            <i className=\"fa fa-eye-slash eye_icon\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <div className=\"forget_password\">\r\n                    <Link to=\"/forgetpassword\">\r\n                        <span>Forgot Password?</span>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary login_button\" disabled={pristine || submitting}>Submit</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitting: PropTypes.bool,\r\n    handleFormSubmit: PropTypes.func,\r\n    doLoginRes: PropTypes.any\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n    doLoginRes: doLoginRes\r\n});\r\n  \r\nfunction mapDispatchToProps(dispatch,ownProps) {\r\n    return {\r\n        \r\n    };\r\n}\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'ReduxLoginForm',\r\n    fields,\r\n    validate,\r\n    destroyOnUnmount: false,\r\n    enableReinitialize: true,\r\n    keepDirtyOnReinitialize: true,\r\n    touchOnBlur: false,\r\n})(LoginForm)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxLoginForm);\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './login.scss';\r\nimport LoginForm from './Form/form';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\nimport { submit_login, doLoginRes } from '../../action/loginActions';\r\n// import { setItem, getItem } from '../../utils/localStore';\r\nimport Loader from 'react-loader-advanced';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\n\r\nclass LoginComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoader: false,\r\n            client_ip: null,\r\n            remainingDay: '',\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.loginRes.user.user) {\r\n            if (nextProps.loginRes.user.user && nextProps.loginRes.user.user.data) {\r\n                if (nextProps.loginRes.user.user.success === true) {\r\n                    window.location.href=\"/users\";\r\n                }\r\n            } else {\r\n                setTimeout(this.setState({\r\n                    isLoader: false,\r\n                }), 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit(data) {\r\n        let sendRequest = data;\r\n        this.setState({\r\n            isLoader: true,\r\n        })\r\n        this.props.handleFormSubmit(sendRequest);\r\n    };\r\n\r\n    render() {\r\n\t\tconst spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        return (\r\n            <Loader show={this.state.isLoader} message={spinner}>\r\n                <div className=\"login_content\">\r\n                    <div className=\"login_content_inner\">\r\n                        <div className=\"login_content_inner_head\">\r\n                            <div className=\"company_logo\">\r\n                                <img src={logoImg} alt=\"\"  />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"login_content_inner_body\">\r\n                            <div className=\"login_content_inner_body_inner\">\r\n                                {/* <div className=\"user_icon\"><i className=\"fa fa-user-o\"></i></div> */}\r\n                                <div className=\"login_heading\">\r\n                                    Novus Login\r\n                                </div>\r\n                                <div className=\"form_content_login\">\r\n                                    <LoginForm handleFormSubmit={(data) => { this.handleSubmit(data) }} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Loader>\r\n        )\r\n    }\r\n}\r\n\r\nLoginComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    loginRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    loginRes: doLoginRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submit_login(data))\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(LoginComponent);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst fields = ['email'];\r\nconst lower = value => value && value.toLowerCase();\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nfunction validate(values) {\r\n    const errors = {}\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    }\r\n    return errors\r\n}\r\n\r\nclass ForgotpasswordForm extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, handleFormSubmit, pristine, submitting } = this.props\r\n        return (\r\n            <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                <div className=\"small-12 columns error_message form_field_wrapper email_feild_wrapper\">\r\n                    <Field\r\n                        name=\"email\"\r\n                        component={renderField}\r\n                        label=\"Enter Email\"\r\n                        autoComplete=\"off\"\r\n                        type=\"email\"\r\n                        normalize={lower}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary login_button\" disabled={pristine || submitting}>Submit</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nForgotpasswordForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitting: PropTypes.bool,\r\n    handleFormSubmit: PropTypes.func,\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'ReduxForgotpasswordForm',\r\n    fields,\r\n    validate,\r\n    destroyOnUnmount: false,\r\n    enableReinitialize: true,\r\n    keepDirtyOnReinitialize: true,\r\n    touchOnBlur: false,\r\n})(ForgotpasswordForm)","\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass forgotPasswordApi {\r\n    static doForgotpassword(data) {\r\n\r\n        let sendBody={\r\n            email:data.email\r\n        }\r\n\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/sendResetPasswordLink', body).then(response => {\r\n                if(response.ok === true){\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default forgotPasswordApi;","import * as types from './actionTypes';\r\nimport forgotPasswordApi from '../api/forgotPasswordApi';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport function doForgotpassword(data) {\r\n  return {\r\n    type: types.DO_FORGOTPASSWORD,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doForgotpasswordRes(user) {\r\n  return {\r\n    type: types.DO_FORGOTPASSWORD_RES,\r\n    user\r\n  };\r\n}\r\n\r\nexport function submitForgotpassword(data) {\r\n  return function(dispatch) {\r\n    forgotPasswordApi.doForgotpassword(data).then(user => {\r\n      dispatch(doForgotpasswordRes(user));\r\n      if(user.error){\r\n        Swal.fire({\r\n          title: user.message,\r\n          type: 'error',\r\n          confirmButtonText: 'OK',\r\n          allowOutsideClick: false,\r\n          timer: 3000\r\n        })\r\n      }\r\n    }).catch(error => {\r\n      return error\r\n    });\r\n  };\r\n}","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Link } from 'react-router-dom';\r\nimport './forgetPassword.scss';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\nimport ForgotpasswordForm from './forgetpasswordForm/forgetPasswordForm';\r\nimport { submitForgotpassword, doForgotpasswordRes } from '../../action/forgotPasswordActions';\r\n// import { ToastContainer } from 'react-toastify';\r\n\r\nclass ForgetPasswordComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    handleSubmit(data) {\r\n        let sendRequest = {\r\n            \"email\" : data.email\r\n        }\r\n        this.props.handleFormSubmit(sendRequest);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forgetpassword_content login_content\">\r\n                <div className=\"login_content_inner\">\r\n                    <div className=\"login_content_inner_head\">\r\n                        <div className=\"company_logo\">\r\n                            <img src={logoImg} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"login_content_inner_body\">\r\n                        <div className=\"login_content_inner_body_inner\">\r\n                            {/* <div className=\"user_icon\"><i className=\"fa fa-user-o\"></i></div> */}\r\n                            <div className=\"forgetpassword_heading login_heading\">\r\n                                Forgot Password\r\n                            </div>\r\n                            <div className=\"form_content_forgetpassword\">\r\n                                <p style={{ textAlign: 'center', fontSize: '15px', color: '#fff' }}>Submit your email and we'll send you a link to reset it.</p>\r\n                                <ForgotpasswordForm handleFormSubmit={(data) => { this.handleSubmit(data) }} />\r\n                            </div>\r\n                            <div className=\"row mt-35px\">\r\n                                <div className=\"col col-12 login_forgot\">\r\n                                    <Link to={\"/\"} className=\"text-decoration-none\">\r\n                                        <span>Login?</span>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <ToastContainer /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nForgetPasswordComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    forgotpasswordRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    forgotpasswordRes: doForgotpasswordRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitForgotpassword(data))\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ForgetPasswordComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass usersApi {  \r\n    static doUserAll() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/user_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default usersApi;","\r\nimport { getItem } from '../utils/localStore';\r\n\r\nexport const logout=() =>{\r\n    localStorage.clear();\r\n    window.location.href = '/';\r\n}\r\n\r\nexport const checkLogin=() =>{\r\n    const TOKEN = getItem('auth_token');\r\n    if(TOKEN !== undefined || TOKEN !== null){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function dollarAmountFormat (input) {\r\n    if(input) {\r\n        if(input.length>0){\r\n            return '$' +(input[0]).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        } else {\r\n            return '$' +(input).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        }\r\n    } else {\r\n        return '$0.00'\r\n    }\r\n}\r\n\r\nexport function numberWithCommas(number)  {\r\n    return String(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n}\r\nexport function numberWithCommasAndDollar(number)  {\r\n    if (number === null) {\r\n        return '$0'\r\n    } else {\r\n        return '$' +String(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n    }\r\n}\r\n\r\nexport function dateFormat(date){\r\n    if (!date) return null;\r\n    let dateNew = {date};\r\n    var monthNames = [\r\n        'Jun', 'Feb', 'Mar',\r\n        'Apr', 'May', 'Jun', 'Jul',\r\n        'Aug', 'Sep', 'Oct',\r\n        'Nov', 'Dec',\r\n    ];\r\n    let splitTimeDate = dateNew.date.split(' ')\r\n    let splitDate = splitTimeDate[0].split('-')\r\n    let day = splitDate[2];\r\n    let monthIndex = splitDate[1];\r\n    return  monthNames[monthIndex - 1] + ' ' + day;\r\n}\r\nexport function loadScript () {    \r\n    var tag = document.createElement('script');\r\n    tag.async = false;\r\n    tag.innerHTML = \"window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'UA-87376082-2');\";\r\n    document.head.appendChild(tag);\r\n}\r\n\r\nexport function dateTimeFormat(datetime) {\r\n    // eslint-disable-next-line no-unused-expressions\r\n    if (datetime !== null && datetime !== '' && datetime !== undefined) {\r\n      let d = datetime;\r\n      return d.getFullYear() + '-' +\r\n      ('00' + (d.getMonth() + 1)).slice(-2) + '-' +\r\n      ('00' + d.getDate()).slice(-2) + ' ' +\r\n      ('00' + d.getHours()).slice(-2) + ':' +\r\n      ('00' + d.getMinutes()).slice(-2) + ':' +\r\n      ('00' + d.getSeconds()).slice(-2);\r\n    } else {\r\n      return 'N/A';\r\n    }\r\n}\r\n","import * as types from './actionTypes';  \r\nimport UsersApi from '../api/userApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserAll() {\r\n\r\n  return {\r\n    type: types.DO_ALL_USERS,\r\n  };\r\n}\r\n\r\nexport function doUserAllRes(data) {  \r\n  return {\r\n    type: types.DO_ALL_USERS_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllUsers() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UsersApi.doUserAll().then(data => {\r\n        dispatch(doUserAllRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport Helmet from 'react-helmet';\r\nimport './layoutwrapper.css';\r\n// import Loader from 'react-loader-advanced';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getItem } from '../../utils/localStore';\r\n// import loaderImg from '../../assets/images/loader-example.gif';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\nimport { doUserAllRes } from '../../action/userActions';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function logout() {\r\n    Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You want to be signout\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n\r\n          localStorage.clear();\r\n            window.location.href = '/';\r\n        }\r\n      })\r\n\r\n    \r\n}\r\n\r\nlet page=\"\";\r\n\r\nclass LayoutWrapper extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoader: true,\r\n            leftSidebar: false,\r\n            fullName: '',\r\n            appName: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        page =window.location.pathname;\r\n        page =page.split('/');\r\n        const fullname = getItem('userName');\r\n        const adminApp = getItem('adminAppName');\r\n        this.setState({\r\n            fullName: fullname,\r\n            appName: adminApp,\r\n            isLoader: true,\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            isLoader: false\r\n        })\r\n    }\r\n\r\n    openurl(geturl) {\r\n        const url = geturl;\r\n        window.open(url, '_blank');\r\n    }\r\n\r\n    toggleLeftSidebar = () => {\r\n        this.setState({\r\n            leftSidebar: !this.state.leftSidebar\r\n        });\r\n    }\r\n\r\n    goCustomer = () => {\r\n        let data = {\r\n            data: []\r\n        }\r\n        this.props.doUserAllRes(data);\r\n    }\r\n    render() {\r\n        // const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        return (\r\n            <div style={{ width: '100%', height: '100vh' }} className={(this.state.isLoader ? 'position-fixed' : '')}>\r\n                {/* <Loader show={this.state.isLoader} message={spinner}> */}\r\n                    <Helmet title={this.props.title} />\r\n                    <div className=\"container-fluid header hidden_under_991px\">\r\n                        <div className=\"row ipo_icon header_inner\">\r\n                            <div className=\"col col-6 align-self-center\">\r\n                                <div className=\"logo\">\r\n                                    <img src={logoImg} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-fluid header visible_under_991px\">\r\n                        <div className=\"row ipo_icon header_inner\">\r\n                            <div className=\"col col-3 align-self-center\">\r\n                                <button className=\"sidebar_toggle_btn left_sidebar_toggle_btn\" onClick={this.toggleLeftSidebar}>\r\n                                    <i className=\"fa fa-navicon fa-lg\"></i>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col col-6 align-self-center\">\r\n                                <div className=\"logo\">\r\n                                    <img src={logoImg} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-fluid page_content main_content_wrappper\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-lg-2\" data-attr={this.state.leftSidebar ? 'active' : ''} id=\"left_sidebar\">\r\n                                <div className=\"left_sidebar\">\r\n                                    <div className=\"sidebar_widget left_sidebar_content right_sidebar_content\">\r\n                                        <div className=\"user-name\">\r\n                                            <div className=\"user-name-style\">{this.state.fullName}</div>\r\n                                            {\r\n                                                this.state.appName &&\r\n                                                <div>{this.state.appName} Application</div> \r\n                                            }\r\n                                        </div>\r\n                                        <div className={page[1]==='users' ? 'active' : 'no-class'} onClick={this.goCustomer}>\r\n                                            <NavLink to={\"/users\"} data-parent=\"#sidebar\" >\r\n                                            <i className=\"fa fa-users\" style={{fontSize: '16px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Users</span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div className={page[1]==='applications' ? 'active' : 'no-class'} onClick={this.goCustomer}>\r\n                                            <NavLink to={\"/applications\"} data-parent=\"#sidebar\" >\r\n                                            <i className=\"fa fa-mobile\" style={{fontSize: '32px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Applications</span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div className={page[1]==='notification' ? 'active' : 'no-class'}>\r\n                                            <NavLink to={\"/notification\"} data-parent=\"#sidebar\" >\r\n                                            <i className=\"fa fa-bell\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Notification</span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div  className={(page[1]==='novus-bi-article' || page[1]==='novus-bi-create' || page[1]==='subcategory-list')  ? 'show nav-item dropdown pd-20 layout_left drop_down_cls': 'nav-item dropdown pd-20 layout_left drop_down_cls'}>\r\n                                            <a className=\"nav-link dropdown-toggle link_clr\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fa fa-dashboard\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                            <span className=\"content-name\">Novus BI</span>\r\n                                            </a>\r\n                                            <div className=\"dropdown-menu menu_fontSze\" aria-labelledby=\"navbarDropdown\" >\r\n                                                <div className={(page[1]==='category-list' || page[1]==='novus-bi-create' || page[1]==='subcategory-list' ) ? 'active' : 'no-class'}>\r\n                                                    <NavLink to={\"/category-list\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-newspaper\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">Sections</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                            \r\n                                                <div className={(page[1]==='content-list'|| page[1]==='novus-bi-article') ? 'active' : 'no-class'}>\r\n                                                    <NavLink to={\"/content-list\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-file\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">List of Content</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div className={page[1]==='comment-list' ? 'active' : 'no-class'}>\r\n                                                    <NavLink to={\"/comment-list\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-comments\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">Comments</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div className={page[1]==='trash-list' ? 'active' : 'no-class'}>\r\n                                                    <NavLink to={\"/trash-list\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-trash\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">Trash</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n                                         \r\n\r\n                                                {/* <div>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-pie-chart\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">IMPORTS STATS</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-trophy\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">COMPETITION</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <NavLink to={\"/novus-bi\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-volume-up\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">PODCASTS</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                <div className={page[1]==='novus-bi-article' ? 'active' : 'no-class'}>\r\n                                                    <NavLink to={\"/novus-bi-article\"} data-parent=\"#sidebar\" >\r\n                                                    <i className=\"fa fa-file\" style={{fontSize: '14px'}}  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"content-name\">Novus Bi Article</span>\r\n                                                    </NavLink>\r\n                                                </div>\r\n                                                </div>                                                 */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={page[1]==='banner-list' ? 'active' : 'no-class'} onClick={this.goCustomer}>\r\n                                            <NavLink to={\"/banner-list\"} data-parent=\"#sidebar\" >\r\n                                            <i className=\"fa fa-image\" style={{fontSize: '16px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Banners</span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div className=\"no-class\">\r\n                                            <div onClick={logout} data-parent=\"#sidebar\" className=\"logout_link\">\r\n                                                <i className=\"fa fa-sign-out\" style={{fontSize: '18px'}}  aria-hidden=\"true\"></i>\r\n                                                <span className=\"content-name\">Sign Out</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"divider clearfix\"></div> */}\r\n                                        {/* <div onClick={logout} data-parent=\"#sidebar\" className=\"logout_link\">\r\n                                            <i className=\"fa fa-users\" style={{fontSize: '16px'}}  aria-hidden=\"true\"></i>\r\n                                            <span className=\"content-name\">Sign Out</span>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <main className=\"col-md-12 col-lg-10\">\r\n                                <div className=\"content main_content_box_inner\">\r\n                                    {this.props.children}\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n                    </div>\r\n                {/* </Loader> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLayoutWrapper.propTypes = {\r\n\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        doUserAllRes: (data) => dispatch(doUserAllRes(data)),\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(LayoutWrapper);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass userApprovedApi {  \r\n    static doUserApproved(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/user_approve', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default userApprovedApi;","import * as types from './actionTypes';  \r\nimport userApprovedApi from '../api/userApprovedApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserApproved(data) {\r\n\r\n  return {\r\n    type: types.DO_USER_APPROVED,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUserApprovedRes(data) {  \r\n  return {\r\n    type: types.DO_USER_APPROVED_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function updateUserStatus(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      userApprovedApi.doUserApproved(data).then(data => {\r\n        dispatch(doUserApprovedRes(data));\r\n        dispatch(doUserApprovedRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n","import { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\n\r\nclass deleteUserApi {  \r\n    static deleteUser(data) {\r\n        console.log(data)\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body:JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_delete_user', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default deleteUserApi;","import * as types from './actionTypes';  \r\nimport deleteUserApi from '../api/deleteUserApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport function deleteUser(data) {\r\n  return {\r\n    type: types.DO_DELETE_USER, \r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteUserRes(data) {\r\n  return {\r\n    type: types.DO_DELETE_USER_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteUserDetails(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      deleteUserApi.deleteUser(data).then(data => {\r\n        dispatch(doDeleteUserRes(data));\r\n        dispatch(doDeleteUserRes(null));\r\n        // if(data.error){\r\n        //   Swal.fire({\r\n        //     title: data.message,\r\n        //     type: 'error',\r\n        //     confirmButtonText: 'OK',\r\n        //     allowOutsideClick: false,\r\n        //     timer: 3000\r\n        //   })\r\n        // }\r\n        if(data.success === true){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            icon: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass ApplicationApi {  \r\n    static getAllApplication() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/application_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default ApplicationApi;","import * as types from './actionTypes';  \r\nimport ApplicationApi from '../api/applicationApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getAllApplication() {\r\n\r\n  return {\r\n    type: types.FETCH_All_APPLICATION,\r\n  };\r\n}\r\n\r\nexport function getAllApplicationRes(data) {  \r\n  return {\r\n    type: types.FETCH_All_APPLICATION_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchAllApplication() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      ApplicationApi.getAllApplication().then(data => {\r\n        dispatch(getAllApplicationRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass userApproveAppApi {  \r\n    static doUserApproveApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/AppUserApprove', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default userApproveAppApi;","import * as types from './actionTypes';  \r\nimport userApproveAppApi from '../api/userApproveAppApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserApproveApp(data) {\r\n\r\n  return {\r\n    type: types.DO_USER_APPROVE_APP,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUserApproveAppRes(data) {  \r\n  return {\r\n    type: types.DO_USER_APPROVE_APP_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function approveAppUser(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      userApproveAppApi.doUserApproveApp(data).then(data => {\r\n        dispatch(doUserApproveAppRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n        dispatch(doUserApproveAppRes(null));\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass checkUserApi {  \r\n    static doCheckUser(data) {\r\n        // let payload = {\r\n        //     UserName: data\r\n        // }\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body:JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/ValidateUser', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default checkUserApi;","import * as types from './actionTypes';  \r\nimport checkUserApi from '../api/checkUserApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doCheckUser(data) {\r\n\r\n  return {\r\n    type: types.DO_CHECK_USER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCheckUserRes(data) {  \r\n  return {\r\n    type: types.DO_CHECK_USER_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function checkUserName(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      checkUserApi.doCheckUser(data).then(data => {\r\n        dispatch(doCheckUserRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Loader from 'react-loader-advanced';\r\nimport Modal from \"react-responsive-modal\";\r\nimport './users.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { updateUserStatus, doUserApprovedRes } from '../../action/approvedUserActions'; \r\nimport { deleteUserDetails, doDeleteUserRes } from '../../action/deleteUserActions';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport { approveAppUser, doUserApproveAppRes } from '../../action/approveUserAppActions';\r\nimport { checkUserName, doCheckUserRes } from '../../action/checkUserActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport { getItem } from '../../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nlet isApprove = false;\r\nlet isDelete = false;\r\nlet isApprovedApp = false;\r\nlet userRole = getItem('userRoleId');\r\nlet isUserAvailable = false;\r\n\r\nclass UsersComponent extends React.PureComponent {\r\n  constructor() { \r\n    super();\r\n    isApprove = false;\r\n    isDelete = false;\r\n    isApprovedApp = false;\r\n    isUserAvailable = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      usersList: [],\r\n      openDeleteUserModal: false,\r\n      isdisabled: false,\r\n      openApprovedModal: false,\r\n      applicationList: [],\r\n      isSubmitedUser: false,\r\n      isSubmited: false,\r\n      applicationId: '',\r\n      applicationName: '',\r\n      userName: '',\r\n      selectedUserList: [],\r\n      openErrorModal: false,\r\n      uiRender: false,\r\n      selectedUserId: '',\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n    this.approveDisapprove = this.approveDisapprove.bind(this);\r\n    this.createApproved = this.createApproved.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let userAppGroup = getItem('adminAppId');\r\n    if (userAppGroup !== null) {\r\n      this.setState({\r\n        isLoader: false,\r\n        applicationId: getItem('adminAppId'),\r\n        applicationName: getItem('adminAppName'),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoader: false,\r\n      });\r\n    }\r\n    this.props.getUsers();\r\n    this.props.fetchAllApplication();\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.allApplicationRes) {\r\n\t\t\tif (props.allApplicationRes.data && props.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (props.allApplicationRes.data.applicationList.success===true) {\r\n          this.setState({\r\n            applicationList: props.allApplicationRes.data.applicationList.data\r\n          },()=>{});\r\n        }\r\n      }\r\n    }\r\n    if (props.allUsersRes) {\r\n\t\t\tif (props.allUsersRes.data && props.allUsersRes.data.allUser) {\r\n\t\t\t\tif (props.allUsersRes.data.allUser.success===true) {\r\n          this.setState({\r\n            usersList: props.allUsersRes.data.allUser.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    \r\n    if (props.doUserApprovedRes) {\r\n      if (props.doUserApprovedRes.data && props.doUserApprovedRes.data.approvedUser) {\r\n        if (props.doUserApprovedRes.data.approvedUser.success === true && isApprove) {\r\n          isApprove = false;\r\n          this.props.getUsers();\r\n        }\r\n      }\r\n    }\r\n    if (props.userApproveAppRes) {\r\n      if (props.userApproveAppRes.data && props.userApproveAppRes.data.userApproveApp) {\r\n        if (props.userApproveAppRes.data.userApproveApp.success === true ) {\r\n          isApprovedApp = false;\r\n          this.props.getUsers();\r\n          this.setState({\r\n            openApprovedModal: false\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (props.doDeleteUserRes) {\r\n      if (props.doDeleteUserRes.data && props.doDeleteUserRes.data.deleteUser) {\r\n        if (props.doDeleteUserRes.data.deleteUser.success === true && isDelete) {\r\n          isDelete = false;\r\n          this.props.getUsers();\r\n          this.setState({\r\n            openDeleteUserModal: false,\r\n            isdisabled: false\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(props.checkUserRes){\r\n      if(props.checkUserRes.data.checkUser ){\r\n          if(props.checkUserRes.data.checkUser.success === true && isUserAvailable) {\r\n              isUserAvailable = false;\r\n              this.setState({\r\n                  isLoader: false\r\n              });\r\n              let localArray = this.state.selectedUserList;\r\n              if (localArray.length > 0) {\r\n                let isTrue = 0;\r\n                if (userRole == '1') {\r\n                  for (let items of this.state.selectedUserList) {\r\n                    if (items.application_id == this.state.applicationId) {\r\n                      isTrue = 1;\r\n                    }\r\n                  }\r\n                } else {\r\n                  for (let items of localArray) {\r\n                    if (items.user_name == this.state.userName) {\r\n                      isTrue = 1;\r\n                    }\r\n                  }\r\n                }\r\n                if (isTrue == 0) {\r\n                  let localArr = localArray;\r\n                  let appName = '';\r\n                  if (userRole == '1') {\r\n                    for (let item of this.state.applicationList) {\r\n                      if (Number(this.state.applicationId) == item.application_id) {\r\n                        appName = item.application_name;\r\n                      }\r\n                    }\r\n                  } else {\r\n                    appName = this.state.applicationName\r\n                  }\r\n                  localArr.push({\r\n                    application_id: this.state.applicationId,\r\n                    application_name: appName,\r\n                    user_name: this.state.userName,\r\n                  });\r\n                  this.setState({\r\n                    selectedUserList: localArr,\r\n                  }, () => {\r\n                    if (userRole == '1') {\r\n                      this.setState({\r\n                        applicationId: '',\r\n                        userName: '',\r\n                        isSubmitedUser: false\r\n                      })\r\n                    } else {\r\n                      this.setState({\r\n                        userName: '',\r\n                        isSubmitedUser: false\r\n                      })\r\n                    }\r\n                  });\r\n                } else {\r\n                  this.setState({\r\n                    openErrorModal: true\r\n                  });\r\n                }\r\n              } else {\r\n                let localArr = this.state.selectedUserList;\r\n                let appName = '';\r\n                // for (let item of this.state.applicationList) {\r\n                //   if (this.state.applicationId == item.application_id) {\r\n                //     appName = item.application_name;\r\n                //   }\r\n                // }\r\n                if (userRole == '1') {\r\n                  for (let item of this.state.applicationList) {\r\n                    if (Number(this.state.applicationId) == item.application_id) {\r\n                      appName = item.application_name;\r\n                    }\r\n                  }\r\n                } else {\r\n                  appName = this.state.applicationName\r\n                }\r\n                localArr.push({\r\n                  application_id: this.state.applicationId,\r\n                  application_name: appName,\r\n                  user_name: this.state.userName,\r\n                });\r\n                this.setState({\r\n                  selectedUserList: localArr,\r\n                }, () => {\r\n                  if (userRole == '1') {\r\n                    this.setState({\r\n                      applicationId: '',\r\n                      userName: '',\r\n                      isSubmitedUser: false\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      userName: '',\r\n                      isSubmitedUser: false\r\n                    })\r\n                  }\r\n                });\r\n              }\r\n          }\r\n          if(props.checkUserRes.data.checkUser.success === false && isUserAvailable) {\r\n              isUserAvailable = false;\r\n              this.setState({\r\n                  isLoader: false\r\n              });\r\n              Swal.fire({\r\n                  title: props.checkUserRes.data.checkUser.message,\r\n                  type: 'info',\r\n                  confirmButtonText: 'OK',\r\n                  allowOutsideClick: false,\r\n                  timer: 3000\r\n              });\r\n          }\r\n      } else {\r\n          setTimeout(() => { this.setState({\r\n              isLoader: false\r\n          }); }, 3000);\r\n      }\r\n    }\r\n  }\r\n\r\n  approvedUser = () => {\r\n    this.setState({\r\n      isSubmited: true,\r\n    }, () => { });\r\n    this.validate(this.state);\r\n    const errors = this.validate(this.state);\r\n    if (Object.keys(errors).length === 0) {\r\n      let selectedUsr = this.state.selectedUserList;\r\n\r\n      for (var i = 0; i < selectedUsr.length; i++) {\r\n        var o = selectedUsr[i];\r\n        delete o.application_name;\r\n      }\r\n      // for (let item of selectedUsr) {\r\n      //   delete item.application_name\r\n      // }\r\n      let payReq = {\r\n        create_user: selectedUsr,\r\n        user_id: this.state.selectedUserId\r\n      }\r\n      this.props.approveAppUser(payReq);\r\n    }\r\n  }\r\n\r\n  approveDisapprove(rowData, status){\r\n    let payloadReq = {\r\n      user_id: rowData.user_id,\r\n      status: status\r\n    }\r\n    this.props.updateUserStatus(payloadReq);\r\n    isApprove = true;\r\n  }\r\n\r\n  deleteUser = () => {\r\n    let payLoad = {\r\n      user_id: this.state.userId\r\n    }\r\n    this.props.deleteUserRecord(payLoad);\r\n    isDelete = true;\r\n    this.setState({\r\n      isdisabled: true\r\n    });\r\n  }\r\n\r\n  updateUser = (data) => {\r\n    this.props.history.push({\r\n      pathname: 'updateUser',\r\n      state: {userData: data}\r\n    });\r\n  }\r\n\r\n  createApproved(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    // console.log(rowData);\r\n    return (<div style={{textAlign: 'center'}}>\r\n      {\r\n        rowData.status === 1 &&\r\n        <div>\r\n          <button className=\"btn btn-edit-customer\" onClick={() => { this.openApproved(rowData) }}>Approve</button>\r\n          <button className=\"btn btn-delete-customer\" onClick={() => { this.approveDisapprove(rowData, '2') }}>\r\n            Disapprove\r\n          </button>\r\n        </div>\r\n      }\r\n      {\r\n        rowData.status === 0 &&\r\n        <div>\r\n          <button className=\"btn btn-delete-customer\" onClick={() => { this.approveDisapprove(rowData, '2') }}>\r\n            Disapprove\r\n          </button>\r\n        </div>\r\n      }\r\n      {\r\n        rowData.status === 2 &&\r\n        <div>\r\n          <button className=\"btn btn-edit-customer\" onClick={() => { this.openApproved(rowData) }}>\r\n            Approve\r\n          </button>\r\n        </div>\r\n      }\r\n    </div>);\r\n  }\r\n\r\n  actionUpdateTemplate = (rowData) => {\r\n    return (\r\n      <div style={{textAlign: 'left'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={() => { this.updateUser(rowData) }}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n        <button className=\"btn btn-delete-customer\" onClick={() => { this.openDeleteModal(rowData) }}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  actionAddressTemplate = (rowData) => {\r\n    return (\r\n      <div>\r\n        {rowData.address1} {rowData.address2}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  statusTemplate = (rowData) => {\r\n    return (<div style={{textAlign: 'left'}}>\r\n      {\r\n        rowData.status === 1 &&\r\n        <div className=\"btn pending-status\">Pending</div>\r\n      }\r\n      {\r\n        rowData.status === 0 &&\r\n        <div className=\"btn approve-status\">Approved</div>\r\n      }\r\n      {\r\n        rowData.status === 2 &&\r\n        <div className=\"btn disapprove-status\">Disapproved</div>\r\n      }\r\n    </div>);\r\n  }\r\n\r\n  createUser(){\r\n    this.props.history.push('/createUser')\r\n  }\r\n\r\n  openDeleteModal = (data) => {\r\n    this.setState({\r\n      userId: data.user_id,\r\n      openDeleteUserModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteUser = () => {\r\n    this.setState({\r\n      openDeleteUserModal: false,\r\n    });\r\n  }\r\n\r\n  openApproved = (data) => {\r\n    let appUserName = data.app_user;\r\n    if (appUserName.length > 0) {\r\n      if (userRole == '1') {\r\n        for (let item of this.state.applicationList) {\r\n          for(let app of appUserName) {\r\n            if (app.application_id == item.application_id) {\r\n              app.application_name = item.application_name;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for(let app of appUserName) {\r\n          app.application_name = this.state.applicationName;\r\n        }\r\n      }\r\n      \r\n      this.setState({\r\n        openApprovedModal: true,\r\n        selectedUserList: appUserName,\r\n        selectedUserId: data.user_id\r\n      });\r\n    } else {\r\n      this.setState({\r\n        openApprovedModal: true,\r\n        selectedUserList: appUserName,\r\n        selectedUserId: data.user_id\r\n      });\r\n    }\r\n  }\r\n\r\n  closeApproved = () => {\r\n    if (userRole == '1') {\r\n      this.setState({\r\n        openApprovedModal: false,\r\n        applicationId: '',\r\n        applicationName: '',\r\n        userName: '',\r\n        selectedUserList: [],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        openApprovedModal: false,\r\n        userName: '',\r\n        selectedUserList: [],\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  closeErrorModal = () => {\r\n    this.setState({\r\n        openErrorModal: false\r\n    });\r\n  } \r\n\r\n  validateUser(values) {\r\n    const errors = {};\r\n    if (values.applicationId == '') {\r\n      errors.applicationId = 'Please select application';\r\n    }\r\n    if (values.userName == '') {\r\n      errors.userName = 'Please enter username';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  validate(values) {\r\n    const errors = {};\r\n    if (values.selectedUserList.length === 0) {\r\n      errors.selectedUserList = 'Please select application and enter username';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  addApproved = () => {\r\n    this.setState({\r\n      isSubmitedUser: true,\r\n    }, () => {});\r\n    this.validateUser(this.state);\r\n    const errors = this.validateUser(this.state);\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      let requestData = {\r\n        UserName: this.state.userName\r\n      }\r\n      isUserAvailable = true;\r\n      this.props.checkUserName(requestData)\r\n      this.setState({\r\n        isLoader: true\r\n      });\r\n    }\r\n  }\r\n\r\n  removeApproved = (data) => {\r\n    if(this.state.selectedUserList.length == 1){\r\n      this.setState({ \r\n        selectedUserList: [],\r\n        uiRender: true\r\n      },()=>{ })\r\n    } else {\r\n      var index = this.state.selectedUserList.indexOf(data)\r\n      let removeData = this.state.selectedUserList.slice(0, index).concat(this.state.selectedUserList.slice(index + 1, this.state.selectedUserList.length));\r\n      this.setState({ \r\n        selectedUserList: removeData,\r\n        uiRender: true\r\n      },()=>{ })\r\n    }\r\n  }\r\n\r\n  actionApproveTemplate = (rowData) => {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn addmore-delete-btn\" onClick={() => this.removeApproved(rowData)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { usersList, isSubmitedUser, selectedUserList, isSubmited } = this.state;\r\n    const errorsUser = this.validateUser(this.state);\r\n    const errors = this.validate(this.state);\r\n    const Header = (<div className=\"offer_head\">Users</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Users\" header={Header} >\r\n            <div className=\"customer_content\">\r\n              <div className=\"customer_inner_content\">\r\n                <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                  <div className=\"col-md-12 customertabpanel\">\r\n                    <div className=\"administration_tab\">\r\n\r\n                      <div  className=\"row pl-pr-15px xs-pl-pr-2px\">\r\n                        <div className=\"col-sm-12 col-md-6\">\r\n                          <div className=\"heading_title\">All Users</div>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createUser()}>Create User</button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                        <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                          <DataTable value={usersList} header={tableHeader} global Filter={this.state.globalFilter} paginator={true} rows={9}  responsive scrollable  emptyMessage=\"No data found\" >\r\n                            <Column className=\"tableCols\" field=\"email\" header=\"Email\" sortable style={{width: '280px'}}/>\r\n                            <Column className=\"tableCols\" field=\"fullname\" header=\"Full Name\" sortable style={{width: '120px'}}/>\r\n                            <Column className=\"tableCols\" field=\"address\" header=\"Address\" body={this.actionAddressTemplate} sortable style={{width: '150px'}}/>\r\n                            <Column className=\"tableCols\" field=\"country\" header=\"Country\" sortable style={{width: '120px'}} />\r\n                            <Column className=\"tableCols\" field=\"status\"  body={this.statusTemplate} header=\"Status\" sortable style={{width: '120px'}}/>\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Approve/Disapprove\" body={this.actionTemplate} style={{width: '220px'}}/>\r\n                            <Column className=\"tableCols\" field=\"action1\" header=\"Action\" body={this.actionUpdateTemplate} style={{width: '130px'}}/>\r\n                          </DataTable>\r\n                        </div>\r\n                        <Modal open={this.state.openDeleteUserModal} onClose={this.cancelDeleteUser} center>\r\n                          <div className=\"delete-user-modal\">\r\n                            <div className=\"row\" >\r\n                                <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{width: 500}}>\r\n                                \r\n                            </div>\r\n                            <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                                <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                                    <button\r\n                                        className=\"btn delete-user-yes-btn\"\r\n                                        onClick={() => this.deleteUser() }\r\n                                        disabled={this.state.isdisabled}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col-6 col-md-6 col-sm-6\">\r\n                                    <button\r\n                                        className=\"btn delete-user-no-btn\"\r\n                                        onClick={() => this.cancelDeleteUser() }\r\n                                    >\r\n                                        No\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                          </div>\r\n                        </Modal>\r\n                        <Modal open={this.state.openApprovedModal} onClose={this.closeApproved} center>\r\n                          <div className=\"approve-user-modal\" style={{width: 600}}>\r\n                            <div className=\"row\" >\r\n                              <div className=\"approve-user-header\">Approve Users</div>\r\n                            </div>\r\n                            <div className=\"row\" >\r\n                                <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                  {\r\n                                    userRole == '1' ? \r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                            <option value=''>Select Application</option>\r\n                                            {\r\n                                                (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                    <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control\" name=\"applicationId\" value={this.state.applicationId} readOnly>\r\n                                            \r\n                                            <option value={this.state.applicationId} disabled={true}>{this.state.applicationName}</option>\r\n                                              \r\n                                        </select>\r\n                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                    </div>\r\n                                  }\r\n                                </div>\r\n                                <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"userName\" placeholder=\"Enter user name\" onChange={(e) => this.createApproved(e)} value={this.state.userName} />\r\n                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.userName}</span>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-2 col-md-2 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        {\r\n                                            <button\r\n                                            onClick={() => {\r\n                                                this.addApproved()\r\n                                            }}\r\n                                            className=\"btn addmore-btn mt0\">ADD</button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {errors && isSubmited && <span className=\"error-message\">{errors.selectedUserList}</span>}\r\n                            </div>\r\n\r\n                            {\r\n                              selectedUserList.length > 0 &&\r\n                              <div className=\"row mt-5\">\r\n                                <div className=\"col-md-12\">\r\n                                  <DataTable value={selectedUserList} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                                    <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '280px'}}/>\r\n                                    <Column className=\"tableCols\" field=\"user_name\" header=\"User Name\" sortable style={{width: '120px'}}/>\r\n                                    <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionApproveTemplate} style={{width: '130px'}}/>\r\n                                  </DataTable>\r\n                                </div>\r\n                              </div>\r\n                            }\r\n                            <Modal open={this.state.openErrorModal} onClose={this.closeErrorModal} center>\r\n                                <div className=\"error-message-user-modal\">\r\n                                    <div className=\"row\" >\r\n                                      {\r\n                                        userRole == '1' ?\r\n                                        <div className=\"error-message-user-header\"> This application already selected please choose other application </div>\r\n                                        :\r\n                                        <div className=\"error-message-user-header\"> This user already added please enter other user </div>\r\n                                      }\r\n                                    </div>\r\n                                    <div className=\"row\" style={{width: 500}}>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </Modal>\r\n                            <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                                <div className=\"col-12 col-md-12 col-sm-12\" style={{textAlign: 'center'}}>\r\n                                    <button\r\n                                      className=\"btn delete-user-yes-btn\"\r\n                                      onClick={() => this.approvedUser() }\r\n                                      disabled={this.state.isdisabled}\r\n                                    >\r\n                                      Approve\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                          </div>\r\n                        </Modal>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nUsersComponent.propTypes = {\r\n\tallUsersRes: PropTypes.any,\r\n  doUserApprovedRes: PropTypes.any,\r\n  doDeleteUserRes: PropTypes.any,\r\n  allApplicationRes: PropTypes.any,\r\n  userApproveAppRes: PropTypes.any,\r\n  checkUserRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tallUsersRes: doUserAllRes,\r\n  doUserApprovedRes: doUserApprovedRes,\r\n  doDeleteUserRes: doDeleteUserRes,\r\n\tallApplicationRes: getAllApplicationRes,\r\n\tuserApproveAppRes: doUserApproveAppRes,\r\n  checkUserRes: doCheckUserRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tgetUsers: () => dispatch(getAllUsers()),\r\n\t\tupdateUserStatus: (date) => dispatch(updateUserStatus(date)),\r\n\t\tdeleteUserRecord: (date) => dispatch(deleteUserDetails(date)),\r\n\t\tapproveAppUser: (date) => dispatch(approveAppUser(date)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n    checkUserName: (data) => dispatch(checkUserName(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UsersComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass DeleteApplicationApi {\r\n    static doDeleteApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/deleteContant', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteApplicationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteApplicationApi from '../api/deleteApplicationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doDeleteApp(data) {\r\n  return {\r\n    type: types.DELETE_APPLICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteAppRes(data) {\r\n  return {\r\n    type: types.DELETE_APPLICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteApplicationRecord(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteApplicationApi.doDeleteApp(data).then(data => {\r\n        dispatch(doDeleteAppRes(data));\r\n        dispatch(doDeleteAppRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './applications.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport { deleteApplicationRecord, doDeleteAppRes } from '../../action/deleteApplicationActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\n\r\nlet isDelete = false;\r\n\r\nclass ApplicationsComponent extends React.PureComponent {\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      applicationList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        applicationList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetchAllApplication();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.allApplicationRes) {\r\n\t\t\tif (props.allApplicationRes.data && props.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (props.allApplicationRes.data.applicationList.success===true) {\r\n          this.setState({\r\n            applicationList: props.allApplicationRes.data.applicationList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteApplication) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteApplication.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchAllApplication();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goUpdateApplication = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/update-application',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n\r\n  createApp(){\r\n    this.props.history.push('/create-application')\r\n  }\r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      app_id: this.state.appId\r\n    }\r\n    this.props.deleteApplicationRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      appId: rowData.application_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        <img src={data.icon} alt='' style={{width: 50, height: 50}} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goToAdmin(rowData)}>\r\n          <span>Admin</span>\r\n        </button>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    this.props.history.push('/adminDetails',{\r\n      applicationData: data\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { applicationList } = this.state;\r\n    console.log(applicationList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Applications</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Applications\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">All Applications</div>\r\n                      </div>\r\n                      {\r\n                        userRole == '1' &&\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createApp()}>Create Application</button>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={applicationList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={9}  responsive scrollable  emptyMessage=\"No data found\">\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"Icon\" body={this.actionIconTemplate} sortable style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Admin\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nApplicationsComponent.propTypes = {\r\n\tallApplicationRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tallApplicationRes: getAllApplicationRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n\t\tdeleteApplicationRecord: (data) => dispatch(deleteApplicationRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ApplicationsComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nclass createUserApi {\r\n    static doCreateUser(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createUser', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    static fetchAllCountry() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/country_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllState(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            countryid: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/state_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllCity(data) {\r\n        console.log('state id', data);\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            stateId: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/city_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default createUserApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport createUserApi from '../api/createUserApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doCreateUser(data) {\r\n  return {\r\n    type: types.DO_CREATE_USER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateUserRes(data) {\r\n  return {\r\n    type: types.DO_CREATE_USER_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateUser(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.doCreateUser(data).then(data => {\r\n        \r\n        dispatch(doCreateUserRes(data));\r\n        dispatch(doCreateUserRes(null));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.success === false){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCountry() {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY,\r\n  };\r\n}\r\n\r\nexport function doAllCountryRes(data) {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCountry() {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.fetchAllCountry().then(data => {\r\n        dispatch(doAllCountryRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllState(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllStateRes(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllState(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.fetchAllState(data).then(data => {\r\n        dispatch(doAllStateRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCity(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllCityRes(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCity(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createUserApi.fetchAllCity(data).then(data => {\r\n        dispatch(doAllCityRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.email === '') {\r\n    errors.email = 'Please enter email';\r\n  }\r\n  if (values.password === '') {\r\n    errors.password = 'Please enter password';\r\n  }\r\n  if (values.fullname === '') {\r\n    errors.fullname = 'Please enter fullname';\r\n  }\r\n  if (values.company === '') {\r\n    errors.company = 'Please enter company';\r\n  }\r\n  if (values.address1 === '') {\r\n    errors.address1 = 'Please enter address 1';\r\n  }\r\n  if (values.address2 === '') {\r\n    errors.address2 = 'Please enter address 2';\r\n  }\r\n  if (values.country === '') {\r\n    errors.country = 'Please select country';\r\n  }\r\n  if (values.state === '') {\r\n    errors.state = 'Please select state';\r\n  }\r\n  if (values.city === '') {\r\n    errors.city = 'Please select city';\r\n  }\r\n  if (values.zipcode === '') {\r\n    errors.zipcode = 'Please enter zip code';\r\n  }\r\n  // if (values.selectedUserList.length === 0) {\r\n  //   errors.selectedUserList = 'Please select application and enter username';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './createUser.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { submitCreateUser, doCreateUserRes, getAllCountry, getAllState, getAllCity, doAllCountryRes, doAllCityRes, doAllStateRes } from '../../action/createUserActions';\r\nimport { checkUserName, doCheckUserRes } from '../../action/checkUserActions';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nimport { toast } from 'react-toastify';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nlet userRole = getItem('userRoleId');\r\nlet isUserAvailable = false;\r\nclass CreateUserComponent extends React.PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        isUserAvailable = false;\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            isSubmitedUser: false,\r\n            fullname: '',\r\n            email: '',\r\n            password: '',\r\n            company: '',\r\n            address1: '',\r\n            address2: '',\r\n            country: '',\r\n            state: '',\r\n            city: '',\r\n            zipcode: '',\r\n            countryList: [],\r\n            stateList: [],\r\n            cityList: [],\r\n            selectedCountry: null,\r\n            selectedState: null,\r\n            selectedCity: null,\r\n            applicationList: [],\r\n            applicationId: '',\r\n            applicationName: '',\r\n            userName: '',\r\n            selectedUserList: [],\r\n            openErrorModal: false,\r\n            showPasshword: false, \r\n            openDeleteAppModal:false,\r\n            isDisabled:false\r\n        }\r\n        this.handleKeypress = this.handleKeypress.bind(this)\r\n    }\r\n    handleKeypress(e) {\r\n        const characterCode = e.key\r\n        if (characterCode === 'Backspace') return\r\n    \r\n        const characterNumber = Number(characterCode)\r\n        if (characterNumber >= 0 && characterNumber <= 9) {\r\n            if (e.currentTarget.value && e.currentTarget.value.length) {\r\n              return\r\n            } else if (characterNumber === 0) {\r\n              e.preventDefault()\r\n            }\r\n            } else {\r\n              e.preventDefault()\r\n            }\r\n        }\r\n        \r\n    componentDidMount() {\r\n        let userAppGroup = getItem('adminAppId');\r\n        if (userAppGroup !== null) {\r\n            this.setState({\r\n                isLoader: false,\r\n                applicationId: getItem('adminAppId'),\r\n                applicationName: getItem('adminAppName'),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isLoader: false,\r\n            });\r\n        }\r\n        this.props.getAllCountry();\r\n        this.props.fetchAllApplication();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.allApplicationRes) {\r\n\t\t\tif (nextProps.allApplicationRes.data && nextProps.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (nextProps.allApplicationRes.data.applicationList.success===true) {\r\n                    this.setState({\r\n                        applicationList: nextProps.allApplicationRes.data.applicationList.data\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllStateRes){\r\n            if(nextProps.doAllStateRes.data.stateList ){\r\n                if(nextProps.doAllStateRes.data.stateList.success === true){\r\n                    this.setState({\r\n                        stateList: nextProps.doAllStateRes.data.stateList.stateList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCityRes){\r\n            if(nextProps.doAllCityRes.data.cityList ){\r\n                if(nextProps.doAllCityRes.data.cityList.success === true){\r\n                    this.setState({\r\n                        cityList: nextProps.doAllCityRes.data.cityList.citylist\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.createUserRes){\r\n            if(nextProps.createUserRes.data.createUser ){\r\n                if(nextProps.createUserRes.data.createUser.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/users');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.checkUserRes){\r\n            if(nextProps.checkUserRes.data.checkUser ){\r\n                if(nextProps.checkUserRes.data.checkUser.success === true && isUserAvailable) {\r\n                    isUserAvailable = false;\r\n                    console.log(\"hello\")\r\n                    this.notify();\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    if (this.state.selectedUserList.length > 0) {\r\n                        let isTrue = 0;\r\n                        if (userRole == '1') {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.application_id == this.state.applicationId) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.user_name == this.state.userName) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (isTrue == 0) {\r\n                            let localArr = this.state.selectedUserList;\r\n                            let appName = '';\r\n                            if (userRole == '1') {\r\n                                for (let item of this.state.applicationList) {\r\n                                    if (Number(this.state.applicationId) == item.application_id) {\r\n                                        appName = item.application_name;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                appName = this.state.applicationName\r\n                            }\r\n                            localArr.push({\r\n                                application_id: this.state.applicationId,\r\n                                application_name: appName,\r\n                                user_name: this.state.userName,\r\n                            });\r\n                            this.setState({\r\n                                selectedUserList: localArr,\r\n                            }, () => {\r\n                                if (userRole == '1') {\r\n                                    this.setState({\r\n                                        applicationId: '',\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                } else {\r\n                                    this.setState({\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                }\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                openErrorModal: true\r\n                            });\r\n                        }\r\n                    } else {\r\n                        let localArr = this.state.selectedUserList;\r\n                        let appName = '';\r\n                        if (userRole == '1') {\r\n                            for (let item of this.state.applicationList) {\r\n                                if (Number(this.state.applicationId) == item.application_id) {\r\n                                    appName = item.application_name;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            appName = this.state.applicationName\r\n                        }\r\n                        \r\n                        localArr.push({\r\n                            application_id: this.state.applicationId,\r\n                            application_name: appName,\r\n                            user_name: this.state.userName,\r\n                        });\r\n                        this.setState({\r\n                            selectedUserList: localArr,\r\n                        }, () => {\r\n                            if (userRole == '1') {\r\n                                this.setState({\r\n                                    applicationId: '',\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            } else {\r\n                                this.setState({\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if(nextProps.checkUserRes.data.checkUser.success === false && isUserAvailable) {\r\n                    isUserAvailable = false;\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    Swal.fire({\r\n                        title: nextProps.checkUserRes.data.checkUser.message,\r\n                        type: 'info',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    });\r\n                }\r\n            } else {\r\n                console.log(\"hello\")\r\n                toast.success(\"User can now access this app\", {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                  });\r\n                setTimeout(() => { this.setState({\r\n                    isLoader: false\r\n                }); }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    closeErrorModal = () => {\r\n        this.setState({\r\n            openErrorModal: false\r\n        });\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.push('/users');\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        let selectedUsr = this.state.selectedUserList;\r\n        for (var i = 0; i < selectedUsr.length; i++) {\r\n            var o = selectedUsr[i];\r\n            delete o.application_name;\r\n          }\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                fullname: this.state.fullname,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                company: this.state.company,\r\n                address1: this.state.address1,\r\n                address2: this.state.address2,\r\n                country: this.state.country,\r\n                state: this.state.state,\r\n                city: this.state.city,\r\n                zipcode: this.state.zipcode,\r\n                create_user: selectedUsr\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n        this.props.getAllState(item.original.id)\r\n    }\r\n\r\n    stateChange = (item) => {\r\n        this.setState({\r\n            selectedState: item,\r\n            state: item.value\r\n        });\r\n        this.props.getAllCity(item.original.state_id)\r\n\r\n    }\r\n\r\n    cityChange = (item) => {\r\n        this.setState({\r\n            selectedCity: item,\r\n            city: item.value\r\n        });\r\n    }\r\n\r\n    createApproved(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    validateUser(values) {\r\n        const errors = {};\r\n        if (values.applicationId == '') {\r\n            errors.applicationId = 'Please select application';\r\n        }\r\n        if (values.userName == '') {\r\n            errors.userName = 'Please enter username';\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    addApproved = () => {\r\n        this.setState({\r\n            isSubmitedUser: true,\r\n        }, () => { });\r\n        this.validateUser(this.state);\r\n        const errors = this.validateUser(this.state);\r\n          \r\n        if (Object.keys(errors).length === 0) {\r\n            let requestData = {\r\n                UserName: this.state.userName\r\n            }\r\n            isUserAvailable = true;\r\n            this.props.checkUserName(requestData)\r\n            this.setState({\r\n                isLoader: true\r\n            });\r\n            \r\n        }\r\n    }\r\n    cancelDeleteApp = () => {\r\n        this.setState({\r\n          openDeleteAppModal: false,\r\n        });\r\n      }\r\n      openDeleteApp = (rowData) => {\r\n        this.setState({\r\n            remData: rowData,\r\n            openDeleteAppModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    removeApproved = () => {\r\n        if(this.state.selectedUserList.length == 1){\r\n            this.setState({ \r\n                selectedUserList: [],\r\n                openDeleteAppModal:false\r\n            },()=>{\r\n                this.notifydelete()\r\n             })\r\n        } else {\r\n            var index = this.state.selectedUserList.indexOf(this.state.remData)\r\n            let removeData = this.state.selectedUserList.slice(0, index).concat(this.state.selectedUserList.slice(index + 1, this.state.selectedUserList.length));\r\n            \r\n            this.setState({ \r\n                selectedUserList: removeData,\r\n                openDeleteAppModal:false\r\n            },()=>{ \r\n                this.notifydelete()\r\n            })\r\n        }\r\n    }\r\n\r\n    actionTemplate = (rowData) => {\r\n        return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <button className=\"btn btn-delete-create-user\" onClick={() => this.openDeleteApp(rowData)} >\r\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showHidePass = () => {\r\n        this.setState({\r\n            showPasshword: !this.state.showPasshword\r\n        },()=>{ })\r\n    }\r\n    notify = () => {    \r\n        toast.success(\"User can now access this app\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n    };\r\n    notifydelete = () => {  \r\n        //   console.log(\"&&&&&&&&\")\r\n    toast.error(\"User couldn't access this app\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n    };\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const errorsUser = this.validateUser(this.state);\r\n        const { isSubmited, countryList, stateList, cityList, isSubmitedUser } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const stateListOptions = [];\r\n        if (stateList && stateList.length > 0) {\r\n            stateList.map((item) => {\r\n                stateListOptions.push({ value: item.state_name, label: item.state_name, original: item });\r\n                return (\r\n                <option value={item.state_name} id={item.state_id} key={item.state_id}>\r\n                    {item.state_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const cityListOptions = [];\r\n        if (cityList && cityList.length > 0) {\r\n            cityList.map((item) => {\r\n                cityListOptions.push({ value: item.city_name, label: item.city_name, original: item });\r\n                return (\r\n                <option value={item.city_name} id={item.city_id} key={item.city_id}>\r\n                    {item.city_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n            <LayoutWrapper title=\"Create User\" header={Header} >\r\n                <Loader show={this.state.isLoader} message={spinner}>\r\n                    <div className=\"edit_profile_content_wrapper\">\r\n                        <div className=\"createprofile_heading\">\r\n                            <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                <span className=\"createprofile_go_back\">Back to Users</span>\r\n                            </div>\r\n                            <span className=\"offering_detail_title\">Create User</span>\r\n                        </div>\r\n                        <div className=\"editprofile_content\">\r\n                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter full name\" name=\"fullname\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.fullname}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.email}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type={this.state.showPasshword ? \"text\" : \"password\"} className=\"form-control\" placeholder=\"Enter password\" name=\"password\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {\r\n                                                        this.state.showPasshword &&\r\n                                                        <p onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </p>\r\n                                                    }\r\n                                                    {\r\n                                                        !this.state.showPasshword &&\r\n                                                        <span onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye-slash eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </span>\r\n                                                    }\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.password}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter company name\" name=\"company\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.company}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 1\" name=\"address1\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address1}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 2 (Optional)\" name=\"address2\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address2}</span>}\r\n                                                </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"number\" min='1' step='1' onKeyDown={this.handleKeypress}className=\"form-control\" placeholder=\"Enter ZipCode\" name=\"zipcode\" onChange={(e) => this.handleChange(e)} onkeydown=\"javascript: return event.keyCode == 69 ? false : true\"/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.zipcode}</span>}\r\n                                                   \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCountry}\r\n                                                        onChange={this.countryChange}\r\n                                                        options={countryListOptions}\r\n                                                        name=\"country\"\r\n                                                        placeholder=\"Select Country\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.country}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedState}\r\n                                                        onChange={this.stateChange}\r\n                                                        options={stateListOptions}\r\n                                                        name=\"state\"\r\n                                                        placeholder=\"Select State\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.state}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCity}\r\n                                                        onChange={this.cityChange}\r\n                                                        options={cityListOptions}\r\n                                                        name=\"city\"\r\n                                                        placeholder=\"Select City\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.city}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-md-6 col-sm-12\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                \r\n                                                {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                                            <option value=''>Select Application</option>\r\n                                                            {\r\n                                                                (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                                    <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                                )\r\n                                                            }\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" value={this.state.applicationId} readOnly>\r\n                                                            <option value={this.state.applicationId} disabled={true}>{this.state.applicationName}</option>\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"userName\" placeholder=\"Enter user name\" onChange={(e) => this.createApproved(e)} value={this.state.userName} />\r\n                                                    {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.userName}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-2 col-md-2 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    {\r\n                                                        <button\r\n                                                        onClick={() => {\r\n                                                            this.addApproved();\r\n                                                              }} \r\n                                                        className=\"btn addmore-btn mt0\">ADD</button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.selectedUserList.length > 0 &&\r\n                                        <div className=\"row mt-5\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <DataTable value={this.state.selectedUserList} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                                                    <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '280px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"user_name\" header=\"User Name\" sortable style={{width: '120px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate}                                                      \r\n                                                    style={{width: '130px'}} />\r\n                                                </DataTable>\r\n                                               \r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    \r\n                                    <Modal open={this.state.openErrorModal} onClose={this.closeErrorModal} center>\r\n                                        <div className=\"error-message-user-modal\">\r\n                                            <div className=\"row\" >\r\n                                                {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"error-message-user-header\"> This application already selected please choose other application </div>\r\n                                                    :\r\n                                                    <div className=\"error-message-user-header\"> This user already added please enter other user </div>\r\n\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"row\" style={{width: 500}}>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal>\r\n                                    <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                                    <div className=\"delete-user-modal\">\r\n                                    <div className=\"row\" >\r\n                                        <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{width: 500}}>\r\n                                    </div>\r\n                                    <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                                        <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                                        <button\r\n                                            className=\"btn delete-user-yes-btn\"\r\n                                            onClick={() => this.removeApproved() }\r\n                                            disabled={this.state.isDisabled}\r\n                                        >\r\n                                            Yes\r\n                                        </button>\r\n                                        </div>\r\n                                        <div className=\"col-6 col-md-6 col-sm-6\">\r\n                                        <button\r\n                                            className=\"btn delete-user-no-btn\"\r\n                                            onClick={() => this.cancelDeleteApp() }\r\n                                        >\r\n                                            No\r\n                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                </Modal>\r\n                                    <div>\r\n                                        <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    <ToastContainer />\r\n                    </div>\r\n                    <ToastContainer />\r\n                </Loader>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateUserComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createUserRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    doAllCityRes: PropTypes.any,\r\n    doAllStateRes: PropTypes.any,\r\n    allApplicationRes: PropTypes.any,\r\n    checkUserRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createUserRes: doCreateUserRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    doAllCityRes: doAllCityRes,\r\n    doAllStateRes: doAllStateRes,\r\n    allApplicationRes: getAllApplicationRes,\r\n    checkUserRes: doCheckUserRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateUser(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllState: (data) => dispatch(getAllState(data)),\r\n        getAllCity: (data) => dispatch(getAllCity(data)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n        checkUserName: (data) => dispatch(checkUserName(data)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateUserComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nclass editUserApi {\r\n    static doEditUser(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_update_userProfile', body).then(response => {\r\n                if(response.ok === true){\r\n                    Swal.fire({\r\n                        title: 'User update successful',\r\n                        type: 'success',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    })\r\n                }\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default editUserApi;","import * as types from './actionTypes';\r\nimport editUserApi from '../api/editUserApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doEditUser(data) {\r\n  return {\r\n    type: types.DO_UPDATE_USER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doEditUserRes(data) {\r\n  return {\r\n    type: types.DO_UPDATE_USER_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateUser(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      editUserApi.doEditUser(data).then(data => {\r\n        dispatch(doEditUserRes(data));\r\n        dispatch(doEditUserRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.email === '') {\r\n    errors.email = 'Please enter email';\r\n  }\r\n  if (values.fullname === '') {\r\n    errors.fullname = 'Please enter fullname';\r\n  }\r\n  if (values.company === '') {\r\n    errors.company = 'Please enter company';\r\n  }\r\n  if (values.address1 === '') {\r\n    errors.address1 = 'Please enter address 1';\r\n  }\r\n  if (values.address2 === '') {\r\n    errors.address2 = 'Please enter address 2';\r\n  }\r\n  if (values.country === '') {\r\n    errors.country = 'Please select country';\r\n  }\r\n  if (values.state === '') {\r\n    errors.state = 'Please select state';\r\n  }\r\n  if (values.city === '') {\r\n    errors.city = 'Please select city';\r\n  }\r\n  if (values.zipcode === '') {\r\n    errors.zipcode = 'Please enter zip code';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './editUser.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { submitUpdateUser, doEditUserRes } from '../../action/editUserActions';\r\nimport { getAllCountry, getAllState, getAllCity, doAllCountryRes, doAllCityRes, doAllStateRes } from '../../action/createUserActions';\r\nimport { checkUserName, doCheckUserRes } from '../../action/checkUserActions';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nimport { toast } from 'react-toastify';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nlet isCountry = false;\r\nlet isState = false;\r\nlet isCity = false;\r\nlet isApplication = false;\r\nlet userRole = getItem('userRoleId');\r\nlet isUserAvailable = false;\r\n\r\nclass EditUserComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        isCountry = false;\r\n        isState = false;\r\n        isCity = false;\r\n        isApplication = false;\r\n        isUserAvailable = false;\r\n        this.state = {\r\n            isLoader: true,\r\n            userData: null,\r\n            isSubmited: false,\r\n            fullname: '',\r\n            email: '',\r\n            company: '',\r\n            address1: '',\r\n            address2: '',\r\n            country: '',\r\n            state: '',\r\n            city: '',\r\n            zipcode: '',\r\n            countryList: [],\r\n            stateList: [],\r\n            cityList: [],\r\n            selectedCountry: null,\r\n            selectedState: null,\r\n            selectedCity: null,\r\n            applicationList: [],\r\n            applicationId: '',\r\n            applicationName: '',\r\n            userName: '',\r\n            selectedUserList: [],\r\n            openErrorModal: false,\r\n            isSubmitedUser: false,\r\n            openDeleteAppModal:false,\r\n            isDisabled:false\r\n        }\r\n        this.handleKeypress = this.handleKeypress.bind(this)\r\n    }\r\n    handleKeypress(e) {\r\n        const characterCode = e.key\r\n        if (characterCode === 'Backspace') return\r\n\r\n        const characterNumber = Number(characterCode)\r\n        if (characterNumber >= 0 && characterNumber <= 9) {\r\n            if (e.currentTarget.value && e.currentTarget.value.length) {\r\n            return\r\n            } else if (characterNumber === 0) {\r\n            e.preventDefault()\r\n            }\r\n            } else {\r\n            e.preventDefault()\r\n            }\r\n        }\r\n    componentDidMount() {\r\n        let userAppGroup = getItem('adminAppId');\r\n        if (userAppGroup !== null) {\r\n            this.setState({\r\n                applicationId: getItem('adminAppId'),\r\n                applicationName: getItem('adminAppName'),\r\n            });\r\n        }\r\n        this.props.getAllCountry();\r\n        this.props.fetchAllApplication();\r\n        isCountry = true;\r\n        isApplication = true;\r\n        const userDetails = this.props.location.state.userData;\r\n        this.setState({\r\n            userData: userDetails,\r\n        }, () => {\r\n            if (userRole == '2') {\r\n                if (this.state.userData.app_user.length > 0) {\r\n                    for (let item of this.state.userData.app_user) {\r\n                        item.application_name =  getItem('adminAppName');\r\n                    }\r\n                }\r\n            }\r\n            this.setState({\r\n                fullname: this.state.userData.fullname,\r\n                email: this.state.userData.email,\r\n                company: this.state.userData.company,\r\n                address1: this.state.userData.address1,\r\n                address2: this.state.userData.address2,\r\n                country: this.state.userData.country,\r\n                state: this.state.userData.state,\r\n                city: this.state.userData.city,\r\n                zipcode: this.state.userData.zipcode,\r\n                selectedUserList: this.state.userData.app_user,\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if (nextProps.allApplicationRes) {\r\n\t\t\tif (nextProps.allApplicationRes.data && nextProps.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (nextProps.allApplicationRes.data.applicationList.success===true  && isApplication) {\r\n                    isApplication = false;\r\n                    this.setState({\r\n                        applicationList: nextProps.allApplicationRes.data.applicationList.data\r\n                    }, () => {\r\n                        if (this.state.userData.app_user.length > 0) {\r\n                            let appUser = this.state.selectedUserList;\r\n                            for (let item of this.state.applicationList) {\r\n                                for (let items of appUser) {\r\n                                    if (Number(items.application_id) === item.application_id) {\r\n                                        items.application_name = item.application_name\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.setState({\r\n                                selectedUserList: appUser,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true && isCountry){\r\n                    isCountry = false;\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    }, () => {\r\n                        // this.state.countryList\r\n                        if (this.state.country !== '') {\r\n                            for (let item of this.state.countryList) {\r\n                                if (this.state.userData.country.toLowerCase() === item.country_name.toLowerCase()) {\r\n                                    const selectedCountryObject = {\r\n                                        value: item.id,\r\n                                        label: this.state.country,\r\n                                    };\r\n                                    this.setState({\r\n                                        selectedCountry: selectedCountryObject,\r\n                                    }, () => {});\r\n                                    this.props.getAllState(item.id);\r\n                                    isState = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllStateRes){\r\n            if(nextProps.doAllStateRes.data.stateList ){\r\n                if(nextProps.doAllStateRes.data.stateList.success === true && isState){\r\n                    isState = false;\r\n                    this.setState({\r\n                        stateList: nextProps.doAllStateRes.data.stateList.stateList\r\n                    }, () => {\r\n                        if (this.state.state !== '') {\r\n                            for (let item of this.state.stateList) {\r\n                                if (this.state.state.toLowerCase() === item.state_name.toLowerCase()) {\r\n                                    const selectedStateObject = {\r\n                                        value: item.state_id,\r\n                                        label: this.state.state,\r\n                                    };\r\n                                    this.setState({\r\n                                        selectedState: selectedStateObject,\r\n                                    }, () => {});\r\n                                    this.props.getAllCity(item.state_id)\r\n                                    isCity = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCityRes){\r\n            if(nextProps.doAllCityRes.data.cityList ){\r\n                if(nextProps.doAllCityRes.data.cityList.success === true && isCity){\r\n                    isCity = false;\r\n                    this.setState({\r\n                        cityList: nextProps.doAllCityRes.data.cityList.citylist\r\n                    }, () => {\r\n                        if (this.state.city !== '') {\r\n                            for (let item of this.state.cityList) {\r\n                                if (this.state.city.toLowerCase() === item.city_name.toLowerCase()) {\r\n                                    const selectedCityObject = {\r\n                                        value: item.city_id,\r\n                                        label: this.state.city,\r\n                                    };\r\n                                    this.setState({\r\n                                        selectedCity: selectedCityObject,\r\n                                    }, () => {});\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (nextProps.doEditUserRes) {\r\n\t\t\tif (nextProps.doEditUserRes.data && nextProps.doEditUserRes.data.updateUser) {\r\n\t\t\t\tif (nextProps.doEditUserRes.data.updateUser.success === true) {\r\n                    this.setState({\r\n                        isLoader: false,\r\n                    });\r\n                    this.props.history.push('/users');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(nextProps.checkUserRes){\r\n            if(nextProps.checkUserRes.data.checkUser ){\r\n                if(nextProps.checkUserRes.data.checkUser.success === true && isUserAvailable) {\r\n                    console.log(\"hello\")\r\n                    this.notify();\r\n                    isUserAvailable = false;\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    if (this.state.selectedUserList.length > 0) {\r\n                        let isTrue = 0;\r\n                        if (userRole == '1') {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.application_id == this.state.applicationId) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            for (let items of this.state.selectedUserList) {\r\n                                if (items.user_name == this.state.userName) {\r\n                                    isTrue = 1;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (isTrue === 0) {\r\n                            let localArr = this.state.selectedUserList;\r\n                            let appName = '';\r\n                            if (userRole == '1') {\r\n                                for (let item of this.state.applicationList) {\r\n                                    if (Number(this.state.applicationId) == item.application_id) {\r\n                                        appName = item.application_name;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                appName = this.state.applicationName\r\n                            }\r\n                            localArr.push({\r\n                                application_id: this.state.applicationId,\r\n                                application_name: appName,\r\n                                user_name: this.state.userName,\r\n                            });\r\n                            this.setState({\r\n                                selectedUserList: localArr,\r\n                            }, () => {\r\n                                if (userRole == '1') {\r\n                                    this.setState({\r\n                                        applicationId: '',\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                } else {\r\n                                    this.setState({\r\n                                        userName: '',\r\n                                        isSubmitedUser: false\r\n                                    })\r\n                                }\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                openErrorModal: true\r\n                            });\r\n                        }\r\n                    } else {\r\n                        let localArr = this.state.selectedUserList;\r\n                        let appName = '';\r\n                        if (userRole == '1') {\r\n                            for (let item of this.state.applicationList) {\r\n                                if (Number(this.state.applicationId) == item.application_id) {\r\n                                    appName = item.application_name;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            appName = this.state.applicationName\r\n                        }\r\n                        localArr.push({\r\n                            application_id: this.state.applicationId,\r\n                            application_name: appName,\r\n                            user_name: this.state.userName,\r\n                        });\r\n                        this.setState({\r\n                            selectedUserList: localArr,\r\n                        }, () => {\r\n                            if (userRole == '1') {\r\n                                this.setState({\r\n                                    applicationId: '',\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            } else {\r\n                                this.setState({\r\n                                    userName: '',\r\n                                    isSubmitedUser: false\r\n                                })\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if(nextProps.checkUserRes.data.checkUser.success === false && isUserAvailable) {\r\n                    isUserAvailable = false;\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    Swal.fire({\r\n                        title: nextProps.checkUserRes.data.checkUser.message,\r\n                        type: 'info',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    });\r\n                }\r\n            } else {\r\n                \r\n                setTimeout(() => { this.setState({\r\n                    isLoader: false\r\n                }); }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    closeErrorModal = () => {\r\n        this.setState({\r\n            openErrorModal: false\r\n        });\r\n    }\r\n\r\n    handleFormSubmit = () => {\r\n        this.setState({\r\n            isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedUsr = this.state.selectedUserList;\r\n            for (var i = 0; i < selectedUsr.length; i++) {\r\n                var o = selectedUsr[i];\r\n                delete o.application_name;\r\n            }\r\n            let payloadReq = {\r\n                user_id: this.state.userData.user_id,\r\n                fullname: this.state.fullname,\r\n                company: this.state.company,\r\n                address1: this.state.address1,\r\n                address2: this.state.address2,\r\n                country: this.state.country,\r\n                state: this.state.state,\r\n                city: this.state.city,\r\n                zipcode: this.state.zipcode,\r\n                create_user: selectedUsr,\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value,\r\n            selectedState:null,\r\n            selectedCity:null,\r\n            cityList:[],\r\n            stateList: []\r\n        });\r\n        this.props.getAllState(item.original.id)\r\n        isState = true; \r\n    }\r\n\r\n    stateChange = (item) => {\r\n        this.setState({\r\n            selectedState: item,\r\n            state: item.value,\r\n            selectedCity:null,\r\n            cityList:[]\r\n        });\r\n        this.props.getAllCity(item.original.state_id)\r\n        isCity = true;\r\n    }\r\n\r\n    cityChange = (item) => {\r\n        this.setState({\r\n            selectedCity: item,\r\n            city: item.value\r\n        });\r\n    }\r\n\r\n    createApproved(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    validateUser(values) {\r\n        const errors = {};\r\n        if (values.applicationId === '') {\r\n            errors.applicationId = 'Please select application';\r\n        }\r\n        if (values.userName === '') {\r\n            errors.userName = 'Please enter username';\r\n        }\r\n        return errors;\r\n     }     \r\n\r\n    addApproved = () => {\r\n        this.setState({\r\n            isSubmitedUser: true,\r\n        }, () => { });\r\n        this.validateUser(this.state);\r\n        const errors = this.validateUser(this.state);\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            let requestData = {\r\n                UserName: this.state.userName\r\n            }\r\n            isUserAvailable = true;\r\n            this.props.checkUserName(requestData)\r\n            this.setState({\r\n                isLoader: true\r\n            });\r\n            \r\n        }        \r\n    }\r\n    cancelDeleteApp = () => {\r\n        this.setState({\r\n          openDeleteAppModal: false,\r\n        });\r\n      }\r\n    openDeleteApp = (rowData) => {\r\n        this.setState({\r\n            remData: rowData,\r\n            openDeleteAppModal: true,\r\n        });\r\n    }\r\n\r\n    removeApproved = () => {\r\n        if(this.state.selectedUserList.length == 1){\r\n            this.setState({ \r\n                selectedUserList: [],\r\n                openDeleteAppModal:false\r\n            },()=>{\r\n                this.notifydelete()\r\n             })\r\n        } else {\r\n            var index = this.state.selectedUserList.indexOf(this.state.remData)\r\n            let removeData = this.state.selectedUserList.slice(0, index).concat(this.state.selectedUserList.slice(index + 1, this.state.selectedUserList.length));\r\n            \r\n            this.setState({ \r\n                selectedUserList: removeData,\r\n                openDeleteAppModal:false\r\n            },()=>{ \r\n                this.notifydelete()\r\n            })\r\n        }\r\n    }\r\n\r\n    actionTemplate = (rowData) => {\r\n        return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <button className=\"btn btn-delete-update-user\" onClick={() => this.openDeleteApp(rowData)}>\r\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    notify = () => {    \r\n        toast.success(\"User can now access this app\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n    };\r\n    notifydelete = () => {  \r\n        //   console.log(\"&&&&&&&&\")\r\n    toast.error(\"User couldn't access this app\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n    };\r\n\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Edit Customer</div>);        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const errorsUser = this.validateUser(this.state);\r\n        const { isSubmited, countryList, stateList, cityList, isSubmitedUser } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const stateListOptions = [];\r\n        if (stateList && stateList.length > 0) {\r\n            stateList.map((item) => {\r\n                stateListOptions.push({ value: item.state_name, label: item.state_name, original: item });\r\n                return (\r\n                <option value={item.state_name} id={item.state_id} key={item.state_id}>\r\n                    {item.state_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const cityListOptions = [];\r\n        if (cityList && cityList.length > 0) {\r\n            cityList.map((item) => {\r\n                cityListOptions.push({ value: item.city_name, label: item.city_name, original: item });\r\n                return (\r\n                <option value={item.city_name} id={item.city_id} key={item.city_id}>\r\n                    {item.city_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <LayoutWrapper title=\"Update User\" header={Header} >\r\n                <Loader show={this.state.isLoader} message={spinner}>\r\n                    <div className=\"edit_profile_content_wrapper\">\r\n                        <div className=\"createprofile_heading\">\r\n                            <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                <span className=\"createprofile_go_back\">Back to Users</span>\r\n                            </div>\r\n                            <span className=\"offering_detail_title\">Update User</span>\r\n                        </div>\r\n                        <div className=\"editprofile_content\">\r\n                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Full Name</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter full name\" name=\"fullname\" onChange={(e) => this.handleChange(e)} value={this.state.fullname} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.fullname}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email</label>\r\n                                                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={(e) => this.handleChange(e)} value={this.state.email} disabled/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.email}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Company Name</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter company name\" name=\"company\" onChange={(e) => this.handleChange(e)} value={this.state.company} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.company}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address 1</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 1\" name=\"address1\" onChange={(e) => this.handleChange(e)} value={this.state.address1}/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address1}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address 2</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 2\" name=\"address2\" onChange={(e) => this.handleChange(e)}  value={this.state.address2}/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address2}</span>}\r\n                                                </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Zip Code</label>\r\n                                                    <input type=\"number\"  min='1' step='1' onKeyDown={this.handleKeypress} onkeydown=\"javascript: return event.keyCode == 69 ? false : true\" className=\"form-control\" placeholder=\"Enter ZipCode\" name=\"zipcode\" onChange={(e) => this.handleChange(e)} value={this.state.zipcode}/>\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.zipcode}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Country</label>\r\n                                                    <Select\r\n                                                        value={this.state.selectedCountry}\r\n                                                        onChange={this.countryChange}\r\n                                                        options={countryListOptions}\r\n                                                        name=\"country\"\r\n                                                        placeholder=\"Select Country\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.country}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>State</label>\r\n                                                    <Select\r\n                                                        value={this.state.selectedState}\r\n                                                        onChange={this.stateChange}\r\n                                                        options={stateListOptions}\r\n                                                        name=\"state\"\r\n                                                        placeholder=\"Select State\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.state}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>City</label>\r\n                                                    <Select\r\n                                                        value={this.state.selectedCity}\r\n                                                        onChange={this.cityChange}\r\n                                                        options={cityListOptions}\r\n                                                        name=\"city\"\r\n                                                        placeholder=\"Select City\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.city}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-md-6 col-sm-12\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                {/* <div className=\"form-group\">\r\n                                                    <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                                        <option value=''>Select Application</option>\r\n                                                        {\r\n                                                            (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                                <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                            )\r\n                                                        }\r\n                                                    </select>\r\n                                                    {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                </div> */}\r\n                                                {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" onChange={(e) => this.createApproved(e)} value={this.state.applicationId}>\r\n                                                            <option value=''>Select Application</option>\r\n                                                            {\r\n                                                                (this.state.applicationList) && this.state.applicationList.map((opp, j) =>\r\n                                                                    <option key={j} value={opp.application_id} disabled={opp.disabled}>{opp.application_name}</option>\r\n                                                                )\r\n                                                            }\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"form-group\">\r\n                                                        <select className=\"form-control\" name=\"applicationId\" value={this.state.applicationId} readOnly>\r\n                                                            <option value={this.state.applicationId} disabled={true}>{this.state.applicationName}</option>\r\n                                                        </select>\r\n                                                        {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.applicationId}</span>}\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"col-5 col-md-5 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"userName\" placeholder=\"Enter user name\" onChange={(e) => this.createApproved(e)} value={this.state.userName} />\r\n                                                    {errorsUser && isSubmitedUser && <span className=\"error-message\">{errorsUser.userName}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-2 col-md-2 col-sm-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    {\r\n                                                        <button\r\n                                                        onClick={() => {\r\n                                                            this.addApproved()\r\n                                                        }}\r\n                                                        className=\"btn addmore-btn mt0\">ADD</button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.selectedUserList.length > 0 &&\r\n                                        <div className=\"row mt-5\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <DataTable value={this.state.selectedUserList} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                                                    <Column className=\"tableCols\" field=\"application_name\" header=\"Application Name\" sortable style={{width: '280px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"user_name\" header=\"User Name\" sortable style={{width: '120px'}}/>\r\n                                                    <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '130px'}}/>\r\n                                                </DataTable>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    \r\n                                    <Modal open={this.state.openErrorModal} onClose={this.closeErrorModal} center>\r\n                                        <div className=\"error-message-user-modal\">\r\n                                            <div className=\"row\" >\r\n                                            {\r\n                                                    userRole == '1' ?\r\n                                                    <div className=\"error-message-user-header\"> This application already selected please choose other application </div>\r\n                                                    :\r\n                                                    <div className=\"error-message-user-header\"> This user already added please enter other user </div>\r\n\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"row\" style={{width: 500}}>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal>\r\n                                    <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                                        <div className=\"delete-user-modal\">\r\n                                        <div className=\"row\" >\r\n                                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                                        </div>\r\n                                        <div className=\"row\" style={{width: 500}}>\r\n                                        </div>\r\n                                        <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                                            <button\r\n                                                className=\"btn delete-user-yes-btn\"\r\n                                                onClick={() => this.removeApproved() }\r\n                                                disabled={this.state.isDisabled}\r\n                                            >\r\n                                                Yes\r\n                                            </button>\r\n                                            </div>\r\n                                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                                            <button\r\n                                                className=\"btn delete-user-no-btn\"\r\n                                                onClick={() => this.cancelDeleteApp() }\r\n                                            >\r\n                                                No\r\n                                            </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    </Modal>\r\n                                    <div>\r\n                                        <button onClick={() => this.handleFormSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer />\r\n                </Loader>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nEditUserComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    doEditUserRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    doAllCityRes: PropTypes.any,\r\n    doAllStateRes: PropTypes.any,\r\n    allApplicationRes: PropTypes.any,\r\n    checkUserRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    doEditUserRes: doEditUserRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    doAllCityRes: doAllCityRes,\r\n    doAllStateRes: doAllStateRes,\r\n\tallApplicationRes: getAllApplicationRes,\r\n    checkUserRes: doCheckUserRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateUser(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllState: (data) => dispatch(getAllState(data)),\r\n        getAllCity: (data) => dispatch(getAllCity(data)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n        checkUserName: (data) => dispatch(checkUserName(data)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(EditUserComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass CreateApplicationApi {\r\n    static doCreateApplication(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/application_management', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateApplicationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport CreateApplicationApi from '../api/createApplicationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doCreateApplication(data) {\r\n  return {\r\n    type: types.CREATE_APPLICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateApplicationRes(data) {\r\n  return {\r\n    type: types.CREATE_APPLICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateApplication(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      CreateApplicationApi.doCreateApplication(data).then(data => {\r\n        dispatch(doCreateApplicationRes(data));\r\n        dispatch(doCreateApplicationRes(null));\r\n        if (data.success === true) {\r\n          Swal.fire({\r\n            title: 'Application created successfully',\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if (data.success === false) {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UploadAppIconApi {\r\n    static doUploadAppIcon(file) {\r\n        console.log('file', file[0]);\r\n        const TOKEN = getItem('auth_token');\r\n        const data = new FormData();\r\n        data.append('file', file[0]);\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                mimeType: 'multipart/form-data',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: data\r\n            }\r\n            return fetch(BASE_URL + '/file_upload', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UploadAppIconApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UploadAppIconApi from '../api/uploadAppIconApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUploadAppIcon(data) {\r\n  return {\r\n    type: types.UPLOAD_APPLICATION_ICON,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUploadAppIconRes(data) {\r\n  return {\r\n    type: types.UPLOAD_APPLICATION_ICON_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function uploadAppIcon(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UploadAppIconApi.doUploadAppIcon(data).then(data => {\r\n        dispatch(doUploadAppIconRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === null) {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './createApplication.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitCreateApplication, doCreateApplicationRes } from '../../action/createApplicationActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nclass CreateApplicationComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getAllCountry();\r\n        // this.props.getAllUsers();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createAppRes){\r\n            if(nextProps.createAppRes.data.createApplication ){\r\n                if(nextProps.createAppRes.data.createApplication.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/applications');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/applications');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedCon = [];\r\n            for (let item of this.state.selectedCountry) {\r\n                selectedCon.push(item.value)\r\n            }\r\n            let payloadReq = {\r\n                applicationName: this.state.applicationName,\r\n                icon: this.state.icon,\r\n                selectedCountries: selectedCon.join(),\r\n                selectedUser: '',\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item\r\n        });\r\n    }\r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Application</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Create Application</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter application name\" name=\"applicationName\" onChange={(e) => this.handleChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.applicationName}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"file\" className=\"form-control\" name=\"icon\" accept=\"image/*\" onChange={(e) => this.handleFileChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedUser}\r\n                                                            onChange={this.userChange}\r\n                                                            options={userListOptions}\r\n                                                            name=\"selectedUser\"\r\n                                                            placeholder=\"Select users\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateApplicationComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createAppRes: doCreateApplicationRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateApplication(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateApplicationComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UpdateApplicationApi {\r\n    static doUpdateApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_update_app', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateApplicationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UpdateApplicationApi from '../api/updateApplicationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUpdateApp(data) {\r\n  return {\r\n    type: types.UPDATE_APPLICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUpdateAppRes(data) {\r\n  return {\r\n    type: types.UPDATE_APPLICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateApplication(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UpdateApplicationApi.doUpdateApp(data).then(data => {\r\n        dispatch(doUpdateAppRes(data));\r\n        dispatch(doUpdateAppRes(null));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n              title: 'Application updated successfully',\r\n              type: 'success',\r\n              confirmButtonText: 'OK',\r\n              allowOutsideClick: false,\r\n              timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === '') {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  if (values.selectedUser === '') {\r\n    errors.selectedUser = 'Please select Users';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// import { reduxForm } from 'redux-form';\r\nimport './updateApplication.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitUpdateApplication, doUpdateAppRes } from '../../action/updateApplicationActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nclass UpdateApplicationComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countries: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            file: null,\r\n            appData: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // Get country list //\r\n        this.props.getAllCountry();\r\n        const appDetails = this.props.location.state.appData;\r\n        this.setState({\r\n            appData: appDetails,\r\n        }, () => {\r\n            this.setState({\r\n                applicationName: this.state.appData.application_name,\r\n                icon: this.state.appData.icon,\r\n                countries: this.state.appData.selected_countries\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    }, () => {\r\n                        if (this.state.countries !== '') {\r\n                            let selectedcn = [];\r\n                            let countryD = this.state.countries.split(',');\r\n                            for (let item of this.state.countryList) {\r\n                                for (let cn of countryD) {\r\n                                    if (cn === item.country_name) {\r\n                                        selectedcn.push({\r\n                                            value: item.country_name,\r\n                                            label: item.country_name,\r\n                                            original: item\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.setState({\r\n                                selectedCountry: selectedcn,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.updateAppRes){\r\n            if(nextProps.updateAppRes.data.uploadApplication ){\r\n                if(nextProps.updateAppRes.data.uploadApplication.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/applications');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/applications');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedCou = [];\r\n            for (let item of this.state.selectedCountry) {\r\n                selectedCou.push(item.value)\r\n            }\r\n            let payloadReq = {\r\n                app_id: this.state.appData.application_id,\r\n                applicationName: this.state.applicationName,\r\n                icon: this.state.icon,\r\n                selectedCountries: selectedCou.join(),\r\n                selectedUser: '',\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Update Application</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Application</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Update Application</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter application name\" name=\"applicationName\" onChange={(e) => this.handleChange(e)} value={this.state.applicationName} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.applicationName}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <input type=\"file\" className=\"form-control\" name=\"icon\" accept=\"image/*\" onChange={(e) => this.handleFileChange(e)} />\r\n                                                                {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateApplicationComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    updateAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    updateAppRes: doUpdateAppRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateApplication(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UpdateApplicationComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass usersSearchApi {  \r\n    static doUserSearchAll(data) {\r\n        let payload = {\r\n            user_name: data\r\n        }\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body:JSON.stringify(payload)\r\n            }\r\n            return fetch(BASE_URL + '/admin_search_user', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default usersSearchApi;","import * as types from './actionTypes';  \r\nimport usersSearchApi from '../api/userSearchApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doUserSearchAll(data) {\r\n\r\n  return {\r\n    type: types.DO_ALL_SEARCH_USERS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUserAllSearchRes(data) {  \r\n  return {\r\n    type: types.DO_ALL_SEARCH_USERS_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllSearchUsers(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      usersSearchApi.doUserSearchAll(data).then(data => {\r\n        dispatch(doUserAllSearchRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass CreateNotificationApi {\r\n    static doCreateNotification(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/send_notification', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateNotificationApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport CreateNotificationApi from '../api/createNotificationApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doCreateNotification(data) {\r\n  return {\r\n    type: types.CREATE_NOTIFICATION,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateNotificationRes(data) {\r\n  return {\r\n    type: types.CREATE_NOTIFICATION_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateNotification(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      CreateNotificationApi.doCreateNotification(data).then(data => {\r\n        dispatch(doCreateNotificationRes(data));\r\n        if (data.success === true) {\r\n          Swal.fire({\r\n            title: 'Notification send successfully',\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if (data.success === false) {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        dispatch(doCreateNotificationRes(null));\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.groupValue === '') {\r\n    errors.groupValue = 'Please select group';\r\n  }\r\n  if (values.groupValue === 'user') {\r\n    if (values.selectedUser === null) {\r\n      errors.selectedUser = 'Please select users';\r\n    }\r\n  }\r\n  if (values.title === '') {\r\n    errors.title = 'Please enter title';\r\n  }\r\n  if (values.body === '') {\r\n    errors.body = 'Please enter message';\r\n  }\r\n  // if (values.icon === '') {\r\n  //   errors.icon = 'Please choose application icon';\r\n  // }\r\n  // if (values.selectedCountry === '') {\r\n  //   errors.selectedCountry = 'Please select countries';\r\n  // }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './createNotification.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\n// import { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { getAllSearchUsers, doUserAllSearchRes } from '../../action/userSearchActions';\r\nimport { submitCreateNotification, doCreateNotificationRes } from '../../action/createNotificationActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport { fetchAllApplication, getAllApplicationRes } from '../../action/applicationActions';\r\nimport { getItem } from '../../utils/localStore';\r\nlet isSend = false;\r\nclass CreateNotificationComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        isSend = false;\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            title: '',\r\n            body: '',\r\n            usersList: [],\r\n            selectedUser: null,\r\n            file: null,\r\n            isSearchLoading: false,\r\n            applicationList: [],\r\n            groupValue: '',\r\n            showUserList: false,\r\n            appName: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let userAppGroup = getItem('adminAppId');\r\n        if (userAppGroup !== null) {\r\n            this.setState({\r\n                isLoader: false,\r\n                groupValue: getItem('adminAppId'),\r\n                appName: getItem('adminAppName'),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isLoader: false,\r\n            });\r\n        }\r\n        \r\n        this.props.fetchAllApplication();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.allApplicationRes) {\r\n\t\t\tif (nextProps.allApplicationRes.data && nextProps.allApplicationRes.data.applicationList) {\r\n\t\t\t\tif (nextProps.allApplicationRes.data.applicationList.success===true) {\r\n                    this.setState({\r\n                        applicationList: nextProps.allApplicationRes.data.applicationList.data\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doUserAllSearchRes){\r\n            if (nextProps.doUserAllSearchRes.data && nextProps.doUserAllSearchRes.data.userSearch) {\r\n\t\t\t\tif (nextProps.doUserAllSearchRes.data.userSearch.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.doUserAllSearchRes.data.userSearch.data,\r\n                        isSearchLoading: false,\r\n                    });\r\n                    setTimeout(() => { this.setState({\r\n                        isSearchLoading: false\r\n                    }); }, 3000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createNotificationRes){\r\n            if(nextProps.createNotificationRes.data.createNotification ){\r\n                if(nextProps.createNotificationRes.data.createNotification.success === true && isSend){\r\n                    isSend = false;\r\n                    this.setState({\r\n                        isLoader: false,\r\n                        title: '',\r\n                        body: '',\r\n                        selectedUser: null,\r\n                        isSubmited: false,\r\n                    });\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.push('/applications');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedUsr = [];\r\n            if (this.state.selectedUser !== null) {\r\n                for (let item of this.state.selectedUser) {\r\n                    selectedUsr.push(item.original.user_id)\r\n                }\r\n            }\r\n            let payloadReq = {\r\n                application_id: this.state.groupValue !== 'user' ? this.state.groupValue : '',\r\n                selected_user: this.state.selectedUser !== null ? selectedUsr.join() : '',\r\n                title: this.state.title,\r\n                type_message: this.state.body,\r\n            }\r\n            isSend = true;\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleInputChange = (value) => {\r\n        if (value !== '') {\r\n            this.setState({\r\n                isSearchLoading: true\r\n            });\r\n\r\n        }\r\n        this.props.getAllSearchUsers(value);\r\n    }\r\n    \r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n    }\r\n    changeGroup = (value) => {\r\n        this.setState({\r\n            groupValue: value.target.value\r\n        }, () => {\r\n            if (this.state.groupValue === 'user') {\r\n                this.setState({\r\n                    showUserList: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    showUserList: false\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create Notification</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        let userRole = getItem('userRoleId');\r\n        console.log(this.state.groupValue);\r\n        return (\r\n                <LayoutWrapper title=\"Create Notification\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                {/* <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Application</span>\r\n                                </div> */}\r\n                                <span className=\"offering_detail_title\">Create Notification</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    {\r\n                                                        userRole == '1' ?\r\n                                                        <div className=\"form-group select-loader\">\r\n                                                            <label>Select Group</label>\r\n                                                            <select className=\"form-control\" name=\"groupValue\" onChange={(e) => this.changeGroup(e)} value={this.state.groupValue}>\r\n                                                                <option value=''>Select Group</option>\r\n                                                                <option value=\"user\">Individual User</option>\r\n                                                                {\r\n                                                                    (this.state.applicationList) && this.state.applicationList.map((op, i) => {\r\n                                                                        return (\r\n                                                                            <option key={i} value={op.application_id}>{op.application_name}</option>\r\n                                                                        );\r\n                                                                        \r\n                                                                    })\r\n                                                                }\r\n                                                            </select>\r\n                                                            {errors && isSubmited && <span className=\"error-message\">{errors.groupValue}</span>}\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div className=\"form-group select-loader\">\r\n                                                            <label>Selected Group</label>\r\n                                                            <select className=\"form-control\" name=\"groupValue\" value={this.state.groupValue} readOnly>\r\n                                                                <option value={this.state.groupValue} disabled={true}>{this.state.appName}</option>\r\n                                                            </select>\r\n                                                            {errors && isSubmited && <span className=\"error-message\">{errors.groupValue}</span>}\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                (this.state.showUserList) && \r\n                                                <div className=\"col-6\">\r\n                                                    <div className=\"mt-2\">\r\n                                                        <div className=\"form-group select-loader\">\r\n                                                            <label>Select Users</label>\r\n                                                            <Select\r\n                                                                value={this.state.selectedUser}\r\n                                                                onChange={this.userChange}\r\n                                                                options={userListOptions}\r\n                                                                name=\"selectedUser\"\r\n                                                                placeholder=\"Select Users\"\r\n                                                                isMulti={true}\r\n                                                                onInputChange={this.handleInputChange}\r\n                                                            />\r\n                                                            {\r\n                                                                (this.state.isSearchLoading) &&\r\n                                                                <img className=\"loading-img\" src={loaderImg} alt=\"\" />\r\n                                                            }\r\n                                                            {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            }\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label>Title</label>\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter notification title\" name=\"title\" onChange={(e) => this.handleChange(e)} value={this.state.title} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.title}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label>Message</label>\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter notification message\" name=\"body\" onChange={(e) => this.handleChange(e)} value={this.state.body} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.body}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateNotificationComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createNotificationRes: PropTypes.any,\r\n    doUserAllSearchRes: PropTypes.any,\r\n    allApplicationRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createNotificationRes: doCreateNotificationRes,\r\n    doUserAllSearchRes: doUserAllSearchRes,\r\n\tallApplicationRes: getAllApplicationRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateNotification(data)),\r\n        getAllSearchUsers: (data) => dispatch(getAllSearchUsers(data)),\r\n\t\tfetchAllApplication: () => dispatch(fetchAllApplication()),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateNotificationComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass resetPasswordApi {\r\n    static doResetpassword(data) {\r\n\r\n        let sendBody={\r\n            token: data.reset_password_token,\r\n            password: data.encrypted_password\r\n        }\r\n\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json'\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/dasda', body).then(response => {\r\n                if(response.ok === true){\r\n                    Swal.fire({\r\n                        title: 'Password reset successfully',\r\n                        type: 'success',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    })\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}\r\n\r\nexport default resetPasswordApi;\r\n","import * as types from './actionTypes';\r\nimport resetPasswordApi from '../api/resetPasswordApi';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport function doResetpassword(data) {\r\n  return {\r\n    type: types.DO_RESETPASSWORD,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doResetpasswordRes(user) {\r\n  return {\r\n    type: types.DO_RESETPASSWORD_RES,\r\n    user\r\n  };\r\n}\r\n\r\nexport function reset_password(data) {\r\n    return function(dispatch) {\r\n      resetPasswordApi.doResetpassword(data).then(user => {\r\n        dispatch(doResetpasswordRes(user));\r\n        if(user.error){\r\n          Swal.fire({\r\n            title: user.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { doResetpasswordRes } from '../../../action/resetPasswordActions';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst fields = ['encrypted_password'];\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n        {touched && error && <span>{error}</span>}\r\n    </div>\r\n)\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n\r\n    if (!values.encrypted_password) {\r\n        errors.encrypted_password = 'Required'\r\n    }\r\n    // if (values.encrypted_password) {\r\n    //     if (values.encrypted_password.search(/^\\S+$/)) {\r\n    //         errors.encrypted_password = 'Your password must not contain any space.'\r\n    //     }\r\n    //     if (values.encrypted_password.length < 10) {\r\n    //         errors.encrypted_password = 'Your password must be at least 10 characters'\r\n    //     }\r\n    //     if (values.encrypted_password.search(/[a-z]/i) < 0) {\r\n    //         errors.encrypted_password = 'Your password must contain at least one letter.'\r\n    //     }\r\n    //     if (values.encrypted_password.search(/[0-9]/) < 0) {\r\n    //         errors.encrypted_password = 'Your password must contain at least one digit.'\r\n    //     }\r\n    //     if (values.encrypted_password.search(/[!@#$%^&*]/) < 0) {\r\n    //         errors.encrypted_password = 'Your password must contain at least one special character.'\r\n    //     }\r\n    // }\r\n    return errors\r\n}\r\n\r\nclass ResetPasswordForm extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            changeTextPass: false,\r\n        }\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     this.props.reset();\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps){\r\n            if(nextProps.doResetpasswordRes.user.form.ReduxResetPasswordForm.submitSucceeded === true){\r\n                this.props.reset();\r\n            }\r\n        }\r\n    }\r\n    changePasswordButton = () => {\r\n        this.setState({\r\n            changeTextPass: !this.state.changeTextPass,\r\n        });\r\n    }\r\n    render() {\r\n        const { handleSubmit, handleFormSubmit, pristine, submitting } = this.props\r\n        return (\r\n            <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                <div className=\"small-12 columns error_message form_field_wrapper password_feild_wrapper\" style={{ marginTop: 50, marginBottom: 50 }}>\r\n                    <Field\r\n                        name=\"encrypted_password\"\r\n                        component={renderField}\r\n                        label=\"New Password\"\r\n                        autoComplete=\"off\"\r\n                        type={this.state.changeTextPass ? \"text\" : \"password\"}\r\n                    />\r\n                    {\r\n                        (this.state.changeTextPass) &&\r\n                        <div className=\"showhidepasswordbtnReset\" onClick={()=> this.changePasswordButton()}><i className=\"fa fa-eye\"></i></div>\r\n                    }\r\n                    {\r\n                        (!this.state.changeTextPass) &&\r\n                        <div className=\"showhidepasswordbtnReset\" onClick={()=> this.changePasswordButton()}><i className=\"fa fa-eye-slash\"></i></div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary login_button\" disabled={pristine || submitting}>Submit</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nResetPasswordForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitting: PropTypes.bool,\r\n    handleFormSubmit: PropTypes.func,\r\n    doResetpasswordRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    doResetpasswordRes: doResetpasswordRes\r\n});\r\n  \r\nfunction mapDispatchToProps(dispatch,ownProps) {\r\n    return {\r\n        \r\n    };\r\n}\r\n\r\nconst ReduxResetPasswordForm = reduxForm({\r\n    form: 'ReduxResetPasswordForm',\r\n    validate,\r\n    fields,\r\n    destroyOnUnmount: false,\r\n    enableReinitialize: true,\r\n    keepDirtyOnReinitialize: true,\r\n    touchOnBlur: false,\r\n})(ResetPasswordForm)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxResetPasswordForm);\r\n","\r\nimport React from 'react';\r\nimport { compose } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './passwordReset.css';\r\nimport { reset_password, doResetpasswordRes } from '../../action/resetPasswordActions';\r\nimport ResetPasswordForm from './resetpasswordForm/resetpasswordForm';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\n\r\nclass ResetPasswordComponent extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            value:'',\r\n            resetpasswordtoken:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let pathArray = this.props.location.pathname.split('/');\r\n        this.setState({\r\n            resetpasswordtoken : pathArray[2],\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) { }\r\n\r\n    handleSubmit(data){\r\n        let sendRequest = data;\r\n        sendRequest.reset_password_token = this.state.resetpasswordtoken;\r\n        this.props.handleFormSubmit(sendRequest);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forgetpassword_content login_content\">\r\n                <div className=\"login_content_inner\">\r\n                    <div className=\"login_content_inner_head\">\r\n                        <div className=\"company_logo\">\r\n                            <img src={logoImg} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"login_content_inner_body\">\r\n                        <div className=\"login_content_inner_body_inner\">\r\n                            {/* <div className=\"user_icon\"><i className=\"fa fa-user-o\"></i></div> */}\r\n                            <div className=\"forgetpassword_heading login_heading\">\r\n                                Reset Password\r\n                            </div>\r\n                            <div className=\"form_content_resetpassword\">\r\n                                <ResetPasswordForm handleFormSubmit={(data) => { this.handleSubmit(data) }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nResetPasswordComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    resetpasswordRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    resetpasswordRes: doResetpasswordRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(reset_password(data))\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ResetPasswordComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass AdminApi { \r\n\r\n    static doAppAdmin(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/adminlist', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default AdminApi;","import * as types from './actionTypes';  \r\nimport AdminApi from '../api/adminDetailsApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doAppAdmin(data) {\r\n  return {\r\n    type: types.DO_APP_ADMIN,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAppAdminRes(data) {  \r\n  return {\r\n    type: types.DO_APP_ADMIN_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function get_app_admin(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      AdminApi.doAppAdmin(data).then(data => {\r\n        dispatch(doAppAdminRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\n\r\nclass DeleteAdminApi {\r\n\r\n    static doDeleteAdmin(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/deleteAdmin', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteAdminApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteAdminApi from '../api/deleteAdminApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doDeleteAdmin(data) {\r\n  return {\r\n    type: types.DELETE_ADMIN,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteAdminRes(data) {\r\n  return {\r\n    type: types.DELETE_ADMIN_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function delete_admin(data) {\r\n\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteAdminApi.doDeleteAdmin(data).then(data => {\r\n        dispatch(doDeleteAdminRes(data));\r\n        dispatch(doDeleteAdminRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport Loader from 'react-loader-advanced';\r\nimport Modal from \"react-responsive-modal\";\r\nimport './adminDetails.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { get_app_admin, doAppAdminRes } from '../../action/adminDetailsActions';\r\nimport { delete_admin, doDeleteAdminRes } from '../../action/deleteAdminActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\n\r\nlet isDelete = false;\r\n\r\nclass AdminDetailsComponent extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n      adminList: [],\r\n      selectAdminData: {},\r\n      adminId: ''\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let appData = this.props.location.state.applicationData;\r\n    this.setState({\r\n      selectAdminData: appData\r\n    });\r\n    let payLoad = {\r\n      application_id: appData.application_id\r\n    }\r\n    this.props.getAppAdminList(payLoad);\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.appAdminRes) {\r\n\t\t\tif (props.appAdminRes.data && props.appAdminRes.data.adminDetails) {\r\n\t\t\t\tif (props.appAdminRes.data.adminDetails.success===true) {\r\n          this.setState({\r\n            adminList: props.appAdminRes.data.adminDetails.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAdminRes) {\r\n\t\t\tif (props.doDeleteAdminRes.data && props.doDeleteAdminRes.data.deleteAdmin) {\r\n\t\t\t\tif (props.doDeleteAdminRes.data.deleteAdmin.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          let payLoadData = {\r\n            application_id: this.state.selectAdminData.application_id\r\n          }\r\n          this.props.getAppAdminList(payLoadData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  createAdmin(){\r\n    this.props.history.push('/create-admin',{\r\n      applicationData: this.state.selectAdminData\r\n    })\r\n  }\r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      admin_id: this.state.adminId\r\n    }\r\n    this.props.deleteAdmin(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      adminId: rowData.user_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/applications');\r\n  }\r\n\r\n  actionAddressTemplate = (rowData) => {\r\n    return (\r\n      <div>\r\n        {rowData.address1} {rowData.address2}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { selectAdminData } = this.state;\r\n    const { adminList } = this.state;\r\n    const Header = (<div className=\"offer_head\">Applications</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                      </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Applications\" header={Header} >\r\n          <div className=\"admin-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"createprofile_heading\">\r\n                          <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                            <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                            <span className=\"createprofile_go_back\">Back to Admin</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"admin-list-title\">{selectAdminData.application_name} Application</div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-create-admin\" onClick={() => this.createAdmin()}>Create Admin</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={adminList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\">\r\n                          <Column className=\"tableCols\" field=\"email\" header=\"Email\" sortable style={{width: '280px'}}/>\r\n                          <Column className=\"tableCols\" field=\"fullname\" header=\"Full Name\" sortable style={{width: '120px'}}/>\r\n                          <Column className=\"tableCols\" field=\"address\" header=\"Address\" body={this.actionAddressTemplate} sortable style={{width: '150px'}}/>\r\n                          <Column className=\"tableCols\" field=\"country\" header=\"Country\" sortable style={{width: '120px'}} />\r\n                          <Column className=\"tableCols\" field=\"state\" header=\"State\" sortable style={{width: '120px'}} />\r\n                          <Column className=\"tableCols\" field=\"city\" header=\"City\" sortable style={{width: '120px'}} />\r\n                          <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '130px'}}/>\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button className=\"btn delete-user-yes-btn\" onClick={() => this.deleteApp()} disabled={this.state.isDisabled}>\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button className=\"btn delete-user-no-btn\" onClick={() => this.cancelDeleteApp()}>\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nAdminDetailsComponent.propTypes = {\r\n  appAdminRes: PropTypes.any,\r\n\tdoDeleteAdminRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  appAdminRes: doAppAdminRes,\r\n\tdoDeleteAdminRes: doDeleteAdminRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getAppAdminList: (data) => dispatch(get_app_admin(data)),\r\n\t\tdeleteAdmin: (data) => dispatch(delete_admin(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(AdminDetailsComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass createAdminApi {\r\n\r\n    static doCreateAdmin(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createAdmin', body).then(response => {\r\n                if(response.ok === true){\r\n                    Swal.fire({\r\n                        title: 'Admin created successfully',\r\n                        type: 'success',\r\n                        confirmButtonText: 'OK',\r\n                        allowOutsideClick: false,\r\n                        timer: 3000\r\n                    })\r\n                }\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}\r\n\r\nexport default createAdminApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport createAdminApi from '../api/createAdminApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function doCreateAdmin(data) {\r\n  return {\r\n    type: types.DO_CREATE_ADMIN,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateAdminRes(data) {\r\n  return {\r\n    type: types.DO_CREATE_ADMIN_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function create_admin(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      createAdminApi.doCreateAdmin(data).then(data => {\r\n        dispatch(doCreateAdminRes(data));\r\n        dispatch(doCreateAdminRes(null));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.email === '') {\r\n    errors.email = 'Please enter email';\r\n  }\r\n  if (values.password === '') {\r\n    errors.password = 'Please enter password';\r\n  }\r\n  if (values.fullname === '') {\r\n    errors.fullname = 'Please enter fullname';\r\n  }\r\n  if (values.company === '') {\r\n    errors.company = 'Please enter company';\r\n  }\r\n  if (values.address1 === '') {\r\n    errors.address1 = 'Please enter address 1';\r\n  }\r\n  if (values.address2 === '') {\r\n    errors.address2 = 'Please enter address 2';\r\n  }\r\n  if (values.country === '') {\r\n    errors.country = 'Please select country';\r\n  }\r\n  if (values.state === '') {\r\n    errors.state = 'Please select state';\r\n  }\r\n  if (values.city === '') {\r\n    errors.city = 'Please select city';\r\n  }\r\n  if (values.zipcode === '') {\r\n    errors.zipcode = 'Please enter zip code';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport Select from 'react-select';\r\nimport './createAdmin.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { create_admin, doCreateAdminRes } from '../../action/createAdminActions';\r\nimport { getAllCountry, getAllState, getAllCity, doAllCountryRes, doAllCityRes, doAllStateRes } from '../../action/createUserActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\n\r\nclass CreateAdminComponent extends React.PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            fullname: '',\r\n            email: '',\r\n            password: '',\r\n            company: '',\r\n            address1: '',\r\n            address2: '',\r\n            country: '',\r\n            state: '',\r\n            city: '',\r\n            zipcode: '',\r\n            countryList: [],\r\n            stateList: [],\r\n            cityList: [],\r\n            selectedCountry: null,\r\n            selectedState: null,\r\n            selectedCity: null,\r\n            showPasshword: false,\r\n            applicationData: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let appData = this.props.location.state.applicationData;\r\n        this.setState({\r\n            applicationData: appData\r\n        });\r\n        this.props.getAllCountry();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllStateRes){\r\n            if(nextProps.doAllStateRes.data.stateList ){\r\n                if(nextProps.doAllStateRes.data.stateList.success === true){\r\n                    this.setState({\r\n                        stateList: nextProps.doAllStateRes.data.stateList.stateList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCityRes){\r\n            if(nextProps.doAllCityRes.data.cityList ){\r\n                if(nextProps.doAllCityRes.data.cityList.success === true){\r\n                    this.setState({\r\n                        cityList: nextProps.doAllCityRes.data.cityList.citylist\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.createAdminRes){\r\n            if(nextProps.createAdminRes.data.createAdmin ){\r\n                if(nextProps.createAdminRes.data.createAdmin.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/adminDetails',{\r\n                        applicationData: this.state.applicationData\r\n                      })\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        \r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                fullname: this.state.fullname,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                company: this.state.company,\r\n                address1: this.state.address1,\r\n                address2: this.state.address2,\r\n                country: this.state.country,\r\n                state: this.state.state,\r\n                city: this.state.city,\r\n                zipcode: this.state.zipcode,\r\n                access_application_id: this.state.applicationData.application_id\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n            this.setState({\r\n                isLoader: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n        this.props.getAllState(item.original.id)\r\n    }\r\n\r\n    stateChange = (item) => {\r\n        this.setState({\r\n            selectedState: item,\r\n            state: item.value\r\n        });\r\n        this.props.getAllCity(item.original.state_id)\r\n    }\r\n\r\n    cityChange = (item) => {\r\n        this.setState({\r\n            selectedCity: item,\r\n            city: item.value\r\n        });\r\n    }\r\n\r\n    createApproved(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    showHidePass = () => {\r\n        this.setState({\r\n            showPasshword: !this.state.showPasshword\r\n        },()=>{ })\r\n    }\r\n\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create Admin</div>);\r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, stateList, cityList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const stateListOptions = [];\r\n        if (stateList && stateList.length > 0) {\r\n            stateList.map((item) => {\r\n                stateListOptions.push({ value: item.state_name, label: item.state_name, original: item });\r\n                return (\r\n                <option value={item.state_name} id={item.state_id} key={item.state_id}>\r\n                    {item.state_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        const cityListOptions = [];\r\n        if (cityList && cityList.length > 0) {\r\n            cityList.map((item) => {\r\n                cityListOptions.push({ value: item.city_name, label: item.city_name, original: item });\r\n                return (\r\n                <option value={item.city_name} id={item.city_id} key={item.city_id}>\r\n                    {item.city_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <LayoutWrapper title=\"Create User\" header={Header} >\r\n                <Loader show={this.state.isLoader} message={spinner}>\r\n                    <div className=\"edit_profile_content_wrapper\">\r\n                        <div className=\"createprofile_heading\">\r\n                            <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                <span className=\"createprofile_go_back\">Back to Admin</span>\r\n                            </div>\r\n                            <span className=\"offering_detail_title\">Create Admin</span>\r\n                        </div>\r\n                        <div className=\"editprofile_content\">\r\n                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                <div >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter full name\" name=\"fullname\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.fullname}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.email}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type={this.state.showPasshword ? \"text\" : \"password\"} className=\"form-control\" placeholder=\"Enter password\" name=\"password\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {\r\n                                                        this.state.showPasshword &&\r\n                                                        <p onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </p>\r\n                                                    }\r\n                                                    {\r\n                                                        !this.state.showPasshword &&\r\n                                                        <span onClick={this.showHidePass}>\r\n                                                            <i className=\"fa fa-eye-slash eye_icon\" aria-hidden=\"true\"></i>\r\n                                                        </span>\r\n                                                    }\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.password}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter company name\" name=\"company\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.company}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 1\" name=\"address1\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address1}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter address 2 (Optional)\" name=\"address2\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.address2}</span>}\r\n                                                </div>\r\n                                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Enter ZipCode\" name=\"zipcode\" onChange={(e) => this.handleChange(e)} />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.zipcode}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCountry}\r\n                                                        onChange={this.countryChange}\r\n                                                        options={countryListOptions}\r\n                                                        name=\"country\"\r\n                                                        placeholder=\"Select Country\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.country}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedState}\r\n                                                        onChange={this.stateChange}\r\n                                                        options={stateListOptions}\r\n                                                        name=\"state\"\r\n                                                        placeholder=\"Select State\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.state}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <Select\r\n                                                        value={this.state.selectedCity}\r\n                                                        onChange={this.cityChange}\r\n                                                        options={cityListOptions}\r\n                                                        name=\"city\"\r\n                                                        placeholder=\"Select City\"\r\n                                                    />\r\n                                                    {errors && isSubmited && <span className=\"error-message\">{errors.city}</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Loader>\r\n            </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateAdminComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createAdminRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    doAllCityRes: PropTypes.any,\r\n    doAllStateRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createAdminRes: doCreateAdminRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    doAllCityRes: doAllCityRes,\r\n    doAllStateRes: doAllStateRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(create_admin(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllState: (data) => dispatch(getAllState(data)),\r\n        getAllCity: (data) => dispatch(getAllCity(data)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateAdminComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass NovusBiApi {  \r\n    static getnovusBi() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/application_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default NovusBiApi;","import * as types from './actionTypes';  \r\nimport novusBiApi from '../api/novusBiApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getnovusBi() {\r\n\r\n  return {\r\n    type: types.FETCH_NOVUSBI,\r\n  };\r\n}\r\n\r\nexport function getnovusBiRes(data) {  \r\n  return {\r\n    type: types.FETCH_NOVUSBI_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchnovusBi() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiApi.getnovusBi().then(data => {\r\n        dispatch(getnovusBiRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './novusBi.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchnovusBi, getnovusBiRes } from '../../action/novusBiActions';\r\nimport { deleteApplicationRecord, doDeleteAppRes } from '../../action/deleteApplicationActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Button} from 'primereact/button';\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass NovusBiComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      wmsList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      novusBiList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n      opened: false,\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n    this.toggleBox = this.toggleBox.bind(this);\r\n    this.toggleBtn1 = this.toggleBtn1.bind(this);\r\n    this.toggleBtn2 = this.toggleBtn2.bind(this);\r\n    this.toggleBtn3 = this.toggleBtn3.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        novusBiList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetchnovusBi();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props)\r\n    if (props.novusBiRes) {\r\n\t\t\tif (props.novusBiRes.data && props.novusBiRes.data.novusBi) {\r\n\t\t\t\tif (props.novusBiRes.data.novusBi.success===true) {\r\n          this.setState({\r\n            novusBiList: props.novusBiRes.data.novusBi.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteApplication) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteApplication.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchAllApplication();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goUpdateApplication = (rowData) => {\r\n    // this.props.history.push({\r\n    //   pathname: '/novus-bi-create',\r\n    //   state: {appData: rowData}\r\n    // })\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-create')\r\n  }\r\n\r\n  \r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      app_id: this.state.appId\r\n    }\r\n    this.props.deleteApplicationRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      appId: rowData.application_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src='http://localhost:3000/static/media/novusone-logo.6b9fef02.png' alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleBox() {\t\t\r\n\t\tthis.setState({\r\n      opened: true,\r\n    });    \r\n  }\r\n  toggleBtn1() {\t\r\n\t\tthis.setState({\r\n      opened: false,\r\n    });    \r\n  }\r\n  toggleBtn2() {\t\r\n\t\tthis.setState({\r\n      opened: false,\r\n    });    \r\n  }\r\n  toggleBtn3() {\t\r\n\t\tthis.setState({\r\n      opened: false,\r\n    });    \r\n\t}\r\n  actionStatusTemplate = (data) => {\r\n    const { opened } = this.state;\r\n    return (\r\n      <div className=\"status_main_bx\">\r\n        <button className=\"btn pending-status\" onClick={this.toggleBox}>\r\n          Draft\r\n        </button> \r\n        { opened && (\r\n          <div className=\"status_bx\">\r\n          <Button label=\"Draft\" icon=\"pi pi-pencil\" className=\"btn pending-status\" iconPos=\"left\" onClick={this.toggleBtn1} />\r\n          <Button label=\"Not published\" className=\"btn btn-delete-customer\" icon=\"pi pi-clock\" className=\"btn pending-status\" iconPos=\"left\" onClick={this.toggleBtn2} />\r\n          <Button label=\"Published\" className=\"btn approve-status\" icon=\"pi pi-check\" className=\"btn pending-status\" iconPos=\"left\" onClick={this.toggleBtn3\r\n          } />\r\n          </div>  \r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    return (\r\n      <div className=\"date_field\" style={{textAlign: 'center'}}>\r\n        <p onClick={()=> this.goToAdmin(rowData)}>\r\n          19/02/2020 11:15  \r\n        </p>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    // this.props.history.push('/adminDetails',{\r\n    //   applicationData: data\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { novusBiList } = this.state;\r\n    console.log(novusBiList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Applications</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Applications\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">News</div>\r\n                      </div>\r\n                      {\r\n                        userRole == '1' &&\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createApp()}>Create List</button>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={novusBiList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.wmsList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                        <Column selectionMode=\"multiple\" style={{width:'2em'}}/>\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"application_name\" header=\"Title\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Date\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          <Column className=\"tableCols\" field=\"\" header=\"Status\" style={{width: '120px'}} body={this.actionStatusTemplate} />\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nNovusBiComponent.propTypes = {\r\n\tnovusBiRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  novusBiRes: getnovusBiRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchnovusBi: () => dispatch(fetchnovusBi()),\r\n\t\tdeleteApplicationRecord: (data) => dispatch(deleteApplicationRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(NovusBiComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass CreateCategoryApi {\r\n    static doCreateCategory(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createCategories', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateCategoryApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport CreateCategoryApi from '../api/createCategoryApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doCreateCategory(data) {\r\n  return {\r\n    type: types.CREATE_CATEGORY,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateCategoryRes(data) {\r\n  return {\r\n    type: types.CREATE_CATEGORY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateCategory(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      CreateCategoryApi.doCreateCategory(data).then(data => {\r\n        dispatch(doCreateCategoryRes(data));\r\n        dispatch(doCreateCategoryRes(null));\r\n        if (data.success === true) {\r\n          Swal.fire({\r\n            title: 'Category created successfully',\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if (data.success === false) {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.category_name === '') {\r\n    errors.category_name = 'Please enter category name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose category icon';\r\n  }\r\n  // if (values.selectedCountry === null) {\r\n  //   errors.selectedCountry = 'Please select countries';\r\n  // }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './novusBiCreate.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitCreateCategory, doCreateCategoryRes } from '../../action/createCategoryActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport {FileUpload} from 'primereact/fileupload';\r\nimport Select from 'react-select';\r\nclass NovusBiCreateComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            category_name: '',\r\n            cat_id: 0,\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null,\r\n            categoryTitle:'Create Category',\r\n            iconName:'Choose Icon'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.props.getAllUsers();\r\n        console.log(this.props.location)\r\n        \r\n        if(this.props.location.state){\r\n            const appDetails = this.props.location.state.appData;\r\n            this.setState({\r\n                appData: appDetails,\r\n            }, () => {\r\n                this.setState({\r\n                    cat_id: this.state.appData.cat_id,\r\n                    categoryTitle:'Create Sub Category'\r\n                    // countries: this.state.appData.selected_countries\r\n                })\r\n            });\r\n        }\r\n        \r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            isLoader: false\r\n        });\r\n        console.log(\"Check nextProps\", nextProps)\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createAppRes){\r\n            if(nextProps.createAppRes.data.createCategory ){\r\n                if(nextProps.createAppRes.data.createCategory.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/category-list');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/category-list');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(\"hello\")\r\n        this.setState({\r\n          isSubmited: true,\r\n        //   isLoader:true\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                parent_id: this.state.cat_id,\r\n                category_name: this.state.category_name,\r\n                icon: this.state.icon\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    fileUploadProcess= () =>{\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n    }\r\n    onBasicUploadAuto = (event) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                iconName:response.path,\r\n                icon:response.imageurl,\r\n                iconError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                iconError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    \r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Category\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\"> \r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Category</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">{this.state.categoryTitle}</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter name\" name=\"category_name\" onChange={(e) => this.handleChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.category_name}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                            <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"icon\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto={true} chooseLabel={this.state.iconName} />\r\n                                                            {errors && isSubmited && <span className=\"error-message err-msg\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedUser}\r\n                                                            onChange={this.userChange}\r\n                                                            options={userListOptions}\r\n                                                            name=\"selectedUser\"\r\n                                                            placeholder=\"Select users\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nNovusBiCreateComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createAppRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createAppRes: doCreateCategoryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateCategory(data)),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(NovusBiCreateComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nclass novusBiArticleApi {\r\n    static donovusBiArticle(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createContant', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    static fetchAllCountry() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/country_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllState(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            countryid: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/state_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllCity(data) {\r\n        console.log('state id', data);\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            stateId: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/city_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default novusBiArticleApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport novusBiArticleApi from '../api/novusBiArticleApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function donovusBiArticle(data) {\r\n  return {\r\n    type: types.DO_NOVUSBI_ARTICLE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function donovusBiArticleRes(data) {\r\n  return {\r\n    type: types.DO_NOVUSBI_ARTICLE_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitnovusBiArticle(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.donovusBiArticle(data).then(data => {\r\n        \r\n        dispatch(donovusBiArticleRes(data));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.success === false){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCountry() {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY,\r\n  };\r\n}\r\n\r\nexport function doAllCountryRes(data) {\r\n  return {\r\n    type: types.FETCH_All_COUNTRY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCountry() {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.fetchAllCountry().then(data => {\r\n        dispatch(doAllCountryRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllState(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllStateRes(data) {\r\n  return {\r\n    type: types.FETCH_All_STATE_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllState(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.fetchAllState(data).then(data => {\r\n        dispatch(doAllStateRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\nexport function fetchAllCity(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doAllCityRes(data) {\r\n  return {\r\n    type: types.FETCH_All_CITY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getAllCity(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiArticleApi.fetchAllCity(data).then(data => {\r\n        dispatch(doAllCityRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass AllCategoryListApi {  \r\n    static getAllcategoryList() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/Categories_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                // console.log(response.json())\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default AllCategoryListApi;","import * as types from './actionTypes';  \r\nimport AllCategoryListApi from '../api/allCategoryListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getallcategoryList() {\r\n\r\n  return {\r\n    type: types.FETCH_ALLCATEGORYLIST,\r\n  };\r\n}\r\n\r\nexport function getallcategoryListRes(data) {  \r\n  return {\r\n    type: types.FETCH_ALLCATEGORYLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchallcategoryList() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      AllCategoryListApi.getAllcategoryList().then(data => {\r\n        console.log(data)\r\n        dispatch(getallcategoryListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === null) {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './novusBiArticle.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/novusBiArticleActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions'; \r\nimport { submitnovusBiArticle, donovusBiArticleRes } from '../../action/novusBiArticleActions';\r\nimport { fetchallcategoryList, getallcategoryListRes } from '../../action/allCategoryListActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport {Editor} from \"primereact/editor\";\r\nimport {Button} from \"primereact/button\";\r\nimport ImagesUploader from 'react-images-uploader';\r\nimport 'react-images-uploader/styles.css';\r\nimport 'react-images-uploader/font.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Calendar} from 'primereact/calendar';\r\n\r\nimport {MultiSelect} from 'primereact/multiselect';\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {InputSwitch} from 'primereact/inputswitch';\r\nimport {FileUpload} from 'primereact/fileupload';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {Growl} from 'primereact/growl';\r\nconst editorArray = [{'type':\"editor\",'name':\"\"}];\r\nclass NovusBiArticleComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            categoryList:[],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null,\r\n            uploader: false,\r\n            editor: true,\r\n            embed: false,\r\n            quote: false,\r\n            showMenu: false,\r\n            showMenuSection: false,\r\n            date:new Date(),\r\n            authorInput:false,\r\n            authorSelect:true,\r\n            comment:true,\r\n            editorArray:editorArray,\r\n            mainTitle:'',\r\n            pdf:'',\r\n            pdfName:'Search for',\r\n            pdfError:'',\r\n            uploadName:'Upload Here',\r\n            uploadUrl:'',\r\n            UploaderError: '',\r\n            authorShow:false,\r\n            categories:[],\r\n            soundShow:false,\r\n            articleShow:true,\r\n            type:'All Articles',\r\n            backCat:[],\r\n            thumbname:'Choose Thumbnail',\r\n            thumbnail:'',\r\n            thumbnailError:''\r\n        }\r\n        \r\n        this.showMenu = this.showMenu.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n        this.showMenuSection = this.showMenuSection.bind(this);\r\n        this.closeMenuSection = this.closeMenuSection.bind(this);\r\n        this.onBasicUploadAuto = this.onBasicUploadAuto.bind(this);\r\n    }\r\n    showMenu(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({ showMenu: true }, () => {\r\n          document.addEventListener('click', this.closeMenu);\r\n        });\r\n      }\r\n      \r\n      closeMenu(event) {\r\n        \r\n        if (!this.dropdownMenu.contains(event.target)) {\r\n          \r\n          this.setState({ showMenu: false }, () => {\r\n            document.removeEventListener('click', this.closeMenu);\r\n          });  \r\n          \r\n        }\r\n      }\r\n\r\n      showMenuSection(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({ showMenuSection: true }, () => {\r\n          document.addEventListener('click', this.closeMenuSection);\r\n        });\r\n      }\r\n      \r\n      closeMenuSection(event) {\r\n        \r\n        if (!this.dropdownMenusec.contains(event.target)) {\r\n          \r\n          this.setState({ showMenuSection: false }, () => {\r\n            document.removeEventListener('click', this.closeMenuSection);\r\n          });  \r\n          \r\n        }\r\n      }\r\n    selectAuthor = (event) => {\r\n        console.log(event)\r\n        if(event.name === 'Other'){\r\n            this.setState({\r\n                authorInput:true,\r\n                authorSelect:false\r\n            })\r\n        }else{\r\n            this.setState({\r\n                authorInput:false,\r\n                authorSelect:true,\r\n                author:event.name,\r\n                authorVal:event\r\n            })\r\n        }\r\n    }\r\n    onBasicUploadAuto(event) {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                pdfName:response.path,\r\n                pdf:response.imageurl,\r\n                pdfError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                pdfError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n\r\n    onBasicUploadThumb = (event) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                thumbname:response.path,\r\n                thumbnail:response.imageurl,\r\n                thumbnailError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                thumbnailError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        if(this.props.location.state){\r\n            const appDetails = this.props.location.state.appData;\r\n            console.log(appDetails);\r\n            this.setState({\r\n                appData: appDetails,\r\n            }, () => {\r\n                this.setState({\r\n                    cat_id: this.state.appData.contant_id,\r\n                    mainTitle:this.state.appData.title,\r\n                    editorArray:JSON.parse(this.state.appData.contant),\r\n                    type:this.state.appData.type,\r\n                    categories:this.state.appData.categories.split(','),\r\n                    date:this.state.appData.date,\r\n                    author:this.state.appData.author,\r\n                    heighlight:this.state.appData.higlight,\r\n                    resume:this.state.appData.resume,\r\n                    comment:parseInt(this.state.appData.comment),\r\n                    authorShow:true\r\n                    // countries: this.state.appData.selected_countries\r\n                })\r\n                \r\n            });\r\n        }\r\n\r\n        this.props.getAllCountry();\r\n        this.props.fetchallcategoryList();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.allCategoryListRes){\r\n            if(nextProps.allCategoryListRes.data.allCategoryList ){\r\n                if(nextProps.allCategoryListRes.data.allCategoryList.success === true){\r\n                    this.setState({\r\n                        categoryList: nextProps.allCategoryListRes.data.allCategoryList.data,\r\n                        backCat: nextProps.allCategoryListRes.data.allCategoryList.data,\r\n                    },()=>{\r\n                        let cat =[];\r\n                        for(let item of this.state.categoryList){\r\n                            for(let subitem of this.state.categories){\r\n                                if(parseInt(item.id) == parseInt(subitem)){\r\n                                    \r\n                                    console.log(parseInt(item.id),parseInt(subitem))\r\n                                    cat.push(item);\r\n                                    this.setState({\r\n                                        category:cat\r\n                                    })\r\n                                }\r\n                            }\r\n                        }       \r\n                        console.log(this.state.category)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.ArticleAppRes){\r\n            if(nextProps.ArticleAppRes.data.novusBiArticle ){\r\n                if(nextProps.ArticleAppRes.data.novusBiArticle.success === true){\r\n                    console.log(\"success\")\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/content-list');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/content-list');\r\n    }\r\n    editorBtn = (i, item) => {\r\n        editorArray.splice(i+1, 0, {\r\n            'type':item,'name':\"\"\r\n        });\r\n        editorArray.join();\r\n        this.setState({\r\n            editorArray:editorArray,\r\n            quote:!this.state.quote\r\n        })\r\n        console.log(this.state.editorArray)\r\n    }\r\n    handleSubmit = () => {\r\n        \r\n        const categories = [];\r\n        const catName = [];\r\n        // if(this.state.editorArray[0].name == ''){\r\n        //     Swal.fire({\r\n        //         title: 'Please add content ',\r\n        //         type: 'error',\r\n        //         confirmButtonText: 'OK',\r\n        //         allowOutsideClick: false,\r\n        //         timer: 3000\r\n        //       });\r\n        // }else\r\n        if(this.state.category){\r\n            for(let item of this.state.category){\r\n                categories.push(item.id)\r\n                catName.push(item.name)\r\n            }\r\n            const vals = categories.join(',');\r\n            const valsName = catName.join(',');\r\n            this.setState({\r\n            isSubmited: true,\r\n            }, () => { });\r\n            validate(this.state);\r\n            const errors = validate(this.state);\r\n            console.log(this.state)\r\n            // if (Object.keys(errors).length === 0) {\r\n                \r\n                let payloadReq = {\r\n                    title: this.state.mainTitle,\r\n                    thumbnail:this.state.thumbnail,\r\n                    content: this.state.editorArray,\r\n                    type:this.state.type.name,\r\n                    category:vals,\r\n                    categories_name:valsName,\r\n                    date:this.state.date,\r\n                    author:this.state.author,\r\n                    heighlight:this.state.heighlight,\r\n                    resume:this.state.resume,\r\n                    comment:this.state.comment,\r\n                    pdf:this.state.pdf\r\n                }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }else{\r\n            Swal.fire({\r\n                title: 'Please choos a category (Appear at).',\r\n                type: 'error',\r\n                confirmButtonText: 'OK',\r\n                allowOutsideClick: false,\r\n                timer: 3000\r\n              });\r\n        }\r\n        \r\n        \r\n        // }\r\n    }\r\n    handleEditorChange(e,index){\r\n        console.log(e)\r\n        this.state.editorArray.map((editor, sidx) => {\r\n            if(sidx === index){\r\n                editor.name = e.htmlValue;\r\n            }\r\n            \r\n          });\r\n        this.setState({ editorArray: this.state.editorArray });\r\n    }\r\n    handleEmbadeChange(e,index){\r\n        console.log(e.target.value)\r\n        this.state.editorArray.map((editor, sidx) => {\r\n            if(sidx === index){\r\n                editor.name = e.target.value;\r\n            }\r\n            \r\n          });\r\n        this.setState({ editorArray: this.state.editorArray });\r\n    }\r\n    fileUploadProcess= () =>{\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n    }\r\n    contentUploadImage(event,index) {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        console.log(\"done\")\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){            \r\n            this.state.editorArray.map((editor, sidx) => {\r\n                if(sidx === index){\r\n                    editor.name = response.imageurl;\r\n                }\r\n                \r\n              });\r\n            this.setState({ \r\n                editorArray: this.state.editorArray,\r\n                uploadName:response.path,\r\n                quote:!this.state.quote });\r\n        }else{\r\n            \r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    contentUploadAudio = (e) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(e.xhr.response)\r\n        console.log(response)\r\n        if(response.success === true){ \r\n                editorArray[0].name = response.imageurl;    \r\n                this.setState({ \r\n                editorArray: editorArray,                \r\n                uploadName:response.path,\r\n                quote:!this.state.quote },()=>{\r\n                    console.log(this.state.editorArray)\r\n                });\r\n        }else{\r\n            \r\n        } \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item\r\n        });\r\n    }\r\n    titleChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            mainTitle:e.target.value\r\n        })\r\n    }\r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    typeSelect = (e) =>{\r\n        console.log(e.value.name)\r\n        this.setState({type: e.value})\r\n       let cats = [];\r\n       this.setState({\r\n        categoryList:this.state.backCat\r\n       },()=>{\r\n        if(e.value.name ==  'All Sounds'){\r\n            editorArray[0].type = \"audio\";\r\n            for(let item of this.state.categoryList){\r\n                if(item.name == 'Podcast'){\r\n                  cats.push(item);\r\n                }\r\n              }\r\n              console.log(editorArray)\r\n            this.setState({\r\n                soundShow:true,\r\n                articleShow:false,\r\n                categoryList:cats,\r\n                editorArray: editorArray\r\n            })\r\n        }else{\r\n            editorArray[0].type = \"editor\";\r\n            for(let item of this.state.categoryList){\r\n                if(item.name != 'Podcast'){\r\n                    cats.push(item);\r\n                }\r\n            }\r\n            this.setState({\r\n                soundShow:false,\r\n                articleShow:true,\r\n                categoryList:cats,\r\n                editorArray: editorArray\r\n            })\r\n        }\r\n       })\r\n        \r\n    }\r\n    remove = (index) =>{\r\n        editorArray.splice(index,1);\r\n        this.setState({\r\n            editorArray:editorArray,\r\n            quote:!this.state.quote\r\n        }) \r\n    }\r\n    renderHeader() {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    \r\n    render() {\r\n        const allContent = [\r\n            {name: 'All Articles'},\r\n            {name: 'All Sounds'},\r\n        ];\r\n\r\n            \r\n        \r\n        const authorSection = [\r\n            {name: 'Other'},\r\n            {name: 'Team'},\r\n            {name: 'GuilhermeFray'},\r\n        ];  \r\n        const header = this.renderHeader();\r\n\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>  \r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper main_content_bx\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Content List</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Add Content</span>\r\n                            </div>\r\n                            \r\n                                             \r\n                            <div className=\"row\">\r\n                                <div className=\"col-9 col-md-9\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-7\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    \r\n                                                    <InputText className=\"form-control\" value={this.state.mainTitle} placeholder=\"Title of your article\" name=\"mainTitle\" onChange={(e) => this.titleChange(e)} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-5\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                            <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"thumbnail\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadThumb} auto={true} chooseLabel={this.state.thumbname} />\r\n                                                            {this.state.thumbnailError != '' && <span className=\"error-message err-msg\">Something went wrong</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.thumbnail} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                    </div>\r\n                                    \r\n                                    {this.state.articleShow && this.state.editorArray.map((editorVal, index) => (\r\n                                    <div className=\"editprofile_content \" key={index}>\r\n                                        <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                        \r\n                                            <div> \r\n                                                <div className=\"row\">   \r\n                                                    { 'editor' === editorVal.type && (                       \r\n                                                    <div className=\"col-12\">\r\n                                                    \r\n                                                        <Editor className=\"editor_cls\" style={{height:'320px'}} value={editorVal.name} onTextChange={(e)=>this.handleEditorChange(e,index)}/>\r\n                                                    \r\n                                                    </div>\r\n                                                    )}\r\n                                                    { 'uploader' === editorVal.type && (\r\n                                                    <div className=\"col-12\">\r\n                                                        <div className=\"image_uploader_main\">\r\n                                                            {\r\n                                                                editorVal.name === '' &&\r\n                                                                <i className=\"fa fa-camera upload_icon\"></i>\r\n                                                            }\r\n                                                            {\r\n                                                                editorVal.name !== '' &&\r\n                                                                <img src={editorVal.name} style={{\"maxWidth\":\"200px\"}} />\r\n                                                            }\r\n                                                            <br /><br />\r\n                                                            <FileUpload mode=\"basic\" onProgress={this.fileUploadProcess} name=\"uploader\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={(e) => this.contentUploadImage(e,index)} auto={true} chooseLabel={this.state.uploadName} />\r\n                                                            \r\n                                                        </div>\r\n                                                        \r\n                                                    </div>  \r\n                                                    )} \r\n                                                    { 'embed' === editorVal.type && (\r\n                                                    <div className=\"col-12\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"image_uploader_main\">\r\n                                                                <i className=\"fa fa-code upload_icon\"></i>\r\n                                                                <p>Paste the embedded code below</p>\r\n                                                                <InputTextarea  onChange={(e)=>this.handleEmbadeChange(e,index)} rows={4} className=\"text_area_article\"></InputTextarea>\r\n                                                                \r\n                                                            </div>                                                            \r\n                                                        </div>\r\n                                                    </div>     \r\n                                                    )}\r\n                                                    { 'quote' === editorVal.type && (\r\n                                                    <div className=\"col-12\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"image_uploader_main\">\r\n                                                                <i className=\"fa fa-quote-right upload_icon\"></i>\r\n                                                                <p>Quotations</p>\r\n                                                                <InputTextarea rows={4}  onChange={(e)=>this.handleEmbadeChange(e,index)} className=\"text_area_article\"></InputTextarea>\r\n                                                                \r\n                                                                </div>\r\n                                                        </div>\r\n                                                    </div>  \r\n                                                    )}                                    \r\n                                                </div>\r\n                                                <div className=\"btn_box_main\">\r\n                                                    <div>\r\n                                                        <p className=\"ever_element pull-left\" ><i className=\"fa fa-plus-circle\"></i> Add An element</p>\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className=\"box_for_tabs\">\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index, 'editor')}><i className=\"fa fa-pencil\"></i> Editor</p>\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index,'uploader')}><i className=\"fa fa-image\"></i> Image</p>\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index,'embed')}><i className=\"fa fa-code\"></i> Embed</p>\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index, 'quote')}><i className=\"fa fa-quote-right\"></i> Quotations</p>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                {\r\n                                                    index !== 0 && <button className=\"pull-right btn-dark\" onClick={() => this.remove(index)}><i className=\"fa fa-trash\"></i></button>\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    ))} \r\n                                     \r\n                                    {this.state.soundShow && this.state.editorArray.map((editorVal, index) => (\r\n                                        <div className=\"editprofile_content\" key={index}>\r\n                                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                                <div> \r\n                                                    <div className=\"row\"> \r\n                                                    { 'audio' === editorVal.type && (\r\n                                                        <div className=\"col-12\">\r\n                                                            <div className=\"image_uploader_main\">\r\n                                                            {\r\n                                                                editorVal.name === '' &&\r\n                                                                <i className=\"fa fa-music upload_icon\"></i>\r\n                                                            }\r\n                                                            {\r\n                                                                editorVal.name !== '' &&\r\n                                                                <audio controls>\r\n                                                                    <source src={editorVal.name} type=\"audio/mpeg\" />\r\n                                                                    Your browser does not support the audio element.\r\n                                                                </audio>\r\n                                                            }\r\n                                                            <br /><br />\r\n                                                                <FileUpload mode=\"basic\" onProgress={this.fileUploadProcess} name=\"uploader\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"*\" maxFileSize={100000000} onUpload={(e) => this.contentUploadAudio(e)} auto={true} chooseLabel={this.state.uploadName} />\r\n                                                                \r\n                                                            </div>\r\n                                                            \r\n                                                        </div>  \r\n                                                    )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                   ))} <br />                         \r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                                <div className=\"col-3 col-md-3\">\r\n                                    <div className=\"editprofile_content \">\r\n                                        <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <h3 className=\"heading-sidebar\">Information</h3>\r\n                                                </div>\r\n                                            </div>          \r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Type:</label>\r\n                                                    <Dropdown className=\"all_sec_dropdown form-drop-control\" optionLabel=\"name\" value={this.state.type} options={allContent} onChange={(e) => this.typeSelect(e)} placeholder='All Article'/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Appear at:</label>\r\n                                                    <MultiSelect className=\"all_sec_dropdown all_section_tab form-drop-control\" optionLabel=\"name\" optionValue=\"id\" value={this.state.category} options={this.state.categoryList} onChange={(e) => {this.setState({category: e.value})}} style={{minWidth:'100%'}} filter={true} filterPlaceholder=\"Search\" placeholder=\"Choose\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Date:</label>\r\n                                                    <Calendar touchUI={true} className=\"all_sec_dropdown  form-drop-control\" value={this.state.date} onChange={(e) => this.setState({date: e.value})} showIcon={true} showTime={true} showSeconds={true}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Author:</label>\r\n                                                    {\r\n                                                        this.state.authorShow &&\r\n                                                        <h3>{this.state.author}</h3>\r\n                                                    }\r\n                                                    {this.state.authorSelect && !this.state.authorShow  &&\r\n                                                        <Dropdown className=\"all_sec_dropdown all_section_tab form-drop-control\" optionLabel=\"name\" value={this.state.authorVal} options={authorSection} onChange={(e) => this.selectAuthor(e.value)} placeholder=\"Author\"/>\r\n                                                    }\r\n\r\n                                                    {this.state.authorInput && \r\n                                                        <div className=\"p-inputgroup\">\r\n                                                            <InputText className=\"all_sec_dropdown form-control\" placeholder=\"Type Author Name\" name=\"authorName\" onChange={(e) => {this.setState({author: e.target.value})}} />\r\n                                                            <Button icon=\"pi pi-times\" className=\"p-button-danger\" onClick={() => this.setState({\r\n                                                                authorInput:false,\r\n                                                                authorSelect:true})}/>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div> \r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Your List item:</label><br />\r\n                                                    <label><small>Highlight</small></label><br />\r\n                                                    <Checkbox checked={this.state.heighlight} onChange={e => this.setState({heighlight: e.checked})} />\r\n                                                    <label htmlFor=\"heighlight\" className=\"p-checkbox-label\"> Put at the top of the list</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label tooltip=\"This element display depends on the template and / or the platform used\" tooltipoptions={{position: 'top'}}>Resume:</label>\r\n                                                    <InputTextarea rows={5} cols={30} value={this.state.resume} onChange={(e) => this.setState({resume: e.target.value})} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Comments:</label><br />\r\n                                                    <InputSwitch checked={this.state.comment} onChange={(e) => this.setState({comment: e.value})} />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                           { this.state.articleShow &&\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label> PDF attached:</label><br />\r\n                                                    \r\n                                                    <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"pdf\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto={true} chooseLabel={this.state.pdfName} />\r\n                                                    {\r\n                                                        this.state.pdfError !== '' &&\r\n                                                        <span style={{'color':'red'}}>{this.state.pdfError}</span>\r\n                                                    }\r\n                                                    \r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                                                             \r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nNovusBiArticleComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    ArticleAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any,\r\n    allCategoryListRes:PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    ArticleAppRes: donovusBiArticleRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes,\r\n    allCategoryListRes:getallcategoryListRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchallcategoryList: () => dispatch(fetchallcategoryList()),\r\n        handleFormSubmit: (data) => dispatch(submitnovusBiArticle(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(NovusBiArticleComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass ContentList {  \r\n    static getcontentList() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body:JSON.stringify({\r\n                        \"cat_id\"    : \"\"\r\n                    })\r\n            }\r\n            return fetch(BASE_URL + '/contants', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default ContentList;","import * as types from './actionTypes';  \r\nimport contentListApi from '../api/contentListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getcontentList() {\r\n\r\n  return {\r\n    type: types.FETCH_CONTENTLIST,\r\n  };\r\n}\r\n\r\nexport function getcontentListRes(data) {  \r\n  return {\r\n    type: types.FETCH_CONTENTLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchcontentList() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      contentListApi.getcontentList().then(data => {\r\n        dispatch(getcontentListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass DeleteContentListApi {\r\n    static doDeleteApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/deleteContant', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteContentListApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteContentListApi from '../api/deleteContentListApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doDeleteApp(data) {\r\n  return {\r\n    type: types.DELETE_CONTENTLIST,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteContentRes(data) {\r\n  return {\r\n    type: types.DELETE_CONTENTLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteContentListRecord(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteContentListApi.doDeleteApp(data).then(data => {\r\n        dispatch(doDeleteContentRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass StatusContentListApi {\r\n    static doStatusApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/active_content', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default StatusContentListApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport StatusContentListApi from '../api/statusContentListApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doStatusApp(data) {\r\n  return {\r\n    type: types.STATUS_CONTENTLIST,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doStatusContentRes(data) {\r\n  return {\r\n    type: types.STATUS_CONTENTLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function statusContentListRecord(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      StatusContentListApi.doStatusApp(data).then(data => {\r\n        dispatch(doStatusContentRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './contentList.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchcontentList, getcontentListRes } from '../../action/contentListActions';\r\nimport { deleteContentListRecord, doDeleteContentRes } from '../../action/deleteContentListActions';\r\nimport { statusContentListRecord, doStatusContentRes } from '../../action/statusContentListActions';\r\nimport { fetchallcategoryList, getallcategoryListRes } from '../../action/allCategoryListActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\nimport moment from 'moment';\r\n\r\n\r\nlet isDelete = false;\r\nlet isUpdate = true;\r\n\r\nclass ContentListComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      wmsList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();\r\n    \r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      contentList: [],\r\n      backupContentList:[],\r\n      categoryList:[],\r\n      backupCat:[],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n      dumCat:[],\r\n      showSubCat:false,\r\n      selectCategory:'Select Category',\r\n      typeContent:''\r\n\r\n    }\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchallcategoryList();\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        contentList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetchcontentList();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props)\r\n    if(props.allCategoryListRes){\r\n        if(props.allCategoryListRes.data.allCategoryList ){\r\n            if(props.allCategoryListRes.data.allCategoryList.success === true){\r\n                this.setState({\r\n                  dumCat: props.allCategoryListRes.data.allCategoryList.data\r\n                },()=>{\r\n                  let cats = [];\r\n                  let mats = []\r\n                  for(let c of this.state.dumCat){\r\n                      if(c.parent_id == '0'){\r\n                        cats.push(c)\r\n                      }else{\r\n                        mats.push(c)\r\n                      }\r\n                  }\r\n                  for(let c of cats){\r\n                    let dts = []\r\n                    for(let k of mats){\r\n                      if(c.id == k.parent_id){\r\n                        dts.push(k);\r\n                      }\r\n                    }\r\n                    c.child = dts;\r\n                  }\r\n                  this.setState({\r\n                    categoryList : cats,\r\n                    backupCat: cats\r\n                  })\r\n                  console.log(this.state.categoryList)\r\n                });\r\n            }\r\n        }\r\n    }\r\n    if (props.contentListRes) {\r\n\t\t\tif (props.contentListRes.data && props.contentListRes.data.contentList) {\r\n\t\t\t\tif (props.contentListRes.data.contentList.status===true) {\r\n          this.setState({\r\n            contentList: props.contentListRes.data.contentList.data,\r\n            backupContentList:props.contentListRes.data.contentList.data,\r\n            isLoader: false,\r\n          },()=>{\r\n            console.log(this.state.contentList)\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteContentRes) {\r\n\t\t\tif (props.doDeleteContentRes.data && props.doDeleteContentRes.data.doDeleteContentRes) {\r\n\t\t\t\tif (isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isLoader: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchcontentList();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doStatusContentRes) {\r\n\t\t\tif (props.doStatusContentRes.data && props.doStatusContentRes.data.doStatusContentRes) {\r\n        if(isUpdate){\r\n          isUpdate = false;\r\n          this.setState({\r\n            isLoader: false,\r\n          })\r\n          this.props.fetchcontentList();\r\n        }\r\n\t\t\t\t\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button> \r\n      {\r\n        rowData.status != 'draft' && rowData.status == 'pending' &&\r\n        <button className=\"btn btn-success-customer\" onClick={()=> this.ChangeStatus(rowData.contant_id)}>\r\n          <i className=\"fa fa-toggle-off\" aria-hidden=\"true\"></i>\r\n        </button> \r\n      }\r\n      {\r\n        rowData.status != 'draft' && rowData.status == 'active'&&\r\n        <button className=\"btn btn-delete-customer\" >\r\n          <i className=\"fa fa-toggle-on\" aria-hidden=\"true\"></i>\r\n        </button> \r\n      }\r\n        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goUpdateApplication = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/novus-bi-article-update',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-article')\r\n  }\r\n\r\n  \r\n\r\n  deleteApp = () => {\r\n    console.log(this.state.contant_id)\r\n    this.setState({\r\n      isDisabled: true,\r\n      isLoader:true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      contant_id: this.state.contant_id\r\n    }\r\n    this.props.deleteContentListRecord(payload);\r\n  }\r\n\r\n  ChangeStatus = (e) => {\r\n    isUpdate = true;\r\n    let payload = {\r\n      contant_id: e\r\n    }\r\n    this.setState({\r\n      isLoader:true\r\n    })\r\n    this.props.statusContentListRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      contant_id: rowData.contant_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    \r\n    if( data.thumbnail && data.thumbnail != ''){\r\n      return (\r\n        <div>\r\n          {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n          <img src={data.thumbnail} alt='icon' className=\"image_icons_content\" />\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div>\r\n          {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n          <img src={logoImg} alt='icon' className=\"image_icons_content\" />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n\r\n  actionStatusTemplate = (data) => {\r\n    if(data.status == 'draft'){\r\n      return (\r\n        <div className=\"status_main_bx\">\r\n          <button className=\"btn pending-status btn_draft\" onClick={this.toggleBox}>\r\n           Draft\r\n          </button>         \r\n        </div>\r\n      );\r\n    }else\r\n    if(data.status == 'pending'){\r\n      return (\r\n        <div className=\"status_main_bx\">\r\n          <button className=\"btn btn-danger\" onClick={this.toggleBox}>\r\n            Pending\r\n          </button>         \r\n        </div>\r\n      );\r\n    }else\r\n    if(data.status == 'active'){\r\n      return (\r\n        <div className=\"status_main_bx\">\r\n          <button className=\"btn btn-success\" onClick={this.toggleBox}>\r\n            Active\r\n          </button>         \r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n  actionTypeTemplate = (data) => {\r\n    // console.log(data)\r\n    let cat =data.categories_name.split(',');\r\n    return (\r\n      <ul className=\"status_main_bx\">\r\n          {cat.map((item,key) => \r\n            <li key={key} onClick={() => this.selectCatButton(item)}>{item}</li>\r\n          )}    \r\n      </ul>\r\n    );\r\n  }\r\n\r\n  catTemplate = (option) =>{\r\n    return (\r\n      <div>\r\n        <div className=\"p-clearfix optionGroup\">\r\n          <span style={{float:'left',fontWeight:'bold', margin:'.5em .25em 0 0'}}>{option.name}</span>\r\n        </div>\r\n        {option.child.map((item)=>\r\n        <div className=\"p-clearfix optionChild\">\r\n          <span style={{float:'left', margin:'.5em .25em 0 0'}}>{item.name}</span>\r\n        </div>\r\n          )\r\n        }\r\n    </div>\r\n    \r\n    )\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    let date =moment(rowData.date).format('DD/MM/YYYY HH:mm');\r\n    return (\r\n      <div className=\"date_field\" style={{textAlign: 'center'}}>\r\n        <p onClick={()=> this.goToAdmin(rowData)}>\r\n          {date}\r\n        </p>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    // this.props.history.push('/adminDetails',{\r\n    //   applicationData: data\r\n    // })\r\n  }\r\n  selectCatButton = (e)=>{\r\n    const cats = [];\r\n    console.log(e)\r\n    this.setState({\r\n      contentList:this.state.backupContentList\r\n    },()=>{\r\n      if(e == ''){\r\n        this.setState({\r\n          contentList:this.state.backupContentList\r\n        })\r\n      }else{\r\n        for(let item of this.state.contentList){\r\n          let vals = item.categories_name.split(',');\r\n          console.log(vals)\r\n          if(vals.includes(e)){\r\n            cats.push(item);\r\n          }\r\n          this.setState({\r\n            contentList:cats\r\n          })\r\n        }\r\n      }\r\n    })\r\n    \r\n  }\r\n  selectCatChange = (e) =>{\r\n    const cats = [];\r\n    this.setState({showSubCat :false}) \r\n    console.log(e)\r\n    this.setState({\r\n      selectCategory:e.name\r\n    })\r\n    if(e.id == ''){\r\n      this.setState({\r\n        contentList:this.state.backupContentList\r\n      })\r\n    }else{\r\n      for(let item of this.state.contentList){\r\n        let vals = item.categories.split(',');\r\n        console.log(vals)\r\n        if(vals.includes(e.id)){\r\n          cats.push(item);\r\n        }\r\n        this.setState({\r\n          contentList:cats\r\n        })\r\n      }\r\n    }\r\n    \r\n    this.setState({allSection: e.id})\r\n\r\n\r\n\r\n  }\r\n  toggleBox = () =>{\r\n    this.setState({showSubCat : !this.state.showSubCat}) \r\n  }\r\n  selectContentType = (e) =>{\r\n    console.log(e)\r\n    const cats = [];\r\n    const cont = [];\r\n    this.setState({\r\n      categoryList:this.state.backupCat,\r\n      contentList:this.state.backupContentList\r\n    },()=>{\r\n      if(e == 'All Sounds'){\r\n        for(let item of this.state.categoryList){\r\n          if(item.name == 'Podcast'){\r\n            cats.push(item);\r\n          }\r\n        }\r\n        for(let item of this.state.contentList){\r\n          if(item.type == 'All Sounds'){\r\n            cont.push(item)\r\n          }\r\n        }\r\n        \r\n        this.setState({\r\n          categoryList:cats,\r\n          contentList:cont,\r\n          selectCategory:'All',\r\n          typeContent:e.name\r\n        })\r\n      }else if(e == 'All Content'){\r\n        for(let item of this.state.categoryList){\r\n          if(item.name != 'Podcast'){\r\n            cats.push(item);\r\n          }\r\n        }\r\n        for(let item of this.state.contentList){\r\n          if(item.type == 'All Articles'){\r\n            cont.push(item)\r\n          }\r\n        }\r\n        \r\n        this.setState({\r\n          categoryList:cats,\r\n          contentList:cont,\r\n          selectCategory:'All',\r\n          typeContent:e.name\r\n        })\r\n      }else{\r\n        for(let item of this.state.categoryList){\r\n          cats.push(item);\r\n          \r\n        }\r\n        for(let item of this.state.contentList){\r\n            cont.push(item)\r\n        }\r\n        \r\n        this.setState({\r\n          categoryList:cats,\r\n          contentList:cont,\r\n          selectCategory:'All',\r\n          typeContent:e.name\r\n        })\r\n      }\r\n    })\r\n    \r\n  }\r\n  render() {\r\n    const allContent = [\r\n      {name: 'All Articles'},\r\n      {name: 'All Content'},\r\n      {name: 'All Sounds'},\r\n  ];\r\n  const { showSubCat } = this.state;\r\n\r\n  const allSection = [\r\n      {name: 'News'},\r\n      {name: 'KPIs Market'},\r\n      {name: 'Birds'},\r\n      {name: 'Pigs'},\r\n      {name: 'Ruminants'},\r\n      {name: 'Aqua'},\r\n      {name: 'Grains'},\r\n      {name: 'IMPORTS STATS'},\r\n      {name: 'ENZYMES '},\r\n      {name: 'MINERALS '},\r\n      {name: 'EUBIOTICS '},\r\n      {name: 'METIONINA '},\r\n      {name: 'COMPETITION'},\r\n      {name: 'PODCASTS'},\r\n\r\n  ];     \r\n    const { contentList } = this.state;\r\n    console.log(contentList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">List of Content</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <div className=\"active_drop_menus\">\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"List of Content\" header={Header} click={()=>{this.hideCats()}}>\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">List of Content</div>\r\n                      </div>\r\n                      {\r\n                        userRole == '1' &&\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createApp()}>Add Content</button>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n\r\n                    <select  className=\"type_drop\"  onChange={(e) => {this.selectContentType(e.target.value)}} placeholder=\"Select a Type\">\r\n                      {\r\n                        allContent.map((item,key)=>\r\n                        <option value={item.name} key={key}>{item.name}</option>\r\n                        )\r\n                      }\r\n                    </select>\r\n                    <ul className=\"selectbox\">\r\n                      <li>\r\n                        <a onClick={this.toggleBox}>\r\n                          {this.state.selectCategory}\r\n                          <i className=\"fa fa-caret-down\"></i>  \r\n                        </a>                   \r\n                        \r\n                          {showSubCat &&\r\n                            <ul className=\"subItem\" >\r\n                            <li>\r\n                              <a className=\"optionGroup\"  id=\"\" name=\"All\" onClick={(e) => {this.selectCatChange(e.target)}}>All</a>\r\n                            </li>\r\n                            {\r\n                              this.state.categoryList.map((item,key)=>\r\n                              <li key={key}>\r\n                                <a id={item.id} name={item.name} className=\"optionGroup\" onClick={(e) => {this.selectCatChange(e.target)}} >\r\n                                  {item.name}\r\n                                </a>\r\n                                <ul className=\"subSubItem\">\r\n                                {\r\n                                  item.child && item.child.map((sub,skey)=>\r\n                                  <li key={skey}>\r\n                                    <a id={sub.id} name={sub.name} onClick={(f) => {this.selectCatChange(f.target)}}>\r\n                                      {sub.name}\r\n                                    </a>\r\n                                  </li>\r\n                                  )\r\n                                }\r\n                                </ul>\r\n                              </li>\r\n                              \r\n                              )\r\n                            }\r\n                            </ul>\r\n                          }                    \r\n                      </li> \r\n                    </ul>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={contentList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.wmsList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                        <Column selectionMode=\"multiple\" style={{width:'2em'}}/>\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"title\" header=\"Title\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Date\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          <Column className=\"tableCols\" field=\"\" header=\"Type / Sections\" style={{width: '120px'}} body={this.actionTypeTemplate} />\r\n                          <Column className=\"tableCols\" field=\"\" header=\"Status\" style={{width: '120px'}} body={this.actionStatusTemplate} />\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContentListComponent.propTypes = {\r\n\tcontentListRes: PropTypes.any,\r\n\tdoDeleteContentRes: PropTypes.any,\r\n\tdoStatusContentRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  contentListRes: getcontentListRes,\r\n\tdoDeleteContentRes: doDeleteContentRes,\r\n\tdoStatusContentRes: doStatusContentRes,\r\n  allCategoryListRes:getallcategoryListRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchallcategoryList: () => dispatch(fetchallcategoryList()),\r\n\t\tfetchcontentList: () => dispatch(fetchcontentList()),\r\n\t\tdeleteContentListRecord: (data) => dispatch(deleteContentListRecord(data)),\r\n\t\tstatusContentListRecord: (data) => dispatch(statusContentListRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ContentListComponent);","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass CategoryListApi {  \r\n    static getcategoryList() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/Categories', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default CategoryListApi;","import * as types from './actionTypes';  \r\nimport categoryListApi from '../api/categoryListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getcategoryList() {\r\n\r\n  return {\r\n    type: types.FETCH_CATEGORYLIST,\r\n  };\r\n}\r\n\r\nexport function getcategoryListRes(data) {  \r\n  return {\r\n    type: types.FETCH_CATEGORYLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchcategoryList() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      categoryListApi.getcategoryList().then(data => {\r\n        dispatch(getcategoryListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass DeleteCategoryListApi {\r\n    static doDeleteApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/deleteCategories', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteCategoryListApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteCategoryListApi from '../api/deleteCategoryListApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doDeleteApp(data) {\r\n  return {\r\n    type: types.DELETE_CATEGORYLIST,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteAppRes(data) {\r\n  return {\r\n    type: types.DELETE_CATEGORYLIST_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteCategoryListRecord(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteCategoryListApi.doDeleteApp(data).then(data => {\r\n        dispatch(doDeleteAppRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './categoryList.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchcategoryList, getcategoryListRes } from '../../action/categoryListActions';\r\nimport { deleteCategoryListRecord, doDeleteAppRes } from '../../action/deleteCategoryListActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Button} from 'primereact/button';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass CategoryListComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      categorysList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();    \r\n    isDelete = false;\r\n\t\tthis.state = {\r\n    \r\n      // columns: [\r\n      //   { CategoryName: 'News',},\r\n      //   { CategoryName: 'MARKET KPIs'},\r\n      //   { CategoryName: 'IMPORTS STATS'},\r\n      //   { CategoryName: 'COMPETITION',},\r\n      //   { CategoryName: 'PODCASTS', },\r\n      // ],\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      categoryList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n    }\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n    this.viewTemplate = this.viewTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.cat_id = appData.cat_id;\r\n      appData.category_name = appData.category_name;\r\n      appData.icon = appData.icon;\r\n      delete appData.cat_id;\r\n      delete appData.category_name;\r\n      delete appData.icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        categoryList: itemArr\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoader:true\r\n      });\r\n      this.props.fetchcategoryList();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props)\r\n    if (props.categoryListRes) {\r\n\t\t\tif (props.categoryListRes.data && props.categoryListRes.data.categoryList) {\r\n\t\t\t\tif (props.categoryListRes.data.categoryList.success===true) {\r\n          this.setState({\r\n            categoryList: props.categoryListRes.data.categoryList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}else{\r\n          this.setState({\r\n            categoryList: [],\r\n            isLoader: false,\r\n          });\r\n        }\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteCategoryList) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteCategoryList.success && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n            isLoader:false\r\n          });\r\n          this.props.fetchcategoryList();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-create')\r\n  }\r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n      isLoader:true\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      id: this.state.cat_id\r\n    }\r\n    this.props.deleteCategoryListRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      cat_id: rowData.cat_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}  className=\"btn-group\">\r\n        <button className=\"btn btn-success\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Category\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-danger\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete Category\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>  \r\n        <button className=\"btn btn-primary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Add Sub Category\" onClick={()=> this.goAddSubCategory(rowData)}>\r\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n        </button>        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n  actionIconTemplate = (data) => {\r\n    // console.log(data)\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src={data.icon} alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n  viewTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-info\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"View Sub Category\" onClick={()=> this.getSubCategory(rowData)}>\r\n          <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n        </button>  \r\n      </div>\r\n    );\r\n  }\r\n  getSubCategory = (rowData) => {\r\n    console.log(rowData.cat_id)\r\n    this.props.history.push({\r\n      pathname: '/subcategory-list',\r\n      state: {appData: rowData.cat_id}\r\n    })\r\n  }\r\n  goUpdateApplication = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/update-category',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n  goAddSubCategory = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/create-category',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { categoryList } = this.state;\r\n    // console.log(categoryList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Category List</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <div className=\"active_drop_menus\">\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper className=\"category_hed_page\" title=\"Category List\" header={Header}>\r\n          <div className=\"application-list_content header_dropopen\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">Category List</div>\r\n                      </div>\r\n                      {\r\n                        userRole == '1' &&\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createApp()}>Add</button>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        {/* <DataTable value={categoryList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.categorysList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\"> */}\r\n                        <DataTable value={categoryList} sortMode=\"multiple\" editable={false} selection={this.state.categorysList} onSelectionChange={this.onSelectionChange} paginator={true} rows={10} rowsPerPageOptions={[5,10,20]} responsive={true}>\r\n\r\n                          <Column className=\"tableCols\" field=\"icon\" body={this.actionIconTemplate}   header=\"Icon\"/>\r\n                          <Column field=\"category_name\" header=\"Category Name\"/>\r\n                          <Column field=\"View\" header=\"View\"  body={this.viewTemplate}  />\r\n                          <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                        </DataTable>\r\n\r\n                \r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryListComponent.propTypes = {\r\n\tcategoryListRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  categoryListRes: getcategoryListRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchcategoryList: () => dispatch(fetchcategoryList()),\r\n\t\tdeleteCategoryListRecord: (data) => dispatch(deleteCategoryListRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CategoryListComponent);","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass CommentListApi {  \r\n    static getcommentList() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/application_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default CommentListApi;","import * as types from './actionTypes';  \r\nimport commentListApi from '../api/commentListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getcommentList() {\r\n\r\n  return {\r\n    type: types.FETCH_COMMENTLIST,\r\n  };\r\n}\r\n\r\nexport function getcommentListRes(data) {  \r\n  return {\r\n    type: types.FETCH_COMMENTLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchcommentList() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      commentListApi.getcommentList().then(data => {\r\n        dispatch(getcommentListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './commentList.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchcommentList, getcommentListRes } from '../../action/commentListActions';\r\nimport { deleteApplicationRecord, doDeleteAppRes } from '../../action/deleteApplicationActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass CommentListComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      wmsList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      commentListList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        commentListList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetchcommentList();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props)\r\n    if (props.commentListRes) {\r\n\t\t\tif (props.commentListRes.data && props.commentListRes.data.commentList) {\r\n\t\t\t\tif (props.commentListRes.data.commentList.success===true) {\r\n          this.setState({\r\n            commentListList: props.commentListRes.data.commentList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteApplication) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteApplication.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchAllApplication();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goUpdateApplication = (rowData) => {\r\n    // this.props.history.push({\r\n    //   pathname: '/novus-bi-create',\r\n    //   state: {appData: rowData}\r\n    // })\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-create')\r\n  }\r\n\r\n  \r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      app_id: this.state.appId\r\n    }\r\n    this.props.deleteApplicationRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      appId: rowData.application_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src={logoImg} alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    return (\r\n      <div className=\"date_field\" style={{textAlign: 'center'}}>\r\n        <p onClick={()=> this.goToAdmin(rowData)}>\r\n          19/02/2020 11:15  \r\n        </p>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    // this.props.history.push('/adminDetails',{\r\n    //   applicationData: data\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { commentListList } = this.state;\r\n    console.log(commentListList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Comment List</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <div className=\"active_drop_menus\">\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Comment List\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">Comment List</div>\r\n                      </div>                      \r\n                    </div>\r\n                    \r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={commentListList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.wmsList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                        <Column selectionMode=\"multiple\" style={{width:'2em'}}/>\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"application_name\" header=\"Title\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Date\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCommentListComponent.propTypes = {\r\n\tcommentListRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  commentListRes: getcommentListRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchcommentList: () => dispatch(fetchcommentList()),\r\n\t\tdeleteApplicationRecord: (data) => dispatch(deleteApplicationRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CommentListComponent);","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass TrashListApi {  \r\n    static gettrashList() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/tracecontant_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default TrashListApi;","import * as types from './actionTypes';  \r\nimport trashListApi from '../api/trashListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function gettrashList() {\r\n\r\n  return {\r\n    type: types.FETCH_TRASHLIST,\r\n  };\r\n}\r\n\r\nexport function gettrashListRes(data) {  \r\n  return {\r\n    type: types.FETCH_TRASHLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchtrashList() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      trashListApi.gettrashList().then(data => {\r\n        dispatch(gettrashListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './trashList.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchtrashList, gettrashListRes } from '../../action/trashListActions';\r\nimport { deleteContentListRecord, doDeleteContentRes } from '../../action/deleteContentListActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport moment from 'moment';\r\nimport logoImg from '../../assets/images/novusone-logo.png';\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass TrashListComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      wmsList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      trashListList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        trashListList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetchtrashList();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    \r\n    console.log(\"props check\", props)\r\n    if (props.trashListRes) {\r\n\t\t\tif (props.trashListRes.data && props.trashListRes.data.trashList) {\r\n\t\t\t\tif (props.trashListRes.data.trashList.status===true) {\r\n          this.setState({\r\n            trashListList: props.trashListRes.data.trashList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteContentRes) {\r\n\t\t\tif (props.doDeleteContentRes.data && props.doDeleteContentRes.data.doDeleteContentRes) {\r\n\t\t\t\tif (isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchtrashList();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restore\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n        <i class=\"fa fa-recycle\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Permanent Delete\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src={logoImg} alt='icon' className=\"image_icons_content\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  actionStatusTemplate = (data) => {\r\n    if(data.status == 'draft'){\r\n      return (\r\n        <div className=\"status_main_bx\">\r\n          <button className=\"btn pending-status btn_draft\" onClick={this.toggleBox}>\r\n           Draft\r\n          </button>         \r\n        </div>\r\n      );\r\n    }else\r\n    if(data.status == 'pending'){\r\n      return (\r\n        <div className=\"status_main_bx\">\r\n          <button className=\"btn btn-danger\" onClick={this.toggleBox}>\r\n            Pending\r\n          </button>         \r\n        </div>\r\n      );\r\n    }else\r\n    if(data.status == 'active'){\r\n      return (\r\n        <div className=\"status_main_bx\">\r\n          <button className=\"btn btn-success\" onClick={this.toggleBox}>\r\n            Active\r\n          </button>         \r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n  actionTypeTemplate = (data) => {\r\n    let cat =data.categories.split(',');\r\n    return (\r\n      <ul className=\"status_main_bx\">\r\n          {cat.map((item) => \r\n            <li>{item}</li>\r\n          )}    \r\n      </ul>\r\n    );\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    let date =moment(rowData.date).format('DD/MM/YYYY HH:mm');\r\n    return (\r\n      <div className=\"date_field\" style={{textAlign: 'center'}}>\r\n        <p onClick={()=> this.goToAdmin(rowData)}>\r\n          {date}\r\n        </p>    \r\n      </div>\r\n    );\r\n  }\r\n  goUpdateApplication = (rowData) => {\r\n    // this.props.history.push({\r\n    //   pathname: '/novus-bi-create',\r\n    //   state: {appData: rowData}\r\n    // })\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-create')\r\n  }\r\n\r\n  \r\n\r\n  deleteApp = () => {\r\n    console.log(this.state.contant_id)\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      contant_id: this.state.contant_id\r\n    }\r\n    this.props.deleteContentListRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      contant_id: rowData.contant_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src={logoImg} alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  actionStatusTemplate = (data) => {\r\n    return (\r\n      <div className=\"status_main_bx\">\r\n        <button className=\"btn pending-status\">\r\n          Draft\r\n        </button> \r\n       \r\n      </div>\r\n    );\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    return (\r\n      <div className=\"date_field\" style={{textAlign: 'center'}}>\r\n        <p onClick={()=> this.goToAdmin(rowData)}>\r\n          19/02/2020 11:15  \r\n        </p>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    // this.props.history.push('/adminDetails',{\r\n    //   applicationData: data\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { trashListList } = this.state;\r\n    console.log(trashListList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Trash List</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <div className=\"active_drop_menus\">\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Trash List\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">Trash List</div>\r\n                      </div>                      \r\n                    </div>\r\n                    \r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={trashListList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.wmsList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                          <Column selectionMode=\"multiple\" style={{width:'2em'}}/>\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"title\" header=\"Title\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Date\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          <Column className=\"tableCols\" field=\"\" header=\"Type / Sections\" style={{width: '120px'}} body={this.actionTypeTemplate} />\r\n                          <Column className=\"tableCols\" field=\"\" header=\"Status\" style={{width: '120px'}} body={this.actionStatusTemplate} />\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Action\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTrashListComponent.propTypes = {\r\n\ttrashListRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  trashListRes: gettrashListRes,\r\n\tdoDeleteContentRes: doDeleteContentRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchtrashList: () => dispatch(fetchtrashList()),\r\n\t\tdeleteContentListRecord: (data) => dispatch(deleteContentListRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(TrashListComponent);","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass SubCategoryListApi {  \r\n    static getsubCategoryList(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/SubCategories', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default SubCategoryListApi;","import * as types from './actionTypes';  \r\nimport subCategoryListApi from '../api/subCategoryListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getsubCategoryList() {\r\n\r\n  return {\r\n    type: types.FETCH_SUBCATEGORYLIST,\r\n  };\r\n}\r\n\r\nexport function getsubCategoryListRes(data) {  \r\n  return {\r\n    type: types.FETCH_SUBCATEGORYLIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchsubCategoryList(data) {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      subCategoryListApi.getsubCategoryList(data).then(data => {\r\n        dispatch(getsubCategoryListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass DeleteSubCategoryListApi {\r\n    static doDeleteApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/deleteCategories', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteSubCategoryListApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteSubCategoryListApi from '../api/deleteSubCategoryListApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doDeleteApp(data) {\r\n  return {\r\n    type: types.DELETE_CATEGORYLIST,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteAppRes(data) {\r\n  return {\r\n    type: types.DELETE_CATEGORYLIST_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteSubCategoryListRecord(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteSubCategoryListApi.doDeleteApp(data).then(data => {\r\n        dispatch(doDeleteAppRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './subCategoryList.scss';\r\n\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchsubCategoryList, getsubCategoryListRes } from '../../action/subCategoryListActions';\r\nimport { deleteSubCategoryListRecord, doDeleteAppRes } from '../../action/deleteSubCategoryListActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport subImg1 from '../../../src/assets/images/subimg1.PNG';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass SubCategoryListComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      scategoryList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n      columns: [\r\n        { CategoryName: 'Birds' },\r\n        { CategoryName: 'Pigs' },\r\n        { CategoryName: 'Ruminants' },\r\n        { CategoryName: 'Aqua' },\r\n        { CategoryName: 'Grains' },\r\n      ],\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      subCategoryList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n    }\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.location.state)\r\n    if(this.props.location.state.appData){\r\n      this.setState({\r\n          appData: this.props.location.state.appData,\r\n      }, () => {\r\n         console.log(this.state.appData )\r\n         let payloadReq = {\r\n          cat_id: this.state.appData\r\n        }\r\n        this.setState({\r\n          isLoader:true\r\n        })\r\n        this.props.fetchsubCategoryList(payloadReq);\r\n      });\r\n    }else{\r\n      this.props.history.push({\r\n        pathname: '/category-list'\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props);\r\n    // this.setState({\r\n    //   isLoader:false\r\n    // })\r\n    if (props.subCategoryListRes) {\r\n\t\t\tif (props.subCategoryListRes.data && props.subCategoryListRes.data.subCategoryList) {\r\n\t\t\t\tif (props.subCategoryListRes.data.subCategoryList.success===true) {\r\n          this.setState({\r\n            subCategoryList: props.subCategoryListRes.data.subCategoryList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}else{\r\n          this.setState({\r\n            isLoader:false,\r\n            subCategoryList:[]\r\n          })\r\n        }\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteCategoryList) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteCategoryList.success && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.setState({\r\n            isLoader:true\r\n          })\r\n          let payloadReq = {\r\n            cat_id: this.state.appData\r\n          }\r\n          this.props.fetchsubCategoryList(payloadReq);\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}} className=\"btn-group\">\r\n        <button className=\"btn btn-primary \" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Sub Category\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn btn-danger\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete Sub Category\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n  goUpdateApplication = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/update-subcategory',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n  handleBack = () => {\r\n    this.props.history.push('/category-list');\r\n}\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-create')\r\n  }\r\n\r\n  \r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      id: this.state.appId\r\n    }\r\n    this.props.deleteSubCategoryListRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      appId: rowData.subcat_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src={data.icon} alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  goToAdmin = (data) => {\r\n    // this.props.history.push('/adminDetails',{\r\n    //   applicationData: data\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { subCategoryList } = this.state;\r\n    console.log(subCategoryList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Sub-Category List</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <div className=\"active_drop_menus\">\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Sub-Category List\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                            <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                            <span className=\"createprofile_go_back\">Back to Category</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">Sub Category List</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        {/* <DataTable value={subCategoryList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.scategoryList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                          <Column selectionMode=\"multiple\" style={{width:'2em'}}/>\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"Icon\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"application_name\" header=\"Sub Category Name\" sortable style={{width: '120px'}}/>\r\n                          <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                        </DataTable> */}\r\n                        <DataTable value={this.state.subCategoryList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.scategoryList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                            <Column className=\"tableCols\" field=\"icon\" header=\"\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                            <Column field=\"subcategory_name\" header=\"Sub Category Name\"/>                            \r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled} >Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() } > No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSubCategoryListComponent.propTypes = {\r\n\tsubCategoryListRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  subCategoryListRes: getsubCategoryListRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchsubCategoryList: (data) => dispatch(fetchsubCategoryList(data)),\r\n\t\tdeleteSubCategoryListRecord: (data) => dispatch(deleteSubCategoryListRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(SubCategoryListComponent);","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass ArticleListApi {  \r\n    static getarticleList() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/application_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default ArticleListApi;","import * as types from './actionTypes';  \r\nimport articleListApi from '../api/articleListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getarticleList() {\r\n\r\n  return {\r\n    type: types.FETCH_ARTICLELIST,\r\n  };\r\n}\r\n\r\nexport function getarticleListRes(data) {  \r\n  return {\r\n    type: types.FETCH_ARTICLELIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetcharticleList() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      articleListApi.getarticleList().then(data => {\r\n        dispatch(getarticleListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './articleList.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetcharticleList, getarticleListRes } from '../../action/articleListActions';\r\nimport { deleteApplicationRecord, doDeleteAppRes } from '../../action/deleteApplicationActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass ArticleListComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      wmsList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();\r\n    isDelete = false;\r\n\t\tthis.state = {\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      articleList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n\t\t}\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.application_id = appData.app_id;\r\n      appData.application_name = appData.app_name;\r\n      appData.icon = appData.app_icon;\r\n      delete appData.app_id;\r\n      delete appData.app_name;\r\n      delete appData.app_icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        articleList: itemArr\r\n      });\r\n    } else {\r\n      this.props.fetcharticleList();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props)\r\n    if (props.articleListRes) {\r\n\t\t\tif (props.articleListRes.data && props.articleListRes.data.articleList) {\r\n\t\t\t\tif (props.articleListRes.data.articleList.success===true) {\r\n          this.setState({\r\n            articleList: props.articleListRes.data.articleList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteAppRes) {\r\n\t\t\tif (props.doDeleteAppRes.data && props.doDeleteAppRes.data.deleteApplication) {\r\n\t\t\t\tif (props.doDeleteAppRes.data.deleteApplication.success===true && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n          });\r\n          this.props.fetchAllApplication();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-edit-customer\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-delete-customer\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>      \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goUpdateApplication = (rowData) => {\r\n    // this.props.history.push({\r\n    //   pathname: '/novus-bi-create',\r\n    //   state: {appData: rowData}\r\n    // })\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/novus-bi-create')\r\n  }\r\n\r\n  \r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      app_id: this.state.appId\r\n    }\r\n    this.props.deleteApplicationRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      appId: rowData.application_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n\r\n  actionIconTemplate = (data) => {\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src='http://localhost:3000/static/media/novusone-logo.6b9fef02.png' alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  actionStatusTemplate = (data) => {\r\n    return (\r\n      <div className=\"status_main_bx\">\r\n        <button className=\"btn pending-status\">\r\n          Draft\r\n        </button> \r\n       \r\n      </div>\r\n    );\r\n  }\r\n\r\n  adminActionTemplate = (rowData) => {\r\n    return (\r\n      <div className=\"date_field\" style={{textAlign: 'center'}}>\r\n        <p onClick={()=> this.goToAdmin(rowData)}>\r\n          19/02/2020 11:15  \r\n        </p>    \r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToAdmin = (data) => {\r\n    // this.props.history.push('/adminDetails',{\r\n    //   applicationData: data\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { articleList } = this.state;\r\n    console.log(articleList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Article List</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper title=\"Article List\" header={Header} >\r\n          <div className=\"application-list_content\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">Article List</div>\r\n                      </div>                      \r\n                    </div>\r\n                    \r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        <DataTable value={articleList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.wmsList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\">\r\n                        <Column selectionMode=\"multiple\" style={{width:'2em'}}/>\r\n                          <Column className=\"tableCols\" field=\"icon\" header=\"\" body={this.actionIconTemplate}  style={{width: '100px'}}/>\r\n                          <Column className=\"tableCols\" field=\"application_name\" header=\"Title\" sortable style={{width: '120px'}}/>\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"admin\" header=\"Date\" body={this.adminActionTemplate} style={{width: '120px'}}/>\r\n                          }\r\n                          <Column className=\"tableCols\" field=\"\" header=\"Status\" style={{width: '120px'}} body={this.actionStatusTemplate} />\r\n                          {\r\n                            userRole == '1' &&\r\n                            <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                          }\r\n                        </DataTable>\r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nArticleListComponent.propTypes = {\r\n\tarticleListRes: PropTypes.any,\r\n\tdoDeleteAppRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  articleListRes: getarticleListRes,\r\n\tdoDeleteAppRes: doDeleteAppRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetcharticleList: () => dispatch(fetcharticleList()),\r\n\t\tdeleteApplicationRecord: (data) => dispatch(deleteApplicationRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(ArticleListComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UpdateContentApi {\r\n    static doUpdateApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/admin_update_app', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateContentApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UpdateContentApi from '../api/updateContentApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUpdateApp(data) {\r\n  return {\r\n    type: types.UPDATE_CONTENT,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUpdateAppRes(data) {\r\n  return {\r\n    type: types.UPDATE_CONTENT_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateContent(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UpdateContentApi.doUpdateApp(data).then(data => {\r\n        dispatch(doUpdateAppRes(data));\r\n        dispatch(doUpdateAppRes(null));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n              title: 'Content updated successfully',\r\n              type: 'success',\r\n              confirmButtonText: 'OK',\r\n              allowOutsideClick: false,\r\n              timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === '') {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  if (values.selectedUser === '') {\r\n    errors.selectedUser = 'Please select Users';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// import { reduxForm } from 'redux-form';\r\nimport './updateContent.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitUpdateContent, doUpdateAppRes } from '../../action/updateContentActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nclass UpdateContentComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countries: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            file: null,\r\n            appData: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // Get country list //\r\n        this.props.getAllCountry();\r\n        const appDetails = this.props.location.state.appData;\r\n        this.setState({\r\n            appData: appDetails,\r\n        }, () => {\r\n            this.setState({\r\n                applicationName: this.state.appData.application_name,\r\n                icon: this.state.appData.icon,\r\n                countries: this.state.appData.selected_countries\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    }, \r\n                    () => {\r\n                        // if (this.state.countries !== '') {\r\n                        //     let selectedcn = [];\r\n                        //     let countryD = this.state.countries.split(',');\r\n                        //     for (let item of this.state.countryList) {\r\n                        //         for (let cn of countryD) {\r\n                        //             if (cn === item.country_name) {\r\n                        //                 selectedcn.push({\r\n                        //                     value: item.country_name,\r\n                        //                     label: item.country_name,\r\n                        //                     original: item\r\n                        //                 })\r\n                        //             }\r\n                        //         }\r\n                        //     }\r\n                        //     this.setState({\r\n                        //         selectedCountry: selectedcn,\r\n                        //     });\r\n                        // }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.updateAppRes){\r\n            if(nextProps.updateAppRes.data.uploadContent ){\r\n                if(nextProps.updateAppRes.data.uploadContent.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/applications');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/content-list');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let selectedCou = [];\r\n            for (let item of this.state.selectedCountry) {\r\n                selectedCou.push(item.value)\r\n            }\r\n            let payloadReq = {\r\n                app_id: this.state.appData.application_id,\r\n                applicationName: this.state.applicationName,\r\n                icon: this.state.icon,\r\n                selectedCountries: selectedCou.join(),\r\n                selectedUser: '',\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Update Content</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Content\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Content</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Update Content</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Content name\" name=\"applicationName\" onChange={(e) => this.handleChange(e)} value={this.state.applicationName} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.applicationName}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <input type=\"file\" className=\"form-control\" name=\"icon\" accept=\"image/*\" onChange={(e) => this.handleFileChange(e)} />\r\n                                                                {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateContentComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    updateAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    updateAppRes: doUpdateAppRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateContent(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UpdateContentComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UpdateCategoryApi {\r\n    static doUpdateApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/updateCategories', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateCategoryApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UpdateCategoryApi from '../api/updateCategoryApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUpdateApp(data) {\r\n  return {\r\n    type: types.UPDATE_CATEGORY,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUpdateAppRes(data) {\r\n  return {\r\n    type: types.UPDATE_CATEGORY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateCategory(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UpdateCategoryApi.doUpdateApp(data).then(data => {\r\n        dispatch(doUpdateAppRes(data));\r\n        dispatch(doUpdateAppRes(null));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n              title: 'Category updated successfully',\r\n              type: 'success',\r\n              confirmButtonText: 'OK',\r\n              allowOutsideClick: false,\r\n              timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === '') {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  if (values.selectedUser === '') {\r\n    errors.selectedUser = 'Please select Users';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// import { reduxForm } from 'redux-form';\r\nimport './updateCategory.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitUpdateCategory, doUpdateAppRes } from '../../action/updateCategoryActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\n\r\nimport {FileUpload} from 'primereact/fileupload';\r\nclass UpdateCategoryComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            category_name: '',\r\n            icon: '',\r\n            countries: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            file: null,\r\n            appData: null,\r\n            iconName:'Choos Icon'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // Get country list //\r\n        this.props.getAllCountry();\r\n        const appDetails = this.props.location.state.appData;\r\n        this.setState({\r\n            appData: appDetails, \r\n        }, () => {\r\n             let iconNameArr =    this.state.appData.icon.split('/');\r\n             console.log(iconNameArr)\r\n            this.setState({\r\n                cat_id:this.state.appData.cat_id,\r\n                category_name: this.state.appData.category_name,\r\n                icon: this.state.appData.icon,\r\n                iconName:iconNameArr[3]\r\n                // countries: this.state.appData.selected_countries\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Props cat\", nextProps)\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.updateAppRes){\r\n            if(nextProps.updateAppRes && nextProps.updateAppRes.data){            \r\n                if(nextProps.updateAppRes.data && nextProps.updateAppRes.data.updateCategory ){\r\n                    if(nextProps.updateAppRes.data.updateCategory && nextProps.updateAppRes.data.updateCategory.success === true){\r\n                        this.setState({\r\n                            isLoader: false\r\n                        });\r\n                        this.props.history.push('/category-list');\r\n                    } \r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/category-list');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n          isLoader:true\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                cat_id: this.state.cat_id,\r\n                category_name: this.state.category_name,\r\n                icon: this.state.icon,\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    fileUploadProcess= () =>{\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n    }\r\n    onBasicUploadAuto = (event) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                iconName:response.path,\r\n                icon:response.imageurl,\r\n                iconError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                iconError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    // countryChange = (item) => {\r\n    //     this.setState({\r\n    //         selectedCountry: item,\r\n    //         country: item.value\r\n    //     });\r\n    // }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Update Category</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Category\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Category</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Update Category</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Content name\" name=\"category_name\" onChange={(e) => this.handleChange(e)} value={this.state.category_name} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.category_name}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"icon\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto={true} chooseLabel={this.state.iconName} />\r\n                                                                \r\n                                                                {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateCategoryComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    updateAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    updateAppRes: doUpdateAppRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateCategory(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UpdateCategoryComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UpdateSubCategoryApi {\r\n    static doUpdateApp(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/updateSubCategories', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateSubCategoryApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UpdateSubCategoryApi from '../api/updateSubCategoryApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUpdateSubApp(data) {\r\n  return {\r\n    type: types.UPDATE_SUBCATEGORY,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUpdateSubAppRes(data) {\r\n  return {\r\n    type: types.UPDATE_SUBCATEGORY_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateSubCategory(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UpdateSubCategoryApi.doUpdateApp(data).then(data => {\r\n        dispatch(doUpdateSubAppRes(data));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n              title: 'Sub Category updated successfully',\r\n              type: 'success',\r\n              confirmButtonText: 'OK',\r\n              allowOutsideClick: false,\r\n              timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === '') {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  if (values.selectedUser === '') {\r\n    errors.selectedUser = 'Please select Users';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// import { reduxForm } from 'redux-form';\r\nimport './updateSubCategory.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitUpdateSubCategory, doUpdateSubAppRes } from '../../action/updateSubCategoryActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport {FileUpload} from 'primereact/fileupload';\r\nclass UpdateSubCategoryComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            category_name: '',\r\n            icon: '',\r\n            countries: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            file: null,\r\n            appData: null,\r\n            iconName:'Choos Icon'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // Get country list //\r\n        console.log(this.props.location.state.appData)\r\n        this.setState({\r\n            appData: this.props.location.state.appData,\r\n        }, () => {\r\n            let iconNameArr =    this.state.appData.icon.split('/');\r\n        console.log(iconNameArr)\r\n            this.setState({\r\n                category_name: this.state.appData.subcategory_name,\r\n                icon: this.state.appData.icon,\r\n                cat_id:this.state.appData.cat_id,\r\n                subcat_id:this.state.appData.subcat_id,\r\n                iconName:iconNameArr[3]\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl,\r\n                        iconName:nextProps.doUploadAppIconRes.data.uploadAppIcon.path\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.updateAppRes){       \r\n            if(nextProps.updateAppRes.data && nextProps.updateAppRes.data.updateSubCategory ){\r\n                if(nextProps.updateAppRes.data.updateSubCategory && nextProps.updateAppRes.data.updateSubCategory.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push({\r\n                        pathname: '/subcategory-list',\r\n                        state: {appData: this.state.cat_id}\r\n                      })\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push({\r\n            pathname: '/subcategory-list',\r\n            state: {appData: this.state.cat_id}\r\n          });\r\n    }\r\n    fileUploadProcess= () =>{\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n    }\r\n    onBasicUploadAuto = (event) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                iconName:response.path,\r\n                icon:response.imageurl,\r\n                iconError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                iconError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n          isLoader:true\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                subcat_id: this.state.subcat_id,\r\n                subcategory_name: this.state.category_name,\r\n                icon: this.state.icon\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item,\r\n            country: item.value\r\n        });\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Update SubCategory</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Sub Category\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Sub Category</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Update Sub Category</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter SubCategory name\" name=\"category_name\" onChange={(e) => this.handleChange(e)} value={this.state.category_name} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.applicationName}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                            <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"icon\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto={true} chooseLabel={this.state.iconName} />\r\n                                                            {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateSubCategoryComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    updateAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    updateAppRes: doUpdateSubAppRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateSubCategory(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UpdateSubCategoryComponent);\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.category_name === '') {\r\n    errors.category_name = 'Please enter sub category name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose sub category icon';\r\n  }\r\n  // if (values.selectedCountry === null) {\r\n  //   errors.selectedCountry = 'Please select countries';\r\n  // }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './createCategory.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitCreateCategory, doCreateCategoryRes } from '../../action/createCategoryActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nclass CreateCategoryComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            category_name: '',\r\n            cat_id: 0,\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null,\r\n            categoryTitle:'Create Category'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.props.getAllUsers();\r\n        if(this.props.location.state.appData){\r\n            const appDetails = this.props.location.state.appData;\r\n            this.setState({\r\n                appData: appDetails,\r\n            }, () => {\r\n                this.setState({\r\n                    cat_id: this.state.appData.cat_id,\r\n                    categoryTitle:'Create Sub Category'\r\n                    // countries: this.state.appData.selected_countries\r\n                })\r\n            });\r\n        }\r\n        \r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Check nextProps\", nextProps)\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createAppRes){\r\n            if(nextProps.createAppRes.data.createCategory ){\r\n                if(nextProps.createAppRes.data.createCategory.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/category-list');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/category-list');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(\"hello\")\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                parent_id: this.state.cat_id,\r\n                category_name: this.state.category_name,\r\n                icon: this.state.icon\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    \r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Category\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Category</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">{this.state.categoryTitle}</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter name\" name=\"category_name\" onChange={(e) => this.handleChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.category_name}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"file\" className=\"form-control\" name=\"icon\" accept=\"image/*\" onChange={(e) => this.handleFileChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedUser}\r\n                                                            onChange={this.userChange}\r\n                                                            options={userListOptions}\r\n                                                            name=\"selectedUser\"\r\n                                                            placeholder=\"Select users\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nCreateCategoryComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createAppRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createAppRes: doCreateCategoryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateCategory(data)),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(CreateCategoryComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\nclass novusBiUpdateArticleApi {\r\n    static donovusBiUpdateArticle(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/updateContant', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    static fetchAllCountry() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/country_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllState(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            countryid: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/state_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n    static fetchAllCity(data) {\r\n        console.log('state id', data);\r\n        const TOKEN = getItem('auth_token');\r\n        let sendBody={\r\n            stateId: data\r\n        }\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(sendBody)\r\n            }\r\n            return fetch(BASE_URL + '/city_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default novusBiUpdateArticleApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport novusBiUpdateArticleApi from '../api/novusBiArticleUpdateApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function donovusBiUpdateArticle(data) {\r\n  return {\r\n    type: types.DO_NOVUSBI_ARTICLE_UPDATE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function donovusBiUpdateArticleRes(data) {\r\n  return {\r\n    type: types.DO_NOVUSBI_ARTICLE_UPDATE_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitnovusBiUpdateArticle(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      novusBiUpdateArticleApi.donovusBiUpdateArticle(data).then(data => {\r\n        \r\n        dispatch(donovusBiUpdateArticleRes(data));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.success === false){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.applicationName === '') {\r\n    errors.applicationName = 'Please enter application name';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose application icon';\r\n  }\r\n  if (values.selectedCountry === null) {\r\n    errors.selectedCountry = 'Please select countries';\r\n  }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './novusBiArticleUpdate.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/novusBiArticleActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions'; \r\nimport { submitnovusBiUpdateArticle, donovusBiUpdateArticleRes } from '../../action/novusBiArticleUpdateActions';\r\nimport { fetchallcategoryList, getallcategoryListRes } from '../../action/allCategoryListActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport {Editor} from \"primereact/editor\";\r\nimport {Button} from \"primereact/button\";\r\nimport 'react-images-uploader/font.css';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Calendar} from 'primereact/calendar';\r\n\r\nimport {MultiSelect} from 'primereact/multiselect';\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {InputSwitch} from 'primereact/inputswitch';\r\nimport {FileUpload} from 'primereact/fileupload';\r\n\r\nimport {Growl} from 'primereact/growl';\r\nconst editorArray = [{'type':\"editor\",'name':\"\"}];\r\nclass NovusBiArticleUpdateComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            applicationName: '',\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            categoryList:[],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null,\r\n            uploader: false,\r\n            editor: true,\r\n            embed: false,\r\n            quote: false,\r\n            showMenu: false,\r\n            showMenuSection: false,\r\n            date:new Date(),\r\n            authorInput:false,\r\n            authorSelect:true,\r\n            comment:true,\r\n            editorArray:editorArray,\r\n            mainTitle:'',\r\n            pdfName:'Search for',\r\n            pdfError:'',\r\n            uploadName:'Upload New',\r\n            uploadUrl:'',\r\n            UploaderError: '',\r\n            authorShow:false,\r\n            categories:[],\r\n            soundShow:false,\r\n            articleShow:true,\r\n            thumbname:'Choose Thumbnail',\r\n            thumbnail:'',\r\n            thumbnailError:''\r\n        }\r\n        \r\n        this.showMenu = this.showMenu.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n        this.showMenuSection = this.showMenuSection.bind(this);\r\n        this.closeMenuSection = this.closeMenuSection.bind(this);\r\n        this.onBasicUploadAuto = this.onBasicUploadAuto.bind(this);\r\n    }\r\n    showMenu(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({ showMenu: true }, () => {\r\n          document.addEventListener('click', this.closeMenu);\r\n        });\r\n      }\r\n      \r\n      closeMenu(event) {\r\n        \r\n        if (!this.dropdownMenu.contains(event.target)) {\r\n          \r\n          this.setState({ showMenu: false }, () => {\r\n            document.removeEventListener('click', this.closeMenu);\r\n          });  \r\n          \r\n        }\r\n      }\r\n\r\n      showMenuSection(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({ showMenuSection: true }, () => {\r\n          document.addEventListener('click', this.closeMenuSection);\r\n        });\r\n      }\r\n      \r\n      closeMenuSection(event) {\r\n        \r\n        if (!this.dropdownMenusec.contains(event.target)) {\r\n          \r\n          this.setState({ showMenuSection: false }, () => {\r\n            document.removeEventListener('click', this.closeMenuSection);\r\n          });  \r\n          \r\n        }\r\n      }\r\n    selectAuthor = (event) => {\r\n        console.log(event)\r\n        if(event.name === 'Other'){\r\n            this.setState({\r\n                authorInput:true,\r\n                authorSelect:false\r\n            })\r\n        }else{\r\n            this.setState({\r\n                authorInput:false,\r\n                authorSelect:true,\r\n                author:event.name,\r\n                authorVal:event\r\n            })\r\n        }\r\n    }\r\n    onBasicUploadAuto(event) {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                pdfName:response.path,\r\n                pdf:response.imageurl,\r\n                pdfError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                pdfError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    onBasicUploadThumb = (event) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                thumbname:response.path,\r\n                thumbnail:response.imageurl,\r\n                thumbnailError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                thumbnailError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.location.state){\r\n            const appDetails = this.props.location.state.appData;\r\n            console.log(appDetails);\r\n            this.setState({\r\n                appData: appDetails,\r\n            }, () => {\r\n                this.setState({\r\n                    contant_id: this.state.appData.contant_id,\r\n                    mainTitle:this.state.appData.title,\r\n                    editorArray:JSON.parse(this.state.appData.contant),\r\n                    type:this.state.appData.type,\r\n                    categories:this.state.appData.categories.split(','),\r\n                    date:new Date(this.state.appData.date),\r\n                    author:this.state.appData.author,\r\n                    heighlight:this.state.appData.higlight == 'true'?true:false,\r\n                    resume:this.state.appData.resume,\r\n                    comment:this.state.appData.comment == 'true'?true:false,\r\n                    authorShow:true,\r\n                    pdf:this.state.appData.pdf,\r\n                    thumbnail:this.state.appData.thumbnail\r\n                    // countries: this.state.appData.selected_countries\r\n                },()=>{\r\n                    console.log(this.state)\r\n                    if(this.state.type == \"All Sounds\"){\r\n                        this.setState({\r\n                            soundShow:true,\r\n                            articleShow:false,\r\n                        })\r\n                    }else{\r\n                        this.setState({\r\n                            soundShow:false,\r\n                            articleShow:true,\r\n                        })\r\n                    }\r\n                })\r\n                \r\n            });\r\n        }\r\n\r\n        this.props.getAllCountry();\r\n        this.props.fetchallcategoryList();\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.allCategoryListRes){\r\n            if(nextProps.allCategoryListRes.data.allCategoryList ){\r\n                if(nextProps.allCategoryListRes.data.allCategoryList.success === true){\r\n                    this.setState({\r\n                        categoryList: nextProps.allCategoryListRes.data.allCategoryList.data\r\n                    },()=>{\r\n                        let cat =[];\r\n                        for(let item of this.state.categoryList){\r\n                            for(let subitem of this.state.categories){\r\n                                if(parseInt(item.id) == parseInt(subitem)){\r\n                                    \r\n                                    console.log(parseInt(item.id),parseInt(subitem))\r\n                                    cat.push(item);\r\n                                    this.setState({\r\n                                        category:cat\r\n                                    })\r\n                                }\r\n                            }\r\n                        }       \r\n                        console.log(this.state.category)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.doAllCountryRes){\r\n            if(nextProps.doAllCountryRes.data.countryList ){\r\n                if(nextProps.doAllCountryRes.data.countryList.success === true){\r\n                    this.setState({\r\n                        countryList: nextProps.doAllCountryRes.data.countryList.countriesList\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.ArticleUpdateAppRes){\r\n            if(nextProps.ArticleUpdateAppRes.data.novusBiArticleUpdate ){\r\n                if(nextProps.ArticleUpdateAppRes.data.novusBiArticleUpdate.success === true){\r\n                    console.log(\"success\")\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/content-list');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/content-list');\r\n    }\r\n    editorBtn = (i, item) => {\r\n        editorArray.splice(i+1, 0, {\r\n            'type':item,'name':\"\"\r\n        });\r\n        editorArray.join();\r\n        this.setState({\r\n            editorArray:editorArray,\r\n            quote:!this.state.quote\r\n        })\r\n        console.log(this.state.editorArray)\r\n    }\r\n    handleSubmit = () => {\r\n        \r\n        const categories = [];\r\n        const catName = [];\r\n        for(let item of this.state.category){\r\n            categories.push(item.id)\r\n            catName.push(item.name)\r\n        }\r\n        const vals = categories.join(',');\r\n        const valsName = catName.join(',');\r\n        this.setState({\r\n          isSubmited: true,\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        console.log(this.state)\r\n        // if (Object.keys(errors).length === 0) {\r\n            \r\n            let payloadReq = {\r\n                contant_id:this.state.contant_id,\r\n                title: this.state.mainTitle,\r\n                content: this.state.editorArray,\r\n                type:this.state.type,\r\n                category:vals,\r\n                categories_name:valsName,\r\n                date:this.state.date,\r\n                author:this.state.author,\r\n                heighlight:this.state.heighlight,\r\n                resume:this.state.resume,\r\n                comment:this.state.comment,\r\n                pdf:this.state.pdf,\r\n                pdfName:this.state.pdf\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        // }\r\n    }\r\n    handleEditorChange(e,index){\r\n        console.log(e)\r\n        this.state.editorArray.map((editor, sidx) => {\r\n            if(sidx === index){\r\n                editor.name = e.htmlValue;\r\n            }\r\n            \r\n          });\r\n        this.setState({ editorArray: this.state.editorArray });\r\n    }\r\n    handleEmbadeChange(e,index){\r\n        console.log(e.target.value)\r\n        this.state.editorArray.map((editor, sidx) => {\r\n            if(sidx === index){\r\n                editor.name = e.target.value;\r\n            }\r\n            \r\n          });\r\n        this.setState({ editorArray: this.state.editorArray });\r\n    }\r\n    fileUploadProcess= () =>{\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n    }\r\n    contentUploadImage(event,index) {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        console.log(\"done\")\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){            \r\n            this.state.editorArray.map((editor, sidx) => {\r\n                if(sidx === index){\r\n                    editor.name = response.imageurl;\r\n                }\r\n                \r\n              });\r\n            this.setState({ \r\n                editorArray: this.state.editorArray,\r\n                quote:!this.state.quote });\r\n        }else{\r\n            \r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    contentUploadAudio = (e) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(e.xhr.response)\r\n        console.log(response)\r\n        if(response.success === true){ \r\n                editorArray[0].name = response.imageurl;    \r\n                this.setState({ \r\n                editorArray: editorArray,                \r\n                uploadName:response.path,\r\n                quote:!this.state.quote },()=>{\r\n                    console.log(this.state.editorArray)\r\n                });\r\n        }else{\r\n            \r\n        } \r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    countryChange = (item) => {\r\n        this.setState({\r\n            selectedCountry: item\r\n        });\r\n    }\r\n    titleChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            mainTitle:e.target.value\r\n        })\r\n    }\r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    remove = (index) =>{\r\n        editorArray.splice(index,1);\r\n        this.setState({\r\n            editorArray:editorArray,\r\n            quote:!this.state.quote\r\n        }) \r\n    }\r\n    \r\n    renderHeader() {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    \r\n    render() {\r\n        const allContent = [\r\n            {name: 'All Articles'},\r\n            {name: 'All Sounds'},\r\n        ];\r\n\r\n            \r\n        \r\n        const authorSection = [\r\n            {name: 'Other'},\r\n            {name: 'Team'},\r\n            {name: 'GuilhermeFray'},\r\n        ];  \r\n        const header = this.renderHeader();\r\n\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const countryListOptions = [];\r\n\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>  \r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Application\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper main_content_bx\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Content List</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Edit Content</span>\r\n                            </div>\r\n                            \r\n                                             \r\n                            <div className=\"row\">\r\n                                <div className=\"col-9 col-md-9\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-7\">\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    \r\n                                                    <InputText className=\"form-control\" value={this.state.mainTitle} placeholder=\"Title of your article\" name=\"mainTitle\" onChange={(e) => this.titleChange(e)} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"col-5\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                            <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"thumbnail\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadThumb} auto={true} chooseLabel={this.state.thumbname} />\r\n                                                            {this.state.thumbnailError != '' && <span className=\"error-message err-msg\">Something went wrong</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.thumbnail} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                    </div>\r\n                                    \r\n                                    {this.state.articleShow && this.state.editorArray.map((editorVal, index) => (\r\n                                    <div className=\"editprofile_content \" key={index}>\r\n                                        <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                        \r\n                                            <div> \r\n                                                <div className=\"row\">   \r\n                                                    { 'editor' === editorVal.type && (                       \r\n                                                    <div className=\"col-12\">\r\n                                                    \r\n                                                        <Editor className=\"editor_cls\" style={{height:'320px'}} value={editorVal.name} onTextChange={(e)=>this.handleEditorChange(e,index)}/>\r\n                                                    \r\n                                                    </div>\r\n                                                    )}\r\n                                                    { 'uploader' === editorVal.type && (\r\n                                                    <div className=\"col-12\">\r\n                                                        <div className=\"image_uploader_main\">\r\n                                                            {\r\n                                                                editorVal.name === '' &&\r\n                                                                <i className=\"fa fa-camera upload_icon\"></i>\r\n                                                            }\r\n                                                            {\r\n                                                                editorVal.name !== '' &&\r\n                                                                <img src={editorVal.name} style={{\"maxWidth\":\"200px\"}} />\r\n                                                            }\r\n                                                            <br /><br />\r\n                                                            <FileUpload mode=\"basic\" onProgress={this.fileUploadProcess} name=\"uploader\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={(e) => this.contentUploadImage(e,index)} auto={true} chooseLabel={this.state.uploadName} />\r\n                                                            \r\n                                                        </div>\r\n                                                        \r\n                                                    </div>  \r\n                                                    )} \r\n                                                    { 'embed' === editorVal.type && (\r\n                                                    <div className=\"col-12\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"image_uploader_main\">\r\n                                                                <i className=\"fa fa-code upload_icon\"></i>\r\n                                                                <p>Paste the embedded code below</p>\r\n                                                                <InputTextarea  onChange={(e)=>this.handleEmbadeChange(e,index)} rows={4} className=\"text_area_article\"></InputTextarea>\r\n                                                                \r\n                                                            </div>                                                            \r\n                                                        </div>\r\n                                                    </div>     \r\n                                                    )}\r\n                                                    { 'quote' === editorVal.type && (\r\n                                                    <div className=\"col-12\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"image_uploader_main\">\r\n                                                                <i className=\"fa fa-quote-right upload_icon\"></i>\r\n                                                                <p>Quotations</p>\r\n                                                                <InputTextarea rows={4}  onChange={(e)=>this.handleEmbadeChange(e,index)} className=\"text_area_article\"></InputTextarea>\r\n                                                                \r\n                                                                </div>\r\n                                                        </div>\r\n                                                    </div>  \r\n                                                    )}                                    \r\n                                                </div>\r\n                                                <div className=\"btn_box_main\">\r\n                                                    <div>\r\n                                                        <p className=\"ever_element pull-left\" ><i className=\"fa fa-plus-circle\"></i> Add An element</p>\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className=\"box_for_tabs\">\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index, 'editor')}><i className=\"fa fa-pencil\"></i> Editor</p>\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index,'uploader')}><i className=\"fa fa-image\"></i> Image</p>\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index,'embed')}><i className=\"fa fa-code\"></i> Embed</p>\r\n                                                        <p className=\"tabs_icons\" onClick={() => this.editorBtn(index, 'quote')}><i className=\"fa fa-quote-right\"></i> Quotations</p>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                {\r\n                                                    index !== 0 && <button className=\"pull-right btn-dark\" onClick={() => this.remove(index)}><i className=\"fa fa-trash\"></i></button>\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    ))}\r\n                                    {this.state.soundShow && this.state.editorArray.map((editorVal, index) => (\r\n                                        <div className=\"editprofile_content\" key={index}>\r\n                                            <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                                <div> \r\n                                                    <div className=\"row\"> \r\n                                                    { 'audio' === editorVal.type && (\r\n                                                        <div className=\"col-12\">\r\n                                                            <div className=\"image_uploader_main\">\r\n                                                            {\r\n                                                                editorVal.name === '' &&\r\n                                                                <i className=\"fa fa-music upload_icon\"></i>\r\n                                                            }\r\n                                                            {\r\n                                                                editorVal.name !== '' &&\r\n                                                                <audio controls>\r\n                                                                    <source src={editorVal.name} type=\"audio/mpeg\" />\r\n                                                                    Your browser does not support the audio element.\r\n                                                                </audio>\r\n                                                            }\r\n                                                            <br /><br />\r\n                                                                <FileUpload mode=\"basic\" onProgress={this.fileUploadProcess} name=\"uploader\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"*\" maxFileSize={100000000} onUpload={(e) => this.contentUploadAudio(e)} auto={true} chooseLabel={this.state.uploadName} />\r\n                                                                \r\n                                                            </div>\r\n                                                            \r\n                                                        </div>  \r\n                                                    )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                   ))} <br />                            \r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                                <div className=\"col-3 col-md-3\">\r\n                                    <div className=\"editprofile_content \">\r\n                                        <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <h3 className=\"heading-sidebar\">Information</h3>\r\n                                                </div>\r\n                                            </div>          \r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Type:</label>\r\n                                                    <h5>{this.state.type}</h5>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Appear at:</label>\r\n                                                    <MultiSelect className=\"all_sec_dropdown all_section_tab form-drop-control\" optionLabel=\"name\" optionValue=\"id\" value={this.state.category} options={this.state.categoryList} onChange={(e) => {this.setState({category: e.value})}} style={{minWidth:'100%'}} filter={true} filterPlaceholder=\"Search\" placeholder=\"Choose\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Date:</label>\r\n                                                    <Calendar className=\"all_sec_dropdown  form-drop-control\" value={this.state.date} onChange={(e) => this.setState({date: e.value})} showIcon={true} showTime={true} showSeconds={true}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Author:</label>\r\n                                                    {\r\n                                                        this.state.authorShow &&\r\n                                                        <h5>{this.state.author}</h5>\r\n                                                    }\r\n                                                    {this.state.authorSelect && !this.state.authorShow  &&\r\n                                                        <Dropdown className=\"all_sec_dropdown all_section_tab form-drop-control\" optionLabel=\"name\" value={this.state.authorVal} options={authorSection} onChange={(e) => this.selectAuthor(e.value)} placeholder=\"Author\"/>\r\n                                                    }\r\n\r\n                                                    {this.state.authorInput && \r\n                                                        <div className=\"p-inputgroup\">\r\n                                                            <InputText className=\"all_sec_dropdown form-control\" placeholder=\"Type Author Name\" name=\"authorName\" onChange={(e) => {this.setState({author: e.target.value})}} />\r\n                                                            <Button icon=\"pi pi-times\" className=\"p-button-danger\" onClick={() => this.setState({\r\n                                                                authorInput:false,\r\n                                                                authorSelect:true})}/>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div> \r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Your List item:</label><br />\r\n                                                    <label><small>Highlight</small></label><br />\r\n                                                    <Checkbox checked={this.state.heighlight} onChange={e => this.setState({heighlight: e.checked})} />\r\n                                                    <label htmlFor=\"heighlight\" className=\"p-checkbox-label\"> Put at the top of the list</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label tooltip=\"This element display depends on the template and / or the platform used\" tooltipoptions={{position: 'top'}}>Resume:</label>\r\n                                                    <InputTextarea rows={5} cols={30} value={this.state.resume} onChange={(e) => this.setState({resume: e.target.value})} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label>Comments:</label><br />\r\n                                                    <InputSwitch checked={this.state.comment} onChange={(e) => this.setState({comment: e.value})} />\r\n                                                </div>\r\n                                            </div>\r\n                                            { this.state.articleShow &&\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 form-group\">\r\n                                                    <label> PDF attached:</label><br />\r\n                                                    \r\n                                                    <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"pdf\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto={true} chooseLabel={this.state.pdfName} />\r\n                                                    {\r\n                                                        this.state.pdfError !== '' &&\r\n                                                        <span style={{'color':'red'}}>{this.state.pdfError}</span>\r\n                                                    }\r\n                                                    \r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                                                             \r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nNovusBiArticleUpdateComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    ArticleUpdateAppRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any,\r\n    allCategoryListRes:PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    ArticleUpdateAppRes: donovusBiUpdateArticleRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes,\r\n    allCategoryListRes:getallcategoryListRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchallcategoryList: () => dispatch(fetchallcategoryList()),\r\n        handleFormSubmit: (data) => dispatch(submitnovusBiUpdateArticle(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(NovusBiArticleUpdateComponent);\r\n","import { getItem } from '../utils/localStore';\r\nimport { BASE_URL } from '../constants';\r\n\r\nclass BannerListApi {  \r\n    static getbannerList() {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'GET',\r\n                headers: ajaxRequestHeaders,\r\n            }\r\n            return fetch(BASE_URL + '/banner_list', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n        }\r\n    }\r\n}  \r\n\r\nexport default BannerListApi;","import * as types from './actionTypes';  \r\nimport bannerListApi from '../api/bannerListApi';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport function getbannerList() {\r\n\r\n  return {\r\n    type: types.BANNER_LIST,\r\n  };\r\n}\r\n\r\nexport function getBannerListRes(data) {  \r\n  return {\r\n    type: types.BANNER_LIST_RES, \r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchBannerList() {\r\n  const TOKEN = getItem('auth_token');\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      bannerListApi.getbannerList().then(data => {\r\n        dispatch(getBannerListRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass DeleteBannerListApi {\r\n    static doDeleteBanner(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'DELETE',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/deleteBanner', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeleteBannerListApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport DeleteBannerListApi from '../api/deleteBannerListApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doDeleteBanner(data) {\r\n  return {\r\n    type: types.DELETE_BANNERLIST,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doDeleteBannerRes(data) {\r\n  return {\r\n    type: types.DELETE_BANNERLIST_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function deleteBannerListRecord(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      DeleteBannerListApi.doDeleteBanner(data).then(data => {\r\n        dispatch(doDeleteBannerRes(data));\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { DataTable } from 'primereact/components/datatable/DataTable';\r\nimport { Column } from 'primereact/components/column/Column';\r\nimport './bannerList.scss';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { fetchBannerList, getBannerListRes } from '../../action/bannerListActions';\r\nimport { deleteBannerListRecord, doDeleteBannerRes } from '../../action/deleteBannerListActions';\r\n// import Swal from 'sweetalert2';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\n// import { getItem } from '../../utils/localStore';\r\nimport Modal from \"react-responsive-modal\";\r\nimport { getItem } from '../../utils/localStore';\r\nimport {Button} from 'primereact/button';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nlet isDelete = false;\r\n\r\nclass BannerListComponent extends React.PureComponent {\r\n  onSelectionChange = (e) => {   \r\n    this.setState({\r\n      BannersList: e.value,\r\n    })\r\n  }\r\n  constructor() { \r\n    super();    \r\n    isDelete = false;\r\n\t\tthis.state = {\r\n    \r\n      // columns: [\r\n      //   { BannerName: 'News',},\r\n      //   { BannerName: 'MARKET KPIs'},\r\n      //   { BannerName: 'IMPORTS STATS'},\r\n      //   { BannerName: 'COMPETITION',},\r\n      //   { BannerName: 'PODCASTS', },\r\n      // ],\r\n\t\t\tisLoader: false,\r\n      globalFilter: '',\r\n      BannerList: [],\r\n      renderUI: false,\r\n      openDeleteAppModal: false,\r\n      isDisabled: false,\r\n    }\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n    this.viewTemplate = this.viewTemplate.bind(this);\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let appData = JSON.parse(getItem('adminAppData'));\r\n    if(appData !== null) {\r\n      appData.banner_id = appData.banner_id;\r\n      appData.title = appData.title;\r\n      appData.banner_image = appData.icon;\r\n      delete appData.cat_id;\r\n      delete appData.Banner_name;\r\n      delete appData.icon;\r\n      let itemArr = [];\r\n      itemArr.push(appData);\r\n      this.setState({\r\n        BannerList: itemArr\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoader:true\r\n      });\r\n      this.props.fetchBannerList();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"props check\", props)\r\n    if (props.BannerListRes) {\r\n\t\t\tif (props.BannerListRes.data && props.BannerListRes.data.bannerList) {\r\n\t\t\t\tif (props.BannerListRes.data.bannerList.success===true) {\r\n          this.setState({\r\n            BannerList: props.BannerListRes.data.bannerList.data,\r\n            isLoader: false,\r\n          });\r\n\t\t\t\t}else{\r\n          this.setState({\r\n            BannerList: [],\r\n            isLoader: false,\r\n          });\r\n        }\r\n\t\t\t}\r\n    }\r\n    if (props.doDeleteBannerRes) {\r\n\t\t\tif (props.doDeleteBannerRes.data && props.doDeleteBannerRes.data.deleteBannerList) {\r\n\t\t\t\tif (props.doDeleteBannerRes.data.deleteBannerList.success && isDelete) {\r\n          isDelete = false;\r\n          this.setState({\r\n            openDeleteAppModal: false,\r\n            isDisabled: false,\r\n            isLoader:false\r\n          });\r\n          this.props.fetchBannerList();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n\r\n  createApp(){\r\n    this.props.history.push('/banner-create')\r\n  }\r\n\r\n  deleteApp = () => {\r\n    this.setState({\r\n      isDisabled: true,\r\n      isLoader:true\r\n    });\r\n    isDelete = true;\r\n    let payload = {\r\n      banner_id: this.state.cat_id\r\n    }\r\n    this.props.deleteBannerListRecord(payload);\r\n  }\r\n\r\n  openDeleteApp = (rowData) => {\r\n    this.setState({\r\n      cat_id: rowData.banner_id,\r\n      openDeleteAppModal: true,\r\n    });\r\n  }\r\n\r\n  cancelDeleteApp = () => {\r\n    this.setState({\r\n      openDeleteAppModal: false,\r\n    });\r\n  }\r\n  actionTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}  className=\"btn-group\">\r\n        <button className=\"btn btn-success\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Banner\" onClick={()=> this.goUpdateApplication(rowData)}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button className=\"btn btn-danger\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete Banner\" onClick={()=> this.openDeleteApp(rowData)}>\r\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n        </button>        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n  actionIconTemplate = (data) => {\r\n    // console.log(data)\r\n    return (\r\n      <div>\r\n        {/* <img src={data.icon} alt='icon' style={{width: 50, height: 50}} /> */}\r\n        <img src={data.banner_image} alt='icon' className=\"image_icons\" />\r\n      </div>\r\n    );\r\n  }\r\n  viewTemplate(rowData, column) {\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <button className=\"btn btn-info\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"View Sub Banner\" onClick={()=> this.getSubBanner(rowData)}>\r\n          <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n        </button>  \r\n      </div>\r\n    );\r\n  }\r\n  goUpdateApplication = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/banner-update',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n  goAddSubBanner = (rowData) => {\r\n    this.props.history.push({\r\n      pathname: '/create-Banner',\r\n      state: {appData: rowData}\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { BannerList } = this.state;\r\n    // console.log(BannerList);\r\n    let userRole = getItem('userRoleId');\r\n    const Header = (<div className=\"offer_head\">Banner List</div>);\r\n    const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n    var tableHeader = <div style={{'textAlign':'left'}}>\r\n                        <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                        <input type=\"text\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" size=\"50\"/>\r\n                    </div>;\r\n    return (\r\n      <div className=\"active_drop_menus\">\r\n      <Loader show={this.state.isLoader} message={spinner}>\r\n        <LayoutWrapper className=\"Banner_hed_page\" title=\"Banner List\" header={Header}>\r\n          <div className=\"application-list_content header_dropopen\">\r\n            <div className=\"customer_inner_content\">\r\n              <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                <div className=\"col-md-12 customertabpanel\">\r\n                  <div className=\"administration_tab\">\r\n                    <div  className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-sm-12 col-md-6\">\r\n                        <div className=\"heading_title\">Banner List</div>\r\n                      </div>\r\n                      {\r\n                        userRole == '1' &&\r\n                        <div className=\"col-sm-12 col-md-6\" style={{ textAlign: 'right' }}>\r\n                          <button className=\"btn btn-placeOrder\" onClick={() => this.createApp()}>Add</button>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                    <div className=\"row pl-pr-15px xs-pl-pr-0px\">\r\n                      <div className=\"col-12 tableheight advisor-tab-tableheight\" style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 15 }}>\r\n                        {/* <DataTable value={BannerList} header={tableHeader} globalFilter={this.state.globalFilter} paginator={true} rows={10}  responsive scrollable  emptyMessage=\"No data found\" sortMode=\"multiple\" editable={false} selection={this.state.BannersList} onSelectionChange={this.onSelectionChange} className=\"novus_datatable\"> */}\r\n                        <DataTable value={BannerList} sortMode=\"multiple\" editable={false} selection={this.state.BannersList} onSelectionChange={this.onSelectionChange} paginator={true} rows={10} rowsPerPageOptions={[5,10,20]} responsive={true}>\r\n\r\n                          <Column className=\"tableCols\" field=\"Image\" body={this.actionIconTemplate}   header=\"Icon\"/>\r\n                          <Column field=\"title\" header=\"Title\"/>\r\n                          <Column className=\"tableCols\" field=\"action\" header=\"Type / Sections\" body={this.actionTemplate} style={{width: '200px'}}/>\r\n                        </DataTable>\r\n\r\n                \r\n                      </div>\r\n                      <Modal open={this.state.openDeleteAppModal} onClose={this.cancelDeleteApp} center>\r\n                        <div className=\"delete-user-modal\">\r\n                          <div className=\"row\" >\r\n                            <div className=\"delete-user-header\"> Are you sure you want to delete </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{width: 500}}>\r\n                          </div>\r\n                          <div className=\"row text_center\" style={{marginTop: 30}}>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\" style={{textAlign: 'right'}}>\r\n                              <button\r\n                                className=\"btn delete-user-yes-btn\"\r\n                                onClick={() => this.deleteApp() }\r\n                                disabled={this.state.isDisabled}\r\n                              >\r\n                                Yes\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-6 col-sm-6\">\r\n                              <button\r\n                                className=\"btn delete-user-no-btn\"\r\n                                onClick={() => this.cancelDeleteApp() }\r\n                              >\r\n                                No\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutWrapper>\r\n      </Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBannerListComponent.propTypes = {\r\n\tBannerListRes: PropTypes.any,\r\n\tdoDeleteBannerRes: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  BannerListRes: getBannerListRes,\r\n\tdoDeleteBannerRes: doDeleteBannerRes,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tfetchBannerList: () => dispatch(fetchBannerList()),\r\n\t\tdeleteBannerListRecord: (data) => dispatch(deleteBannerListRecord(data)),\r\n  };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(BannerListComponent);","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass CreateBannerApi {\r\n    static doCreateBanner(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'POST',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/createBanner', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateBannerApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nimport CreateBannerApi from '../api/createBannerApi';\r\nexport function doCreateBanner(data) {\r\n  return {\r\n    type: types.CREATE_BANNER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doCreateBannerRes(data) {\r\n  return {\r\n    type: types.CREATE_BANNER_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitCreateBanner(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      CreateBannerApi.doCreateBanner(data).then(data => {\r\n        dispatch(doCreateBannerRes(data));\r\n        if (data.success === true) {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if (data.success === false) {\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'success',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.title === '') {\r\n    errors.title = 'Please enter Title';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose Banner Image';\r\n  }\r\n  if (values.description === '') {\r\n    errors.description = 'Please enter Description';\r\n  }\r\n  // if (values.selectedCountry === null) {\r\n  //   errors.selectedCountry = 'Please select countries';\r\n  // }\r\n  // if (values.selectedUser === '') {\r\n  //   errors.selectedUser = 'Please select Users';\r\n  // }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './bannerCreate.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitCreateBanner, doCreateBannerRes } from '../../action/createBannerActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport {FileUpload} from 'primereact/fileupload';\r\nimport Select from 'react-select';\r\nclass BannerCreateComponent extends React.PureComponent {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            title: '',\r\n            description: '',\r\n            icon: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            selectedUser: null,\r\n            file: null,\r\n            categoryTitle:'Create Category',\r\n            iconName:'Choose Icon'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.props.getAllUsers();\r\n        \r\n        \r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            isLoader: false\r\n        });\r\n        console.log(\"Check nextProps\", nextProps)\r\n        if(nextProps.allUsersRes){\r\n            if (nextProps.allUsersRes.data && nextProps.allUsersRes.data.allUser) {\r\n\t\t\t\tif (nextProps.allUsersRes.data.allUser.success===true) {\r\n                    this.setState({\r\n                        usersList: nextProps.allUsersRes.data.allUser.data\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.createBannerRes){\r\n            if(nextProps.createBannerRes.data.createBanner ){\r\n                if(nextProps.createBannerRes.data.createBanner.success === true){\r\n                    this.setState({\r\n                        isLoader: false\r\n                    });\r\n                    this.props.history.push('/banner-list');\r\n                } else {\r\n                    setTimeout(() => { this.setState({\r\n                        isLoader: false\r\n                    }); }, 3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/banner-list');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(\"hello\")\r\n        this.setState({\r\n          isSubmited: true,\r\n        //   isLoader:true\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                title\t\t: this.state.title,\r\n                description\t: this.state.description,\r\n                banner_image: this.state.icon\r\n            }\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    fileUploadProcess= () =>{\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n    }\r\n    onBasicUploadAuto = (event) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                iconName:response.path,\r\n                icon:response.imageurl,\r\n                iconError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                iconError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    \r\n    userChange = (item) => {\r\n        this.setState({\r\n            selectedUser: item\r\n        });\r\n\r\n    }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Create User</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList, usersList } = this.state;\r\n\r\n        // let countryListOptionsItems = [];\r\n        const userListOptions = [];\r\n        if (usersList && usersList.length > 0) {\r\n            usersList.map((item) => {\r\n                userListOptions.push({ value: item.fullname, label: item.fullname, original: item });\r\n                return (\r\n                <option value={item.fullname} id={item.user_id} key={item.user_id}>\r\n                    {item.fullname}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Category\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\"> \r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Category</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">{this.state.categoryTitle}</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    {/* <CreateUserForm handleFormSubmit={(data) => { this.handleSubmit(data) }} /> */}\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter name\" name=\"title\" onChange={(e) => this.handleChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.title}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                            <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"icon\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto={true} chooseLabel={this.state.iconName} />\r\n                                                            {errors && isSubmited && <span className=\"error-message err-msg\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <textarea  className=\"form-control\" placeholder=\"Enter Description\" name=\"description\" onChange={(e) => this.handleChange(e)} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.description}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedUser}\r\n                                                            onChange={this.userChange}\r\n                                                            options={userListOptions}\r\n                                                            name=\"selectedUser\"\r\n                                                            placeholder=\"Select users\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedUser}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nBannerCreateComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    createBannerRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    createBannerRes: doCreateBannerRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitCreateBanner(data)),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(BannerCreateComponent);\r\n","\r\nimport { BASE_URL } from '../constants';\r\nimport { getItem } from '../utils/localStore';\r\nclass UpdateBannerApi {\r\n    static doUpdateBanner(data) {\r\n        const TOKEN = getItem('auth_token');\r\n        try{\r\n            const ajaxRequestHeaders = new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                'Authorization': TOKEN\r\n            });\r\n            let body = {\r\n                method: 'PUT',\r\n                headers: ajaxRequestHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n            return fetch(BASE_URL + '/updateBanner', body).then(response => {\r\n                if (response.status === 401) {\r\n                    localStorage.clear();\r\n                    window.location.href = '/';\r\n                }\r\n                return response.json();\r\n            }).catch(error => {\r\n                return error;\r\n            });\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateBannerApi;\r\n","import * as types from './actionTypes';\r\nimport {logout} from '../helper/helper';\r\nimport UpdateBannerApi from '../api/updateBannerApi';\r\nimport { getItem } from '../utils/localStore';\r\nimport Swal from 'sweetalert2'\r\nexport function doUpdateBanner(data) {\r\n  return {\r\n    type: types.UPDATE_BANNER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function doUpdateBannerRes(data) {\r\n  return {\r\n    type: types.UPDATE_BANNER_RES,\r\n    data\r\n  };\r\n}\r\n\r\nexport function submitUpdateBanner(data) {\r\n  const TOKEN = getItem('auth_token');\r\n\r\n  if(TOKEN){\r\n    return function(dispatch) {\r\n      UpdateBannerApi.doUpdateBanner(data).then(data => {\r\n        dispatch(doUpdateBannerRes(data));\r\n        if(data.success === true){\r\n          Swal.fire({\r\n              title: data.message,\r\n              type: 'success',\r\n              confirmButtonText: 'OK',\r\n              allowOutsideClick: false,\r\n              timer: 3000\r\n          })\r\n        }\r\n        if(data.error){\r\n          Swal.fire({\r\n            title: data.message,\r\n            type: 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            timer: 3000\r\n          })\r\n        } \r\n      }).catch(error => {\r\n        return error\r\n      });\r\n    };\r\n  }else{\r\n    logout()\r\n  }\r\n}\r\n","\r\nexport default function validate(values) {\r\n  const errors = {};\r\n  if (values.title === '') {\r\n    errors.title = 'Please enter Title';\r\n  }\r\n  if (values.icon === '') {\r\n    errors.icon = 'Please choose Banner image';\r\n  }\r\n  if (values.descripiton === '') {\r\n    errors.description = 'Please enter description';\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// import { reduxForm } from 'redux-form';\r\nimport './updateBanner.css';\r\nimport LayoutWrapper from '../../component/LayoutWrapper/';\r\nimport { getAllCountry, doAllCountryRes } from '../../action/createUserActions';\r\nimport { getAllUsers, doUserAllRes } from '../../action/userActions';\r\nimport { submitUpdateBanner, doUpdateBannerRes } from '../../action/updateBannerActions';\r\nimport { uploadAppIcon, doUploadAppIconRes } from '../../action/uploadAppIconActions';\r\nimport loaderImg from '../../assets/images/loader-example.gif';\r\nimport Loader from 'react-loader-advanced';\r\nimport BackIcon from '../../assets/images/icon-left.svg';\r\nimport validate from './formValidation';\r\nimport Select from 'react-select';\r\nimport {FileUpload} from 'primereact/fileupload';\r\n\r\n\r\nlet isDone = false;\r\nclass UpdateBannerComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoader: true,\r\n            isSubmited: false,\r\n            title: '',\r\n            description: '',\r\n            icon: '',\r\n            countries: '',\r\n            countryList: [],\r\n            usersList: [],\r\n            selectedCountry: null,\r\n            file: null,\r\n            appData: null,\r\n            iconName:'Choos Icon'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // Get country list //\r\n        this.props.getAllCountry();\r\n        const appDetails = this.props.location.state.appData;\r\n        this.setState({\r\n            appData: appDetails, \r\n        }, () => {\r\n             let iconNameArr =    this.state.appData.banner_image.split('/');\r\n             console.log(iconNameArr)\r\n            this.setState({\r\n                banner_id:this.state.appData.banner_id,\r\n                title: this.state.appData.title,\r\n                description: this.state.appData.description,\r\n                icon: this.state.appData.banner_image,\r\n                iconName:iconNameArr[3]\r\n                // countries: this.state.appData.selected_countries\r\n            })\r\n        });\r\n        this.setState({\r\n            isLoader: false,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Props cat\", nextProps)\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        if(nextProps.doUploadAppIconRes){\r\n            if (nextProps.doUploadAppIconRes.data && nextProps.doUploadAppIconRes.data.uploadAppIcon) {\r\n\t\t\t\tif (nextProps.doUploadAppIconRes.data.uploadAppIcon.success===true) {\r\n                    this.setState({\r\n                        icon: nextProps.doUploadAppIconRes.data.uploadAppIcon.imageurl\r\n                    });\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        if(nextProps.doUpdateBannerRes){\r\n            if(nextProps.doUpdateBannerRes && nextProps.doUpdateBannerRes.data){            \r\n                if(nextProps.doUpdateBannerRes.data && nextProps.doUpdateBannerRes.data.updateBanner ){\r\n                    if(nextProps.doUpdateBannerRes.data.updateBanner && nextProps.doUpdateBannerRes.data.updateBanner.success === true && \r\n                        isDone === true){\r\n                            isDone= false;\r\n                        this.setState({\r\n                            isLoader: false\r\n                        });\r\n                        this.props.history.push('/Banner-list');\r\n                    } \r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    handleBack = () => {\r\n        this.props.history.push('/Banner-list');\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n          isSubmited: true,\r\n          isLoader:true\r\n        }, () => { });\r\n        validate(this.state);\r\n        const errors = validate(this.state);\r\n        if (Object.keys(errors).length === 0) {\r\n            let payloadReq = {\r\n                banner_id: this.state.banner_id,\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                banner_image: this.state.icon,\r\n            }\r\n            isDone = true;\r\n            this.props.handleFormSubmit(payloadReq);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n        this.setState({\r\n            file: e.target.files\r\n        });\r\n        this.props.uploadImage(e.target.files);\r\n    }\r\n    fileUploadProcess= () =>{\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            isLoader:true\r\n        })\r\n    }\r\n    onBasicUploadAuto = (event) => {\r\n        this.setState({\r\n            isLoader:false\r\n        })\r\n        let response = JSON.parse(event.xhr.response)\r\n        if(response.success === true){\r\n            this.setState({\r\n                iconName:response.path,\r\n                icon:response.imageurl,\r\n                iconError: ''\r\n            })\r\n        }else{\r\n            this.setState({\r\n                iconError:response.message\r\n            })\r\n        }\r\n        // this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n    // countryChange = (item) => {\r\n    //     this.setState({\r\n    //         selectedCountry: item,\r\n    //         country: item.value\r\n    //     });\r\n    // }\r\n    render() {\r\n        const Header = (<div className=\"offer_head\">Update Banner</div>);\r\n        \r\n        const spinner = <span><img src={loaderImg} alt=\"\" /></span>;\r\n        const errors = validate(this.state);\r\n        const { isSubmited, countryList } = this.state;\r\n\r\n        const countryListOptions = [];\r\n        if (countryList && countryList.length > 0) {\r\n            countryList.map((item) => {\r\n                countryListOptions.push({ value: item.country_name, label: item.country_name, original: item });\r\n                return (\r\n                <option value={item.country_name} id={item.id} key={item.id}>\r\n                    {item.country_name}              \r\n                </option>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n                <LayoutWrapper title=\"Create Banner\" header={Header} >\r\n                    <Loader show={this.state.isLoader} message={spinner}>\r\n                        <div className=\"edit_profile_content_wrapper\">\r\n                            <div className=\"createprofile_heading\">\r\n                                <div className=\"createprofile_back_icon_text\"  onClick={this.handleBack}>\r\n                                    <img src={BackIcon} alt=\"\" className=\"createprofile_back_icon\" />\r\n                                    <span className=\"createprofile_go_back\">Back to Banner</span>\r\n                                </div>\r\n                                <span className=\"offering_detail_title\">Update Banner</span>\r\n                            </div>\r\n                            <div className=\"editprofile_content\">\r\n                                <div className=\"form_content_editprofile edit_profile_form_fields_wrapper\">\r\n                                    <div >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Title\" name=\"title\" onChange={(e) => this.handleChange(e)} value={this.state.title} />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.title}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <FileUpload  onProgress={this.fileUploadProcess} mode=\"basic\" name=\"icon\" url=\"http://3.132.68.85:3000/api/file_upload\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto={true} chooseLabel={this.state.iconName} />\r\n                                                                \r\n                                                                {errors && isSubmited && <span className=\"error-message\">{errors.icon}</span>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <img src={this.state.icon} style={{width: 60, height: 60}} alt=\"\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <textarea  className=\"form-control\" placeholder=\"Enter Description\" name=\"description\" onChange={(e) => this.handleChange(e)} value={this.state.description}/>\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.description}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <div className=\"col-6\">\r\n                                                <div className=\"mt-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            value={this.state.selectedCountry}\r\n                                                            onChange={this.countryChange}\r\n                                                            options={countryListOptions}\r\n                                                            name=\"selectedCountries\"\r\n                                                            placeholder=\"Select Countries\"\r\n                                                            isMulti={true}\r\n                                                        />\r\n                                                        {errors && isSubmited && <span className=\"error-message\">{errors.selectedCountry}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={()=> this.handleSubmit()} className=\"btn btn-primary login_button\" >Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Loader>\r\n                </LayoutWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateBannerComponent.propTypes = {\r\n    handleFormSubmit: PropTypes.func,\r\n    doUpdateBannerRes: PropTypes.any,\r\n    doAllCountryRes: PropTypes.any,\r\n    allUsersRes: PropTypes.any,\r\n    doUploadAppIconRes: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    doUpdateBannerRes: doUpdateBannerRes,\r\n    doAllCountryRes: doAllCountryRes,\r\n    allUsersRes: doUserAllRes,\r\n    doUploadAppIconRes: doUploadAppIconRes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleFormSubmit: (data) => dispatch(submitUpdateBanner(data)),\r\n        getAllCountry: () => dispatch(getAllCountry()),\r\n        getAllUsers: () => dispatch(getAllUsers()),\r\n        uploadImage: (file) => dispatch(uploadAppIcon(file)),\r\n    };\r\n}\r\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(withConnect)(UpdateBannerComponent);\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { getItem } from './utils/localStore';\r\nimport LoginComponent from './container/login/login';\r\nimport ForgetPasswordComponent from './container/forgetpassword/forgetPassword';\r\nimport UsersComponent from './container/users/users';\r\nimport ApplicationsComponent from './container/applications/applications';\r\nimport CreateUserComponent from './container/createUser/createUser';\r\nimport EditUserComponent from './container/editUser/editUser';\r\nimport CreateApplicationComponent from './container/createApplication/createApplication';\r\nimport UpdateApplicationComponent from './container/updateApplication/updateApplication';\r\nimport CreateNotificationComponent from './container/createNotification/createNotification';\r\nimport ResetPasswordComponent from './container/passwordreset/reset-password';\r\nimport AdminDetailsComponent from './container/adminDetails/adminDetails';\r\nimport CreateAdminComponent from './container/createAdmin/createAdmin';\r\nimport NovusBiComponent from './container/novusBi/novusBi';\r\nimport NovusBiCreateComponent from './container/novusBiCreate/novusBiCreate';\r\nimport NovusBiArticleComponent from './container/novusBiArticle/novusBiArticle';\r\nimport ContentListComponent from './container/contentList/contentList';\r\nimport CategoryListComponent from './container/categoryList/categoryList';\r\nimport CommentListComponent from './container/commentList/commentList';\r\nimport TrashListComponent from './container/trashList/trashList';\r\nimport SubCategoryList from './container/subCategoryList/subCategoryList';\r\nimport ArticleList from './container/articleList/articleList';\r\nimport UpdateContent from './container/updateContent/updateContent';\r\nimport UpdateCategory from './container/updateCategory/updateCategory';\r\nimport UpdateSubCategory from './container/updateSubCategory/updateSubCategory';\r\nimport CreateCategory from './container/createCategory/createCategory';\r\nimport NovusBiArticleUpdateComponent from './container/novusBiArticleUpdate/novusBiArticleUpdate';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport BannerListComponent from './container/bannerList/bannerList';\r\nimport bannerCreate from './container/bannerCreate/bannerCreate';\r\nimport updateBanner from './container/updateBanner/updateBanner';\r\n\r\nclass App extends React.PureComponent {\r\n  \r\n  render() {\r\n    const TOKEN = getItem('auth_token');\r\n\r\n    if(TOKEN === null) {\r\n      return(\r\n        <React.Fragment>\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact={true} path=\"/\" component={LoginComponent} />\r\n              <Route path=\"/forgetpassword\" component={ForgetPasswordComponent} />\r\n              <Route path=\"/resetpassword/:token\" component={ResetPasswordComponent} />\r\n              <Route render={() => (<Redirect to={'/'} />)} />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </React.Fragment>       \r\n      )\r\n    } else if (TOKEN !== null) {\r\n      return(\r\n        <div>\r\n          <React.Fragment>\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route path=\"/users\" component={UsersComponent} />\r\n                <Route path=\"/createUser\" component={CreateUserComponent} />\r\n                <Route path=\"/updateUser\" component={EditUserComponent} />\r\n                <Route path=\"/applications\" component={ApplicationsComponent} />\r\n                <Route path=\"/create-application\" component={CreateApplicationComponent} />\r\n                <Route path=\"/update-application\" component={UpdateApplicationComponent} />\r\n                <Route path=\"/notification\" component={CreateNotificationComponent} />\r\n                <Route path=\"/adminDetails\" component={AdminDetailsComponent} />\r\n                <Route path=\"/create-admin\" component={CreateAdminComponent} />\r\n                <Route path=\"/novus-bi\" component={NovusBiComponent} />\r\n                <Route path=\"/novus-bi-create\" component={NovusBiCreateComponent} />\r\n                <Route path=\"/novus-bi-article-update\" component={NovusBiArticleUpdateComponent} />\r\n                <Route path=\"/novus-bi-article\" component={NovusBiArticleComponent} />\r\n                <Route path=\"/content-list\" component={ContentListComponent} />\r\n                <Route path=\"/category-list\" component={CategoryListComponent} />   \r\n                <Route path=\"/comment-list\" component={CommentListComponent} />                 \r\n                <Route path=\"/trash-list\" component={TrashListComponent} />\r\n                <Route path=\"/subcategory-list\" component={SubCategoryList} />\r\n                <Route path=\"/article-list\" component={ArticleList} />\r\n                <Route path=\"/update-content\" component={UpdateContent} />\r\n                <Route path=\"/update-category\" component={UpdateCategory} />\r\n                <Route path=\"/update-subcategory\" component={UpdateSubCategory} />\r\n                <Route path=\"/create-category\" component={CreateCategory} />\r\n                <Route path=\"/banner-list\" component={BannerListComponent} />\r\n                <Route path=\"/banner-create\" component={bannerCreate} />\r\n                <Route path=\"/banner-update\" component={updateBanner} />\r\n                \r\n                \r\n                <Route render={() => (<Redirect to=\"/users\" />)} />\r\n                \r\n              </Switch>\r\n            </BrowserRouter>\r\n          </React.Fragment>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {  \r\n    user: [],\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport userReducer from './userReducer';\r\nimport createUserReducer from './createUserReducer';\r\nimport deleteUserReducer from './deleteUserReducer';\r\nimport editUserReducer from './editUserReducer';\r\nimport userListReducer from './userListReducer';\r\nimport userApprovedReducer from './userApprovedReducer';\r\nimport countryListReducer from './countryListReducer';\r\nimport stateListReducer from './stateListReducer';\r\nimport cityListReducer from './cityListReducer';\r\nimport applicationListReducer from './applicationListReducer';\r\nimport createApplicationReducer from './createApplicationReducer';\r\nimport updateApplicationReducer from './updateApplicationReducer';\r\nimport deleteApplicationReducer from './deleteApplicationReducer';\r\nimport uploadAppIconReducer from './uploadAppIconReducer';\r\nimport createNotificationReducer from './createNotificationReducer';\r\nimport userSearchReducer from './userSearchReducer';\r\nimport userApproveAppReducer from './userApproveAppReducer';\r\nimport createAdminReducer from './createAdminReducer';\r\nimport adminDetailsReducer from './adminDetailsReducer';\r\nimport deleteAdminReducer from './deleteAdminReducer';\r\nimport checkUserReducer from './checkUserReducer';\r\nimport novusBiReducer from './novusBiReducer';\r\nimport novusBiCreateReducer from './novusBiCreateReducer';\r\nimport novusBiArticleReducer from './novusBiArticleReducer';\r\nimport contentListReducer from './contentListReducer';\r\nimport categoryListReducer from './categoryListReducer';\r\nimport commentListReducer from './commentListReducer';\r\nimport trashListReducer from './trashListReducer';\r\nimport subCategoryListReducer from './subCategoryListReducer';\r\nimport articleListReducer from './articleListReducer';\r\nimport updateContentReducer from './updateContentReducer';\r\nimport updateCategoryReducer from './updateCategoryReducer';\r\nimport updateSubCategoryReducer from './updateSubCategoryReducer';\r\nimport createCategoryReducer from './createCategoryReducer';\r\nimport deleteCategoryListReducer from './deleteCategoryListReducer';\r\nimport allCategoryListReducer from './allCategoryListReducer';\r\nimport deleteContentReducer from './deleteContentReducer';\r\nimport statusContentReducer from './statusContentReducer';\r\nimport novusBiArticleUpdateReducer from './novusBiArticleUpdateReducer';\r\nimport bannerListReducer from './bannerListReducer';\r\nimport deleteBannerListReducer from './deleteBannerListReducer';\r\nimport createBannerReducer from './createBannerReducer';\r\nimport updateBannerReducer from './updateBannerReducer';\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  user: userReducer,\r\n  allUser: userListReducer,\r\n  createUser: createUserReducer,\r\n  deleteUser: deleteUserReducer,\r\n  updateUser: editUserReducer,\r\n  approvedUser: userApprovedReducer,\r\n  countryList: countryListReducer,\r\n  stateList: stateListReducer,\r\n  cityList: cityListReducer,\r\n  applicationList: applicationListReducer,\r\n  createApplication: createApplicationReducer,\r\n  uploadApplication: updateApplicationReducer,\r\n  deleteApplication: deleteApplicationReducer,\r\n  uploadAppIcon: uploadAppIconReducer,\r\n  createNotification: createNotificationReducer,\r\n  userSearch: userSearchReducer,\r\n  userApproveApp: userApproveAppReducer,\r\n  createAdmin: createAdminReducer,\r\n  adminDetails: adminDetailsReducer,\r\n  deleteAdmin: deleteAdminReducer,\r\n  checkUser: checkUserReducer,\r\n  novusBi: novusBiReducer,\r\n  novusBiCreate: novusBiCreateReducer,\r\n  novusBiArticle: novusBiArticleReducer,\r\n  novusBiArticleUpdate: novusBiArticleUpdateReducer,\r\n  contentList: contentListReducer,\r\n  categoryList: categoryListReducer,\r\n  commentList: commentListReducer,\r\n  trashList: trashListReducer,\r\n  subCategoryList: subCategoryListReducer,\r\n  articleList: articleListReducer,\r\n  updateContent: updateContentReducer,\r\n  updateCategory: updateCategoryReducer,\r\n  updateSubCategory: updateSubCategoryReducer,\r\n  createCategory: createCategoryReducer,\r\n  deleteCategoryList: deleteCategoryListReducer,\r\n  allCategoryList:allCategoryListReducer,  \r\n  doDeleteContentRes: deleteContentReducer,\r\n  doStatusContentRes: statusContentReducer,\r\n  bannerList: bannerListReducer,\r\n  deleteBannerList: deleteBannerListReducer,\r\n  createBanner: createBannerReducer,\r\n  updateBanner: updateBannerReducer,\r\n});","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_LOGIN_RES:\r\n      return action.user\r\n    case types.DO_FORGOTPASSWORD_RES:\r\n      return action.user.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_ALL_USERS_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_CREATE_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_DELETE_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_UPDATE_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_USER_APPROVED_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.FETCH_All_COUNTRY_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.FETCH_All_STATE_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.FETCH_All_CITY_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_All_APPLICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.CREATE_APPLICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPDATE_APPLICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DELETE_APPLICATION_RES:\r\n      return action.data\r\n    default: \r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPLOAD_APPLICATION_ICON_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.CREATE_NOTIFICATION_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_ALL_SEARCH_USERS_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_USER_APPROVE_APP_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_CREATE_ADMIN_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_APP_ADMIN_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DELETE_ADMIN_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DO_CHECK_USER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_NOVUSBI_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_NOVUSBI_CREATE_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_NOVUSBI_ARTICLE_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) {\r\n  switch(action.type) {\r\n    case types.DO_NOVUSBI_ARTICLE_UPDATE_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_CONTENTLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_CATEGORYLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_COMMENTLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_TRASHLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_SUBCATEGORYLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_ARTICLELIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPDATE_CONTENT_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPDATE_CATEGORY_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPDATE_SUBCATEGORY_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.CREATE_CATEGORY_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DELETE_CATEGORYLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.FETCH_ALLCATEGORYLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DELETE_CONTENTLIST_RES:\r\n      return action.data\r\n    default: \r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.STATUS_CONTENTLIST_RES:\r\n      return action.data\r\n    default: \r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.BANNER_LIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.DELETE_BANNERLIST_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.CREATE_BANNER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\nexport default function (state = initialState.user, action) { \r\n  switch(action.type) {\r\n    case types.UPDATE_BANNER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\nimport 'primereact/components/common/Common.css';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport 'react-orgchart/index.css';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n<Provider store={store}><App /></Provider>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}